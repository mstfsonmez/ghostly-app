{"dependencies":[{"name":"engine.io-client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":41,"index":41}}],"key":"47uBFHNKf+pJCWjWFCflLVQYGvc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.url = url;\n  var _engineIoClient = require(_dependencyMap[0], \"engine.io-client\");\n  /**\n   * URL parser.\n   *\n   * @param uri - url\n   * @param path - the request path of the connection\n   * @param loc - An object meant to mimic window.location.\n   *        Defaults to window.location.\n   * @public\n   */\n  function url(uri) {\n    var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    var loc = arguments.length > 2 ? arguments[2] : undefined;\n    var obj = uri;\n    // default to window.location\n    loc = loc || typeof location !== \"undefined\" && location;\n    if (null == uri) uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n      if (\"/\" === uri.charAt(0)) {\n        if (\"/\" === uri.charAt(1)) {\n          uri = loc.protocol + uri;\n        } else {\n          uri = loc.host + uri;\n        }\n      }\n      if (!/^(https?|wss?):\\/\\//.test(uri)) {\n        if (\"undefined\" !== typeof loc) {\n          uri = loc.protocol + \"//\" + uri;\n        } else {\n          uri = \"https://\" + uri;\n        }\n      }\n      // parse\n      obj = (0, _engineIoClient.parse)(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n      if (/^(http|ws)$/.test(obj.protocol)) {\n        obj.port = \"80\";\n      } else if (/^(http|ws)s$/.test(obj.protocol)) {\n        obj.port = \"443\";\n      }\n    }\n    obj.path = obj.path || \"/\";\n    var ipv6 = obj.host.indexOf(\":\") !== -1;\n    var host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href = obj.protocol + \"://\" + host + (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n  }\n});","lineCount":61,"map":[[7,2,11,0,"exports"],[7,9,11,0],[7,10,11,0,"url"],[7,13,11,0],[7,16,11,0,"url"],[7,19,11,0],[8,2,1,0],[8,6,1,0,"_engineIoClient"],[8,21,1,0],[8,24,1,0,"require"],[8,31,1,0],[8,32,1,0,"_dependencyMap"],[8,46,1,0],[9,2,2,0],[10,0,3,0],[11,0,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[18,2,11,7],[18,11,11,16,"url"],[18,14,11,19,"url"],[18,15,11,20,"uri"],[18,18,11,23],[18,20,11,41],[19,4,11,41],[19,8,11,25,"path"],[19,12,11,29],[19,15,11,29,"arguments"],[19,24,11,29],[19,25,11,29,"length"],[19,31,11,29],[19,39,11,29,"arguments"],[19,48,11,29],[19,56,11,29,"undefined"],[19,65,11,29],[19,68,11,29,"arguments"],[19,77,11,29],[19,83,11,32],[19,85,11,34],[20,4,11,34],[20,8,11,36,"loc"],[20,11,11,39],[20,14,11,39,"arguments"],[20,23,11,39],[20,24,11,39,"length"],[20,30,11,39],[20,37,11,39,"arguments"],[20,46,11,39],[20,52,11,39,"undefined"],[20,61,11,39],[21,4,12,4],[21,8,12,8,"obj"],[21,11,12,11],[21,14,12,14,"uri"],[21,17,12,17],[22,4,13,4],[23,4,14,4,"loc"],[23,7,14,7],[23,10,14,10,"loc"],[23,13,14,13],[23,17,14,18],[23,24,14,25,"location"],[23,32,14,33],[23,37,14,38],[23,48,14,49],[23,52,14,53,"location"],[23,60,14,62],[24,4,15,4],[24,8,15,8],[24,12,15,12],[24,16,15,16,"uri"],[24,19,15,19],[24,21,16,8,"uri"],[24,24,16,11],[24,27,16,14,"loc"],[24,30,16,17],[24,31,16,18,"protocol"],[24,39,16,26],[24,42,16,29],[24,46,16,33],[24,49,16,36,"loc"],[24,52,16,39],[24,53,16,40,"host"],[24,57,16,44],[25,4,17,4],[26,4,18,4],[26,8,18,8],[26,15,18,15,"uri"],[26,18,18,18],[26,23,18,23],[26,31,18,31],[26,33,18,33],[27,6,19,8],[27,10,19,12],[27,13,19,15],[27,18,19,20,"uri"],[27,21,19,23],[27,22,19,24,"charAt"],[27,28,19,30],[27,29,19,31],[27,30,19,32],[27,31,19,33],[27,33,19,35],[28,8,20,12],[28,12,20,16],[28,15,20,19],[28,20,20,24,"uri"],[28,23,20,27],[28,24,20,28,"charAt"],[28,30,20,34],[28,31,20,35],[28,32,20,36],[28,33,20,37],[28,35,20,39],[29,10,21,16,"uri"],[29,13,21,19],[29,16,21,22,"loc"],[29,19,21,25],[29,20,21,26,"protocol"],[29,28,21,34],[29,31,21,37,"uri"],[29,34,21,40],[30,8,22,12],[30,9,22,13],[30,15,23,17],[31,10,24,16,"uri"],[31,13,24,19],[31,16,24,22,"loc"],[31,19,24,25],[31,20,24,26,"host"],[31,24,24,30],[31,27,24,33,"uri"],[31,30,24,36],[32,8,25,12],[33,6,26,8],[34,6,27,8],[34,10,27,12],[34,11,27,13],[34,32,27,34],[34,33,27,35,"test"],[34,37,27,39],[34,38,27,40,"uri"],[34,41,27,43],[34,42,27,44],[34,44,27,46],[35,8,28,12],[35,12,28,16],[35,23,28,27],[35,28,28,32],[35,35,28,39,"loc"],[35,38,28,42],[35,40,28,44],[36,10,29,16,"uri"],[36,13,29,19],[36,16,29,22,"loc"],[36,19,29,25],[36,20,29,26,"protocol"],[36,28,29,34],[36,31,29,37],[36,35,29,41],[36,38,29,44,"uri"],[36,41,29,47],[37,8,30,12],[37,9,30,13],[37,15,31,17],[38,10,32,16,"uri"],[38,13,32,19],[38,16,32,22],[38,26,32,32],[38,29,32,35,"uri"],[38,32,32,38],[39,8,33,12],[40,6,34,8],[41,6,35,8],[42,6,36,8,"obj"],[42,9,36,11],[42,12,36,14],[42,16,36,14,"parse"],[42,31,36,19],[42,32,36,19,"parse"],[42,37,36,19],[42,39,36,20,"uri"],[42,42,36,23],[42,43,36,24],[43,4,37,4],[44,4,38,4],[45,4,39,4],[45,8,39,8],[45,9,39,9,"obj"],[45,12,39,12],[45,13,39,13,"port"],[45,17,39,17],[45,19,39,19],[46,6,40,8],[46,10,40,12],[46,23,40,25],[46,24,40,26,"test"],[46,28,40,30],[46,29,40,31,"obj"],[46,32,40,34],[46,33,40,35,"protocol"],[46,41,40,43],[46,42,40,44],[46,44,40,46],[47,8,41,12,"obj"],[47,11,41,15],[47,12,41,16,"port"],[47,16,41,20],[47,19,41,23],[47,23,41,27],[48,6,42,8],[48,7,42,9],[48,13,43,13],[48,17,43,17],[48,31,43,31],[48,32,43,32,"test"],[48,36,43,36],[48,37,43,37,"obj"],[48,40,43,40],[48,41,43,41,"protocol"],[48,49,43,49],[48,50,43,50],[48,52,43,52],[49,8,44,12,"obj"],[49,11,44,15],[49,12,44,16,"port"],[49,16,44,20],[49,19,44,23],[49,24,44,28],[50,6,45,8],[51,4,46,4],[52,4,47,4,"obj"],[52,7,47,7],[52,8,47,8,"path"],[52,12,47,12],[52,15,47,15,"obj"],[52,18,47,18],[52,19,47,19,"path"],[52,23,47,23],[52,27,47,27],[52,30,47,30],[53,4,48,4],[53,8,48,10,"ipv6"],[53,12,48,14],[53,15,48,17,"obj"],[53,18,48,20],[53,19,48,21,"host"],[53,23,48,25],[53,24,48,26,"indexOf"],[53,31,48,33],[53,32,48,34],[53,35,48,37],[53,36,48,38],[53,41,48,43],[53,42,48,44],[53,43,48,45],[54,4,49,4],[54,8,49,10,"host"],[54,12,49,14],[54,15,49,17,"ipv6"],[54,19,49,21],[54,22,49,24],[54,25,49,27],[54,28,49,30,"obj"],[54,31,49,33],[54,32,49,34,"host"],[54,36,49,38],[54,39,49,41],[54,42,49,44],[54,45,49,47,"obj"],[54,48,49,50],[54,49,49,51,"host"],[54,53,49,55],[55,4,50,4],[56,4,51,4,"obj"],[56,7,51,7],[56,8,51,8,"id"],[56,10,51,10],[56,13,51,13,"obj"],[56,16,51,16],[56,17,51,17,"protocol"],[56,25,51,25],[56,28,51,28],[56,33,51,33],[56,36,51,36,"host"],[56,40,51,40],[56,43,51,43],[56,46,51,46],[56,49,51,49,"obj"],[56,52,51,52],[56,53,51,53,"port"],[56,57,51,57],[56,60,51,60,"path"],[56,64,51,64],[57,4,52,4],[58,4,53,4,"obj"],[58,7,53,7],[58,8,53,8,"href"],[58,12,53,12],[58,15,54,8,"obj"],[58,18,54,11],[58,19,54,12,"protocol"],[58,27,54,20],[58,30,55,12],[58,35,55,17],[58,38,56,12,"host"],[58,42,56,16],[58,46,57,13,"loc"],[58,49,57,16],[58,53,57,20,"loc"],[58,56,57,23],[58,57,57,24,"port"],[58,61,57,28],[58,66,57,33,"obj"],[58,69,57,36],[58,70,57,37,"port"],[58,74,57,41],[58,77,57,44],[58,79,57,46],[58,82,57,49],[58,85,57,52],[58,88,57,55,"obj"],[58,91,57,58],[58,92,57,59,"port"],[58,96,57,63],[58,97,57,64],[59,4,58,4],[59,11,58,11,"obj"],[59,14,58,14],[60,2,59,0],[61,0,59,1],[61,3]],"functionMap":{"names":["<global>","url"],"mappings":"AAA;OCU;CDgD"},"hasCjsExports":false},"type":"js/module"}]}