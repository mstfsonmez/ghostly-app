{"dependencies":[{"name":"@babel/runtime/helpers/superPropGet","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"b4Lel0pEiTM8mvZZX/d05uR+OmU=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/readOnlyError","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"tW9vjPH6bEH6zBBMaoehmzXhDcQ=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/callSuper","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"378KbBHdmndC3iMXZ2Ix8oB3LeE=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"],"imports":1}},{"name":"./transports/index.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":73,"index":73}}],"key":"7CLKJUHLWOUmn3xjjCK2YLx/ESU=","exportNames":["*"],"imports":1}},{"name":"./util.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":74},"end":{"line":2,"column":62,"index":136}}],"key":"+UpHPazG/Yk8JnTjB6d2Eo+vUl4=","exportNames":["*"],"imports":1}},{"name":"./contrib/parseqs.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":137},"end":{"line":3,"column":46,"index":183}}],"key":"BJ+q1MtlpK8TmoXWscM6udPVjkM=","exportNames":["*"],"imports":1}},{"name":"./contrib/parseuri.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":184},"end":{"line":4,"column":46,"index":230}}],"key":"5FHL6vc7rbDf51XGIsZLRdNOJXo=","exportNames":["*"],"imports":1}},{"name":"@socket.io/component-emitter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":231},"end":{"line":5,"column":55,"index":286}}],"key":"nWmouVdWEVSQD2UwM6teY1JyKBM=","exportNames":["*"],"imports":1}},{"name":"engine.io-parser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":287},"end":{"line":6,"column":44,"index":331}}],"key":"IB5HY76c7xC+tDEPCV8b/nK76DU=","exportNames":["*"],"imports":1}},{"name":"./globals.node.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":332},"end":{"line":7,"column":82,"index":414}}],"key":"9IvwYHBhshdIr/kWH4ou0H+0FaM=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"SocketWithoutUpgrade\", {\n    enumerable: true,\n    get: function () {\n      return SocketWithoutUpgrade;\n    }\n  });\n  Object.defineProperty(exports, \"SocketWithUpgrade\", {\n    enumerable: true,\n    get: function () {\n      return SocketWithUpgrade;\n    }\n  });\n  Object.defineProperty(exports, \"Socket\", {\n    enumerable: true,\n    get: function () {\n      return Socket;\n    }\n  });\n  var _babelRuntimeHelpersSuperPropGet = require(_dependencyMap[0], \"@babel/runtime/helpers/superPropGet\");\n  var _superPropGet = _interopDefault(_babelRuntimeHelpersSuperPropGet);\n  require(_dependencyMap[1], \"@babel/runtime/helpers/readOnlyError\");\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[3], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _babelRuntimeHelpersCallSuper = require(_dependencyMap[4], \"@babel/runtime/helpers/callSuper\");\n  var _callSuper = _interopDefault(_babelRuntimeHelpersCallSuper);\n  var _babelRuntimeHelpersInherits = require(_dependencyMap[5], \"@babel/runtime/helpers/inherits\");\n  var _inherits = _interopDefault(_babelRuntimeHelpersInherits);\n  var _transportsIndexJs = require(_dependencyMap[6], \"./transports/index.js\");\n  var _utilJs = require(_dependencyMap[7], \"./util.js\");\n  var _contribParseqsJs = require(_dependencyMap[8], \"./contrib/parseqs.js\");\n  var _contribParseuriJs = require(_dependencyMap[9], \"./contrib/parseuri.js\");\n  var _socketIoComponentEmitter = require(_dependencyMap[10], \"@socket.io/component-emitter\");\n  var _engineIoParser = require(_dependencyMap[11], \"engine.io-parser\");\n  var _globalsNodeJs = require(_dependencyMap[12], \"./globals.node.js\");\n  var withEventListeners = typeof addEventListener === \"function\" && typeof removeEventListener === \"function\";\n  var OFFLINE_EVENT_LISTENERS = [];\n  if (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n      OFFLINE_EVENT_LISTENERS.forEach(listener => listener());\n    }, false);\n  }\n  /**\n   * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n   * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n   *\n   * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n   * successfully establishes the connection.\n   *\n   * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n   *\n   * @example\n   * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n   *\n   * const socket = new SocketWithoutUpgrade({\n   *   transports: [WebSocket]\n   * });\n   *\n   * socket.on(\"open\", () => {\n   *   socket.send(\"hello\");\n   * });\n   *\n   * @see SocketWithUpgrade\n   * @see Socket\n   */\n  var SocketWithoutUpgrade = /*#__PURE__*/function (_Emitter) {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    function SocketWithoutUpgrade(uri, opts) {\n      var _this;\n      (0, _classCallCheck.default)(this, SocketWithoutUpgrade);\n      _this = (0, _callSuper.default)(this, SocketWithoutUpgrade);\n      _this.binaryType = _globalsNodeJs.defaultBinaryType;\n      _this.writeBuffer = [];\n      _this._prevBufferLen = 0;\n      _this._pingInterval = -1;\n      _this._pingTimeout = -1;\n      _this._maxPayload = -1;\n      /**\n       * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n       * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n       */\n      _this._pingTimeoutTime = Infinity;\n      if (uri && \"object\" === typeof uri) {\n        opts = uri;\n        uri = null;\n      }\n      if (uri) {\n        var parsedUri = (0, _contribParseuriJs.parse)(uri);\n        opts.hostname = parsedUri.host;\n        opts.secure = parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n        opts.port = parsedUri.port;\n        if (parsedUri.query) opts.query = parsedUri.query;\n      } else if (opts.host) {\n        opts.hostname = (0, _contribParseuriJs.parse)(opts.host).host;\n      }\n      (0, _utilJs.installTimerFunctions)(_this, opts);\n      _this.secure = null != opts.secure ? opts.secure : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n      if (opts.hostname && !opts.port) {\n        // if no port is specified manually, use the protocol default\n        opts.port = _this.secure ? \"443\" : \"80\";\n      }\n      _this.hostname = opts.hostname || (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n      _this.port = opts.port || (typeof location !== \"undefined\" && location.port ? location.port : _this.secure ? \"443\" : \"80\");\n      _this.transports = [];\n      _this._transportsByName = {};\n      opts.transports.forEach(t => {\n        var transportName = t.prototype.name;\n        _this.transports.push(transportName);\n        _this._transportsByName[transportName] = t;\n      });\n      _this.opts = Object.assign({\n        path: \"/engine.io\",\n        agent: false,\n        withCredentials: false,\n        upgrade: true,\n        timestampParam: \"t\",\n        rememberUpgrade: false,\n        addTrailingSlash: true,\n        rejectUnauthorized: true,\n        perMessageDeflate: {\n          threshold: 1024\n        },\n        transportOptions: {},\n        closeOnBeforeunload: false\n      }, opts);\n      _this.opts.path = _this.opts.path.replace(/\\/$/, \"\") + (_this.opts.addTrailingSlash ? \"/\" : \"\");\n      if (typeof _this.opts.query === \"string\") {\n        _this.opts.query = (0, _contribParseqsJs.decode)(_this.opts.query);\n      }\n      if (withEventListeners) {\n        if (_this.opts.closeOnBeforeunload) {\n          // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n          // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n          // closed/reloaded)\n          _this._beforeunloadEventListener = () => {\n            if (_this.transport) {\n              // silently close the transport\n              _this.transport.removeAllListeners();\n              _this.transport.close();\n            }\n          };\n          addEventListener(\"beforeunload\", _this._beforeunloadEventListener, false);\n        }\n        if (_this.hostname !== \"localhost\") {\n          _this._offlineEventListener = () => {\n            _this._onClose(\"transport close\", {\n              description: \"network connection lost\"\n            });\n          };\n          OFFLINE_EVENT_LISTENERS.push(_this._offlineEventListener);\n        }\n      }\n      if (_this.opts.withCredentials) {\n        _this._cookieJar = (0, _globalsNodeJs.createCookieJar)();\n      }\n      _this._open();\n      return _this;\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    (0, _inherits.default)(SocketWithoutUpgrade, _Emitter);\n    return (0, _createClass.default)(SocketWithoutUpgrade, [{\n      key: \"createTransport\",\n      value: function createTransport(name) {\n        var query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = _engineIoParser.protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id) query.sid = this.id;\n        var opts = Object.assign({}, this.opts, {\n          query,\n          socket: this,\n          hostname: this.hostname,\n          secure: this.secure,\n          port: this.port\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n      }\n      /**\n       * Initializes transport to use and starts probe.\n       *\n       * @private\n       */\n    }, {\n      key: \"_open\",\n      value: function _open() {\n        if (this.transports.length === 0) {\n          // Emit error on next tick so it can be listened to\n          this.setTimeoutFn(() => {\n            this.emitReserved(\"error\", \"No transports available\");\n          }, 0);\n          return;\n        }\n        var transportName = this.opts.rememberUpgrade && SocketWithoutUpgrade.priorWebsocketSuccess && this.transports.indexOf(\"websocket\") !== -1 ? \"websocket\" : this.transports[0];\n        this.readyState = \"opening\";\n        var transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n      }\n      /**\n       * Sets the current transport. Disables the existing one (if any).\n       *\n       * @private\n       */\n    }, {\n      key: \"setTransport\",\n      value: function setTransport(transport) {\n        if (this.transport) {\n          this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport.on(\"drain\", this._onDrain.bind(this)).on(\"packet\", this._onPacket.bind(this)).on(\"error\", this._onError.bind(this)).on(\"close\", reason => this._onClose(\"transport close\", reason));\n      }\n      /**\n       * Called when connection is deemed open.\n       *\n       * @private\n       */\n    }, {\n      key: \"onOpen\",\n      value: function onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n      }\n      /**\n       * Handles a packet.\n       *\n       * @private\n       */\n    }, {\n      key: \"_onPacket\",\n      value: function _onPacket(packet) {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState || \"closing\" === this.readyState) {\n          this.emitReserved(\"packet\", packet);\n          // Socket is live - any packet counts\n          this.emitReserved(\"heartbeat\");\n          switch (packet.type) {\n            case \"open\":\n              this.onHandshake(JSON.parse(packet.data));\n              break;\n            case \"ping\":\n              this._sendPacket(\"pong\");\n              this.emitReserved(\"ping\");\n              this.emitReserved(\"pong\");\n              this._resetPingTimeout();\n              break;\n            case \"error\":\n              var err = new Error(\"server error\");\n              // @ts-ignore\n              err.code = packet.data;\n              this._onError(err);\n              break;\n            case \"message\":\n              this.emitReserved(\"data\", packet.data);\n              this.emitReserved(\"message\", packet.data);\n              break;\n          }\n        } else {}\n      }\n      /**\n       * Called upon handshake completion.\n       *\n       * @param {Object} data - handshake obj\n       * @private\n       */\n    }, {\n      key: \"onHandshake\",\n      value: function onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState) return;\n        this._resetPingTimeout();\n      }\n      /**\n       * Sets and resets ping timeout timer based on server pings.\n       *\n       * @private\n       */\n    }, {\n      key: \"_resetPingTimeout\",\n      value: function _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        var delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n          this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n          this._pingTimeoutTimer.unref();\n        }\n      }\n      /**\n       * Called on `drain` event\n       *\n       * @private\n       */\n    }, {\n      key: \"_onDrain\",\n      value: function _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n          this.emitReserved(\"drain\");\n        } else {\n          this.flush();\n        }\n      }\n      /**\n       * Flush write buffers.\n       *\n       * @private\n       */\n    }, {\n      key: \"flush\",\n      value: function flush() {\n        if (\"closed\" !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {\n          var packets = this._getWritablePackets();\n          this.transport.send(packets);\n          // keep track of current length of writeBuffer\n          // splice writeBuffer and callbackBuffer on `drain`\n          this._prevBufferLen = packets.length;\n          this.emitReserved(\"flush\");\n        }\n      }\n      /**\n       * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n       * long-polling)\n       *\n       * @private\n       */\n    }, {\n      key: \"_getWritablePackets\",\n      value: function _getWritablePackets() {\n        var shouldCheckPayloadSize = this._maxPayload && this.transport.name === \"polling\" && this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n          return this.writeBuffer;\n        }\n        var payloadSize = 1; // first packet type\n        for (var i = 0; i < this.writeBuffer.length; i++) {\n          var data = this.writeBuffer[i].data;\n          if (data) {\n            payloadSize += (0, _utilJs.byteLength)(data);\n          }\n          if (i > 0 && payloadSize > this._maxPayload) {\n            return this.writeBuffer.slice(0, i);\n          }\n          payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n      }\n      /**\n       * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n       *\n       * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n       * `write()` method then the message would not be buffered by the Socket.IO client.\n       *\n       * @return {boolean}\n       * @private\n       */\n      /* private */\n    }, {\n      key: \"_hasPingExpired\",\n      value: function _hasPingExpired() {\n        if (!this._pingTimeoutTime) return true;\n        var hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n          this._pingTimeoutTime = 0;\n          (0, _globalsNodeJs.nextTick)(() => {\n            this._onClose(\"ping timeout\");\n          }, this.setTimeoutFn);\n        }\n        return hasExpired;\n      }\n      /**\n       * Sends a message.\n       *\n       * @param {String} msg - message.\n       * @param {Object} options.\n       * @param {Function} fn - callback function.\n       * @return {Socket} for chaining.\n       */\n    }, {\n      key: \"write\",\n      value: function write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n      }\n      /**\n       * Sends a message. Alias of {@link Socket#write}.\n       *\n       * @param {String} msg - message.\n       * @param {Object} options.\n       * @param {Function} fn - callback function.\n       * @return {Socket} for chaining.\n       */\n    }, {\n      key: \"send\",\n      value: function send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n      }\n      /**\n       * Sends a packet.\n       *\n       * @param {String} type: packet type.\n       * @param {String} data.\n       * @param {Object} options.\n       * @param {Function} fn - callback function.\n       * @private\n       */\n    }, {\n      key: \"_sendPacket\",\n      value: function _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n          fn = data;\n          data = undefined;\n        }\n        if (\"function\" === typeof options) {\n          fn = options;\n          options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n          return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        var packet = {\n          type: type,\n          data: data,\n          options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn) this.once(\"flush\", fn);\n        this.flush();\n      }\n      /**\n       * Closes the connection.\n       */\n    }, {\n      key: \"close\",\n      value: function close() {\n        var close = () => {\n          this._onClose(\"forced close\");\n          this.transport.close();\n        };\n        var cleanupAndClose = () => {\n          this.off(\"upgrade\", cleanupAndClose);\n          this.off(\"upgradeError\", cleanupAndClose);\n          close();\n        };\n        var waitForUpgrade = () => {\n          // wait for upgrade to finish since we can't send packets while pausing a transport\n          this.once(\"upgrade\", cleanupAndClose);\n          this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n          this.readyState = \"closing\";\n          if (this.writeBuffer.length) {\n            this.once(\"drain\", () => {\n              if (this.upgrading) {\n                waitForUpgrade();\n              } else {\n                close();\n              }\n            });\n          } else if (this.upgrading) {\n            waitForUpgrade();\n          } else {\n            close();\n          }\n        }\n        return this;\n      }\n      /**\n       * Called upon transport error\n       *\n       * @private\n       */\n    }, {\n      key: \"_onError\",\n      value: function _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports && this.transports.length > 1 && this.readyState === \"opening\") {\n          this.transports.shift();\n          return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n      }\n      /**\n       * Called upon transport close.\n       *\n       * @private\n       */\n    }, {\n      key: \"_onClose\",\n      value: function _onClose(reason, description) {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState || \"closing\" === this.readyState) {\n          // clear timers\n          this.clearTimeoutFn(this._pingTimeoutTimer);\n          // stop event from firing again for transport\n          this.transport.removeAllListeners(\"close\");\n          // ensure transport won't stay open\n          this.transport.close();\n          // ignore further transport communication\n          this.transport.removeAllListeners();\n          if (withEventListeners) {\n            if (this._beforeunloadEventListener) {\n              removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this._offlineEventListener) {\n              var i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n              if (i !== -1) {\n                OFFLINE_EVENT_LISTENERS.splice(i, 1);\n              }\n            }\n          }\n          // set ready state\n          this.readyState = \"closed\";\n          // clear session id\n          this.id = null;\n          // emit close event\n          this.emitReserved(\"close\", reason, description);\n          // clean buffers after, so users can still\n          // grab the buffers on `close` event\n          this.writeBuffer = [];\n          this._prevBufferLen = 0;\n        }\n      }\n    }]);\n  }(_socketIoComponentEmitter.Emitter);\n  SocketWithoutUpgrade.protocol = _engineIoParser.protocol;\n  /**\n   * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n   * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n   *\n   * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n   * low-level transport, it will try to upgrade to a better transport.\n   *\n   * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n   *\n   * @example\n   * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n   *\n   * const socket = new SocketWithUpgrade({\n   *   transports: [WebSocket]\n   * });\n   *\n   * socket.on(\"open\", () => {\n   *   socket.send(\"hello\");\n   * });\n   *\n   * @see SocketWithoutUpgrade\n   * @see Socket\n   */\n  var SocketWithUpgrade = /*#__PURE__*/function (_SocketWithoutUpgrade) {\n    function SocketWithUpgrade() {\n      var _this2;\n      (0, _classCallCheck.default)(this, SocketWithUpgrade);\n      _this2 = (0, _callSuper.default)(this, SocketWithUpgrade, arguments);\n      _this2._upgrades = [];\n      return _this2;\n    }\n    (0, _inherits.default)(SocketWithUpgrade, _SocketWithoutUpgrade);\n    return (0, _createClass.default)(SocketWithUpgrade, [{\n      key: \"onOpen\",\n      value: function onOpen() {\n        (0, _superPropGet.default)(SocketWithUpgrade, \"onOpen\", this, 3)([]);\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n          for (var i = 0; i < this._upgrades.length; i++) {\n            this._probe(this._upgrades[i]);\n          }\n        }\n      }\n      /**\n       * Probes a transport.\n       *\n       * @param {String} name - transport name\n       * @private\n       */\n    }, {\n      key: \"_probe\",\n      value: function _probe(name) {\n        var transport = this.createTransport(name);\n        var failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        var onTransportOpen = () => {\n          if (failed) return;\n          transport.send([{\n            type: \"ping\",\n            data: \"probe\"\n          }]);\n          transport.once(\"packet\", msg => {\n            if (failed) return;\n            if (\"pong\" === msg.type && \"probe\" === msg.data) {\n              this.upgrading = true;\n              this.emitReserved(\"upgrading\", transport);\n              if (!transport) return;\n              SocketWithoutUpgrade.priorWebsocketSuccess = \"websocket\" === transport.name;\n              this.transport.pause(() => {\n                if (failed) return;\n                if (\"closed\" === this.readyState) return;\n                cleanup();\n                this.setTransport(transport);\n                transport.send([{\n                  type: \"upgrade\"\n                }]);\n                this.emitReserved(\"upgrade\", transport);\n                transport = null;\n                this.upgrading = false;\n                this.flush();\n              });\n            } else {\n              var err = new Error(\"probe error\");\n              // @ts-ignore\n              err.transport = transport.name;\n              this.emitReserved(\"upgradeError\", err);\n            }\n          });\n        };\n        function freezeTransport() {\n          if (failed) return;\n          // Any callback called by transport should be ignored since now\n          failed = true;\n          cleanup();\n          transport.close();\n          transport = null;\n        }\n        // Handle any error that happens while probing\n        var onerror = err => {\n          var error = new Error(\"probe error: \" + err);\n          // @ts-ignore\n          error.transport = transport.name;\n          freezeTransport();\n          this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n          onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n          onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n          if (transport && to.name !== transport.name) {\n            freezeTransport();\n          }\n        }\n        // Remove all listeners on the transport and on self\n        var cleanup = () => {\n          transport.removeListener(\"open\", onTransportOpen);\n          transport.removeListener(\"error\", onerror);\n          transport.removeListener(\"close\", onTransportClose);\n          this.off(\"close\", onclose);\n          this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 && name !== \"webtransport\") {\n          // favor WebTransport\n          this.setTimeoutFn(() => {\n            if (!failed) {\n              transport.open();\n            }\n          }, 200);\n        } else {\n          transport.open();\n        }\n      }\n    }, {\n      key: \"onHandshake\",\n      value: function onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        (0, _superPropGet.default)(SocketWithUpgrade, \"onHandshake\", this, 3)([data]);\n      }\n      /**\n       * Filters upgrades, returning only those matching client transports.\n       *\n       * @param {Array} upgrades - server upgrades\n       * @private\n       */\n    }, {\n      key: \"_filterUpgrades\",\n      value: function _filterUpgrades(upgrades) {\n        var filteredUpgrades = [];\n        for (var i = 0; i < upgrades.length; i++) {\n          if (~this.transports.indexOf(upgrades[i])) filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n      }\n    }]);\n  }(SocketWithoutUpgrade);\n  /**\n   * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n   * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n   *\n   * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n   * low-level transport, it will try to upgrade to a better transport.\n   *\n   * @example\n   * import { Socket } from \"engine.io-client\";\n   *\n   * const socket = new Socket();\n   *\n   * socket.on(\"open\", () => {\n   *   socket.send(\"hello\");\n   * });\n   *\n   * @see SocketWithoutUpgrade\n   * @see SocketWithUpgrade\n   */\n  var Socket = /*#__PURE__*/function (_SocketWithUpgrade) {\n    function Socket(uri) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      (0, _classCallCheck.default)(this, Socket);\n      var o = typeof uri === \"object\" ? uri : opts;\n      if (!o.transports || o.transports && typeof o.transports[0] === \"string\") {\n        o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"]).map(transportName => _transportsIndexJs.transports[transportName]).filter(t => !!t);\n      }\n      return (0, _callSuper.default)(this, Socket, [uri, o]);\n    }\n    (0, _inherits.default)(Socket, _SocketWithUpgrade);\n    return (0, _createClass.default)(Socket);\n  }(SocketWithUpgrade);\n});","lineCount":769,"map":[[12,2,41,0,"Object"],[12,8,41,0],[12,9,41,0,"defineProperty"],[12,23,41,0],[12,24,41,0,"exports"],[12,31,41,0],[13,4,41,0,"enumerable"],[13,14,41,0],[14,4,41,0,"get"],[14,7,41,0],[14,18,41,0,"get"],[14,19,41,0],[15,6,41,0],[15,13,41,0,"SocketWithoutUpgrade"],[15,33,41,0],[16,4,41,0],[17,2,41,0],[18,2,563,0,"Object"],[18,8,563,0],[18,9,563,0,"defineProperty"],[18,23,563,0],[18,24,563,0,"exports"],[18,31,563,0],[19,4,563,0,"enumerable"],[19,14,563,0],[20,4,563,0,"get"],[20,7,563,0],[20,18,563,0,"get"],[20,19,563,0],[21,6,563,0],[21,13,563,0,"SocketWithUpgrade"],[21,30,563,0],[22,4,563,0],[23,2,563,0],[24,2,716,0,"Object"],[24,8,716,0],[24,9,716,0,"defineProperty"],[24,23,716,0],[24,24,716,0,"exports"],[24,31,716,0],[25,4,716,0,"enumerable"],[25,14,716,0],[26,4,716,0,"get"],[26,7,716,0],[26,18,716,0,"get"],[26,19,716,0],[27,6,716,0],[27,13,716,0,"Socket"],[27,19,716,0],[28,4,716,0],[29,2,716,0],[30,2,727,1],[30,6,727,1,"_babelRuntimeHelpersSuperPropGet"],[30,38,727,1],[30,41,727,1,"require"],[30,48,727,1],[30,49,727,1,"_dependencyMap"],[30,63,727,1],[31,2,727,1],[31,6,727,1,"_superPropGet"],[31,19,727,1],[31,22,727,1,"_interopDefault"],[31,37,727,1],[31,38,727,1,"_babelRuntimeHelpersSuperPropGet"],[31,70,727,1],[32,2,727,1,"require"],[32,9,727,1],[32,10,727,1,"_dependencyMap"],[32,24,727,1],[33,2,727,1],[33,6,727,1,"_babelRuntimeHelpersClassCallCheck"],[33,40,727,1],[33,43,727,1,"require"],[33,50,727,1],[33,51,727,1,"_dependencyMap"],[33,65,727,1],[34,2,727,1],[34,6,727,1,"_classCallCheck"],[34,21,727,1],[34,24,727,1,"_interopDefault"],[34,39,727,1],[34,40,727,1,"_babelRuntimeHelpersClassCallCheck"],[34,74,727,1],[35,2,727,1],[35,6,727,1,"_babelRuntimeHelpersCreateClass"],[35,37,727,1],[35,40,727,1,"require"],[35,47,727,1],[35,48,727,1,"_dependencyMap"],[35,62,727,1],[36,2,727,1],[36,6,727,1,"_createClass"],[36,18,727,1],[36,21,727,1,"_interopDefault"],[36,36,727,1],[36,37,727,1,"_babelRuntimeHelpersCreateClass"],[36,68,727,1],[37,2,727,1],[37,6,727,1,"_babelRuntimeHelpersCallSuper"],[37,35,727,1],[37,38,727,1,"require"],[37,45,727,1],[37,46,727,1,"_dependencyMap"],[37,60,727,1],[38,2,727,1],[38,6,727,1,"_callSuper"],[38,16,727,1],[38,19,727,1,"_interopDefault"],[38,34,727,1],[38,35,727,1,"_babelRuntimeHelpersCallSuper"],[38,64,727,1],[39,2,727,1],[39,6,727,1,"_babelRuntimeHelpersInherits"],[39,34,727,1],[39,37,727,1,"require"],[39,44,727,1],[39,45,727,1,"_dependencyMap"],[39,59,727,1],[40,2,727,1],[40,6,727,1,"_inherits"],[40,15,727,1],[40,18,727,1,"_interopDefault"],[40,33,727,1],[40,34,727,1,"_babelRuntimeHelpersInherits"],[40,62,727,1],[41,2,1,0],[41,6,1,0,"_transportsIndexJs"],[41,24,1,0],[41,27,1,0,"require"],[41,34,1,0],[41,35,1,0,"_dependencyMap"],[41,49,1,0],[42,2,2,0],[42,6,2,0,"_utilJs"],[42,13,2,0],[42,16,2,0,"require"],[42,23,2,0],[42,24,2,0,"_dependencyMap"],[42,38,2,0],[43,2,3,0],[43,6,3,0,"_contribParseqsJs"],[43,23,3,0],[43,26,3,0,"require"],[43,33,3,0],[43,34,3,0,"_dependencyMap"],[43,48,3,0],[44,2,4,0],[44,6,4,0,"_contribParseuriJs"],[44,24,4,0],[44,27,4,0,"require"],[44,34,4,0],[44,35,4,0,"_dependencyMap"],[44,49,4,0],[45,2,5,0],[45,6,5,0,"_socketIoComponentEmitter"],[45,31,5,0],[45,34,5,0,"require"],[45,41,5,0],[45,42,5,0,"_dependencyMap"],[45,56,5,0],[46,2,6,0],[46,6,6,0,"_engineIoParser"],[46,21,6,0],[46,24,6,0,"require"],[46,31,6,0],[46,32,6,0,"_dependencyMap"],[46,46,6,0],[47,2,7,0],[47,6,7,0,"_globalsNodeJs"],[47,20,7,0],[47,23,7,0,"require"],[47,30,7,0],[47,31,7,0,"_dependencyMap"],[47,45,7,0],[48,2,8,0],[48,6,8,6,"withEventListeners"],[48,24,8,24],[48,27,8,27],[48,34,8,34,"addEventListener"],[48,50,8,50],[48,55,8,55],[48,65,8,65],[48,69,9,4],[48,76,9,11,"removeEventListener"],[48,95,9,30],[48,100,9,35],[48,110,9,45],[49,2,10,0],[49,6,10,6,"OFFLINE_EVENT_LISTENERS"],[49,29,10,29],[49,32,10,32],[49,34,10,34],[50,2,11,0],[50,6,11,4,"withEventListeners"],[50,24,11,22],[50,26,11,24],[51,4,12,4],[52,4,13,4],[53,4,14,4,"addEventListener"],[53,20,14,20],[53,21,14,21],[53,30,14,30],[53,32,14,32],[53,38,14,38],[54,6,15,8,"OFFLINE_EVENT_LISTENERS"],[54,29,15,31],[54,30,15,32,"forEach"],[54,37,15,39],[54,38,15,41,"listener"],[54,46,15,49],[54,50,15,54,"listener"],[54,58,15,62],[54,59,15,63],[54,60,15,64],[54,61,15,65],[55,4,16,4],[55,5,16,5],[55,7,16,7],[55,12,16,12],[55,13,16,13],[56,2,17,0],[57,2,18,0],[58,0,19,0],[59,0,20,0],[60,0,21,0],[61,0,22,0],[62,0,23,0],[63,0,24,0],[64,0,25,0],[65,0,26,0],[66,0,27,0],[67,0,28,0],[68,0,29,0],[69,0,30,0],[70,0,31,0],[71,0,32,0],[72,0,33,0],[73,0,34,0],[74,0,35,0],[75,0,36,0],[76,0,37,0],[77,0,38,0],[78,0,39,0],[79,0,40,0],[80,2,18,0],[80,6,41,13,"SocketWithoutUpgrade"],[80,26,41,33],[80,52,41,33,"_Emitter"],[80,60,41,33],[81,4,42,4],[82,0,43,0],[83,0,44,0],[84,0,45,0],[85,0,46,0],[86,0,47,0],[87,4,48,4],[87,13,48,4,"SocketWithoutUpgrade"],[87,34,48,16,"uri"],[87,37,48,19],[87,39,48,21,"opts"],[87,43,48,25],[87,45,48,27],[88,6,48,27],[88,10,48,27,"_this"],[88,15,48,27],[89,6,48,27],[89,10,48,27,"_classCallCheck"],[89,25,48,27],[89,26,48,27,"default"],[89,33,48,27],[89,41,48,27,"SocketWithoutUpgrade"],[89,61,48,27],[90,6,49,8,"_this"],[90,11,49,8],[90,18,49,8,"_callSuper"],[90,28,49,8],[90,29,49,8,"default"],[90,36,49,8],[90,44,49,8,"SocketWithoutUpgrade"],[90,64,49,8],[91,6,50,8,"_this"],[91,11,50,8],[91,12,50,13,"binaryType"],[91,22,50,23],[91,25,50,26,"defaultBinaryType"],[91,39,50,43],[91,40,50,43,"defaultBinaryType"],[91,57,50,43],[92,6,51,8,"_this"],[92,11,51,8],[92,12,51,13,"writeBuffer"],[92,23,51,24],[92,26,51,27],[92,28,51,29],[93,6,52,8,"_this"],[93,11,52,8],[93,12,52,13,"_prevBufferLen"],[93,26,52,27],[93,29,52,30],[93,30,52,31],[94,6,53,8,"_this"],[94,11,53,8],[94,12,53,13,"_pingInterval"],[94,25,53,26],[94,28,53,29],[94,29,53,30],[94,30,53,31],[95,6,54,8,"_this"],[95,11,54,8],[95,12,54,13,"_pingTimeout"],[95,24,54,25],[95,27,54,28],[95,28,54,29],[95,29,54,30],[96,6,55,8,"_this"],[96,11,55,8],[96,12,55,13,"_maxPayload"],[96,23,55,24],[96,26,55,27],[96,27,55,28],[96,28,55,29],[97,6,56,8],[98,0,57,0],[99,0,58,0],[100,0,59,0],[101,6,60,8,"_this"],[101,11,60,8],[101,12,60,13,"_pingTimeoutTime"],[101,28,60,29],[101,31,60,32,"Infinity"],[101,39,60,40],[102,6,61,8],[102,10,61,12,"uri"],[102,13,61,15],[102,17,61,19],[102,25,61,27],[102,30,61,32],[102,37,61,39,"uri"],[102,40,61,42],[102,42,61,44],[103,8,62,12,"opts"],[103,12,62,16],[103,15,62,19,"uri"],[103,18,62,22],[104,8,63,12,"uri"],[104,11,63,15],[104,14,63,18],[104,18,63,22],[105,6,64,8],[106,6,65,8],[106,10,65,12,"uri"],[106,13,65,15],[106,15,65,17],[107,8,66,12],[107,12,66,18,"parsedUri"],[107,21,66,27],[107,24,66,30],[107,28,66,30,"parse"],[107,46,66,35],[107,47,66,35,"parse"],[107,52,66,35],[107,54,66,36,"uri"],[107,57,66,39],[107,58,66,40],[108,8,67,12,"opts"],[108,12,67,16],[108,13,67,17,"hostname"],[108,21,67,25],[108,24,67,28,"parsedUri"],[108,33,67,37],[108,34,67,38,"host"],[108,38,67,42],[109,8,68,12,"opts"],[109,12,68,16],[109,13,68,17,"secure"],[109,19,68,23],[109,22,69,16,"parsedUri"],[109,31,69,25],[109,32,69,26,"protocol"],[109,40,69,34],[109,45,69,39],[109,52,69,46],[109,56,69,50,"parsedUri"],[109,65,69,59],[109,66,69,60,"protocol"],[109,74,69,68],[109,79,69,73],[109,84,69,78],[110,8,70,12,"opts"],[110,12,70,16],[110,13,70,17,"port"],[110,17,70,21],[110,20,70,24,"parsedUri"],[110,29,70,33],[110,30,70,34,"port"],[110,34,70,38],[111,8,71,12],[111,12,71,16,"parsedUri"],[111,21,71,25],[111,22,71,26,"query"],[111,27,71,31],[111,29,72,16,"opts"],[111,33,72,20],[111,34,72,21,"query"],[111,39,72,26],[111,42,72,29,"parsedUri"],[111,51,72,38],[111,52,72,39,"query"],[111,57,72,44],[112,6,73,8],[112,7,73,9],[112,13,74,13],[112,17,74,17,"opts"],[112,21,74,21],[112,22,74,22,"host"],[112,26,74,26],[112,28,74,28],[113,8,75,12,"opts"],[113,12,75,16],[113,13,75,17,"hostname"],[113,21,75,25],[113,24,75,28],[113,28,75,28,"parse"],[113,46,75,33],[113,47,75,33,"parse"],[113,52,75,33],[113,54,75,34,"opts"],[113,58,75,38],[113,59,75,39,"host"],[113,63,75,43],[113,64,75,44],[113,65,75,45,"host"],[113,69,75,49],[114,6,76,8],[115,6,77,8],[115,10,77,8,"installTimerFunctions"],[115,17,77,29],[115,18,77,29,"installTimerFunctions"],[115,39,77,29],[115,41,77,29,"_this"],[115,46,77,29],[115,48,77,36,"opts"],[115,52,77,40],[115,53,77,41],[116,6,78,8,"_this"],[116,11,78,8],[116,12,78,13,"secure"],[116,18,78,19],[116,21,79,12],[116,25,79,16],[116,29,79,20,"opts"],[116,33,79,24],[116,34,79,25,"secure"],[116,40,79,31],[116,43,80,18,"opts"],[116,47,80,22],[116,48,80,23,"secure"],[116,54,80,29],[116,57,81,18],[116,64,81,25,"location"],[116,72,81,33],[116,77,81,38],[116,88,81,49],[116,92,81,53],[116,100,81,61],[116,105,81,66,"location"],[116,113,81,74],[116,114,81,75,"protocol"],[116,122,81,83],[117,6,82,8],[117,10,82,12,"opts"],[117,14,82,16],[117,15,82,17,"hostname"],[117,23,82,25],[117,27,82,29],[117,28,82,30,"opts"],[117,32,82,34],[117,33,82,35,"port"],[117,37,82,39],[117,39,82,41],[118,8,83,12],[119,8,84,12,"opts"],[119,12,84,16],[119,13,84,17,"port"],[119,17,84,21],[119,20,84,24,"_this"],[119,25,84,24],[119,26,84,29,"secure"],[119,32,84,35],[119,35,84,38],[119,40,84,43],[119,43,84,46],[119,47,84,50],[120,6,85,8],[121,6,86,8,"_this"],[121,11,86,8],[121,12,86,13,"hostname"],[121,20,86,21],[121,23,87,12,"opts"],[121,27,87,16],[121,28,87,17,"hostname"],[121,36,87,25],[121,41,88,17],[121,48,88,24,"location"],[121,56,88,32],[121,61,88,37],[121,72,88,48],[121,75,88,51,"location"],[121,83,88,59],[121,84,88,60,"hostname"],[121,92,88,68],[121,95,88,71],[121,106,88,82],[121,107,88,83],[122,6,89,8,"_this"],[122,11,89,8],[122,12,89,13,"port"],[122,16,89,17],[122,19,90,12,"opts"],[122,23,90,16],[122,24,90,17,"port"],[122,28,90,21],[122,33,91,17],[122,40,91,24,"location"],[122,48,91,32],[122,53,91,37],[122,64,91,48],[122,68,91,52,"location"],[122,76,91,60],[122,77,91,61,"port"],[122,81,91,65],[122,84,92,22,"location"],[122,92,92,30],[122,93,92,31,"port"],[122,97,92,35],[122,100,93,22,"_this"],[122,105,93,22],[122,106,93,27,"secure"],[122,112,93,33],[122,115,94,26],[122,120,94,31],[122,123,95,26],[122,127,95,30],[122,128,95,31],[123,6,96,8,"_this"],[123,11,96,8],[123,12,96,13,"transports"],[123,22,96,23],[123,25,96,26],[123,27,96,28],[124,6,97,8,"_this"],[124,11,97,8],[124,12,97,13,"_transportsByName"],[124,29,97,30],[124,32,97,33],[124,33,97,34],[124,34,97,35],[125,6,98,8,"opts"],[125,10,98,12],[125,11,98,13,"transports"],[125,21,98,23],[125,22,98,24,"forEach"],[125,29,98,31],[125,30,98,33,"t"],[125,31,98,34],[125,35,98,39],[126,8,99,12],[126,12,99,18,"transportName"],[126,25,99,31],[126,28,99,34,"t"],[126,29,99,35],[126,30,99,36,"prototype"],[126,39,99,45],[126,40,99,46,"name"],[126,44,99,50],[127,8,100,12,"_this"],[127,13,100,12],[127,14,100,17,"transports"],[127,24,100,27],[127,25,100,28,"push"],[127,29,100,32],[127,30,100,33,"transportName"],[127,43,100,46],[127,44,100,47],[128,8,101,12,"_this"],[128,13,101,12],[128,14,101,17,"_transportsByName"],[128,31,101,34],[128,32,101,35,"transportName"],[128,45,101,48],[128,46,101,49],[128,49,101,52,"t"],[128,50,101,53],[129,6,102,8],[129,7,102,9],[129,8,102,10],[130,6,103,8,"_this"],[130,11,103,8],[130,12,103,13,"opts"],[130,16,103,17],[130,19,103,20,"Object"],[130,25,103,26],[130,26,103,27,"assign"],[130,32,103,33],[130,33,103,34],[131,8,104,12,"path"],[131,12,104,16],[131,14,104,18],[131,26,104,30],[132,8,105,12,"agent"],[132,13,105,17],[132,15,105,19],[132,20,105,24],[133,8,106,12,"withCredentials"],[133,23,106,27],[133,25,106,29],[133,30,106,34],[134,8,107,12,"upgrade"],[134,15,107,19],[134,17,107,21],[134,21,107,25],[135,8,108,12,"timestampParam"],[135,22,108,26],[135,24,108,28],[135,27,108,31],[136,8,109,12,"rememberUpgrade"],[136,23,109,27],[136,25,109,29],[136,30,109,34],[137,8,110,12,"addTrailingSlash"],[137,24,110,28],[137,26,110,30],[137,30,110,34],[138,8,111,12,"rejectUnauthorized"],[138,26,111,30],[138,28,111,32],[138,32,111,36],[139,8,112,12,"perMessageDeflate"],[139,25,112,29],[139,27,112,31],[140,10,113,16,"threshold"],[140,19,113,25],[140,21,113,27],[141,8,114,12],[141,9,114,13],[142,8,115,12,"transportOptions"],[142,24,115,28],[142,26,115,30],[142,27,115,31],[142,28,115,32],[143,8,116,12,"closeOnBeforeunload"],[143,27,116,31],[143,29,116,33],[144,6,117,8],[144,7,117,9],[144,9,117,11,"opts"],[144,13,117,15],[144,14,117,16],[145,6,118,8,"_this"],[145,11,118,8],[145,12,118,13,"opts"],[145,16,118,17],[145,17,118,18,"path"],[145,21,118,22],[145,24,119,12,"_this"],[145,29,119,12],[145,30,119,17,"opts"],[145,34,119,21],[145,35,119,22,"path"],[145,39,119,26],[145,40,119,27,"replace"],[145,47,119,34],[145,48,119,35],[145,53,119,40],[145,55,119,42],[145,57,119,44],[145,58,119,45],[145,62,120,17,"_this"],[145,67,120,17],[145,68,120,22,"opts"],[145,72,120,26],[145,73,120,27,"addTrailingSlash"],[145,89,120,43],[145,92,120,46],[145,95,120,49],[145,98,120,52],[145,100,120,54],[145,101,120,55],[146,6,121,8],[146,10,121,12],[146,17,121,19,"_this"],[146,22,121,19],[146,23,121,24,"opts"],[146,27,121,28],[146,28,121,29,"query"],[146,33,121,34],[146,38,121,39],[146,46,121,47],[146,48,121,49],[147,8,122,12,"_this"],[147,13,122,12],[147,14,122,17,"opts"],[147,18,122,21],[147,19,122,22,"query"],[147,24,122,27],[147,27,122,30],[147,31,122,30,"decode"],[147,48,122,36],[147,49,122,36,"decode"],[147,55,122,36],[147,57,122,37,"_this"],[147,62,122,37],[147,63,122,42,"opts"],[147,67,122,46],[147,68,122,47,"query"],[147,73,122,52],[147,74,122,53],[148,6,123,8],[149,6,124,8],[149,10,124,12,"withEventListeners"],[149,28,124,30],[149,30,124,32],[150,8,125,12],[150,12,125,16,"_this"],[150,17,125,16],[150,18,125,21,"opts"],[150,22,125,25],[150,23,125,26,"closeOnBeforeunload"],[150,42,125,45],[150,44,125,47],[151,10,126,16],[152,10,127,16],[153,10,128,16],[154,10,129,16,"_this"],[154,15,129,16],[154,16,129,21,"_beforeunloadEventListener"],[154,42,129,47],[154,45,129,50],[154,51,129,56],[155,12,130,20],[155,16,130,24,"_this"],[155,21,130,24],[155,22,130,29,"transport"],[155,31,130,38],[155,33,130,40],[156,14,131,24],[157,14,132,24,"_this"],[157,19,132,24],[157,20,132,29,"transport"],[157,29,132,38],[157,30,132,39,"removeAllListeners"],[157,48,132,57],[157,49,132,58],[157,50,132,59],[158,14,133,24,"_this"],[158,19,133,24],[158,20,133,29,"transport"],[158,29,133,38],[158,30,133,39,"close"],[158,35,133,44],[158,36,133,45],[158,37,133,46],[159,12,134,20],[160,10,135,16],[160,11,135,17],[161,10,136,16,"addEventListener"],[161,26,136,32],[161,27,136,33],[161,41,136,47],[161,43,136,49,"_this"],[161,48,136,49],[161,49,136,54,"_beforeunloadEventListener"],[161,75,136,80],[161,77,136,82],[161,82,136,87],[161,83,136,88],[162,8,137,12],[163,8,138,12],[163,12,138,16,"_this"],[163,17,138,16],[163,18,138,21,"hostname"],[163,26,138,29],[163,31,138,34],[163,42,138,45],[163,44,138,47],[164,10,139,16,"_this"],[164,15,139,16],[164,16,139,21,"_offlineEventListener"],[164,37,139,42],[164,40,139,45],[164,46,139,51],[165,12,140,20,"_this"],[165,17,140,20],[165,18,140,25,"_onClose"],[165,26,140,33],[165,27,140,34],[165,44,140,51],[165,46,140,53],[166,14,141,24,"description"],[166,25,141,35],[166,27,141,37],[167,12,142,20],[167,13,142,21],[167,14,142,22],[168,10,143,16],[168,11,143,17],[169,10,144,16,"OFFLINE_EVENT_LISTENERS"],[169,33,144,39],[169,34,144,40,"push"],[169,38,144,44],[169,39,144,45,"_this"],[169,44,144,45],[169,45,144,50,"_offlineEventListener"],[169,66,144,71],[169,67,144,72],[170,8,145,12],[171,6,146,8],[172,6,147,8],[172,10,147,12,"_this"],[172,15,147,12],[172,16,147,17,"opts"],[172,20,147,21],[172,21,147,22,"withCredentials"],[172,36,147,37],[172,38,147,39],[173,8,148,12,"_this"],[173,13,148,12],[173,14,148,17,"_cookieJar"],[173,24,148,27],[173,27,148,30],[173,31,148,30,"createCookieJar"],[173,45,148,45],[173,46,148,45,"createCookieJar"],[173,61,148,45],[173,63,148,46],[173,64,148,47],[174,6,149,8],[175,6,150,8,"_this"],[175,11,150,8],[175,12,150,13,"_open"],[175,17,150,18],[175,18,150,19],[175,19,150,20],[176,6,150,21],[176,13,150,21,"_this"],[176,18,150,21],[177,4,151,4],[178,4,152,4],[179,0,153,0],[180,0,154,0],[181,0,155,0],[182,0,156,0],[183,0,157,0],[184,0,158,0],[185,4,152,4],[185,8,152,4,"_inherits"],[185,17,152,4],[185,18,152,4,"default"],[185,25,152,4],[185,27,152,4,"SocketWithoutUpgrade"],[185,47,152,4],[185,49,152,4,"_Emitter"],[185,57,152,4],[186,4,152,4],[186,15,152,4,"_createClass"],[186,27,152,4],[186,28,152,4,"default"],[186,35,152,4],[186,37,152,4,"SocketWithoutUpgrade"],[186,57,152,4],[187,6,152,4,"key"],[187,9,152,4],[188,6,152,4,"value"],[188,11,152,4],[188,13,159,4],[188,22,159,4,"createTransport"],[188,37,159,19,"createTransport"],[188,38,159,20,"name"],[188,42,159,24],[188,44,159,26],[189,8,160,8],[189,12,160,14,"query"],[189,17,160,19],[189,20,160,22,"Object"],[189,26,160,28],[189,27,160,29,"assign"],[189,33,160,35],[189,34,160,36],[189,35,160,37],[189,36,160,38],[189,38,160,40],[189,42,160,44],[189,43,160,45,"opts"],[189,47,160,49],[189,48,160,50,"query"],[189,53,160,55],[189,54,160,56],[190,8,161,8],[191,8,162,8,"query"],[191,13,162,13],[191,14,162,14,"EIO"],[191,17,162,17],[191,20,162,20,"protocol"],[191,35,162,28],[191,36,162,28,"protocol"],[191,44,162,28],[192,8,163,8],[193,8,164,8,"query"],[193,13,164,13],[193,14,164,14,"transport"],[193,23,164,23],[193,26,164,26,"name"],[193,30,164,30],[194,8,165,8],[195,8,166,8],[195,12,166,12],[195,16,166,16],[195,17,166,17,"id"],[195,19,166,19],[195,21,167,12,"query"],[195,26,167,17],[195,27,167,18,"sid"],[195,30,167,21],[195,33,167,24],[195,37,167,28],[195,38,167,29,"id"],[195,40,167,31],[196,8,168,8],[196,12,168,14,"opts"],[196,16,168,18],[196,19,168,21,"Object"],[196,25,168,27],[196,26,168,28,"assign"],[196,32,168,34],[196,33,168,35],[196,34,168,36],[196,35,168,37],[196,37,168,39],[196,41,168,43],[196,42,168,44,"opts"],[196,46,168,48],[196,48,168,50],[197,10,169,12,"query"],[197,15,169,17],[198,10,170,12,"socket"],[198,16,170,18],[198,18,170,20],[198,22,170,24],[199,10,171,12,"hostname"],[199,18,171,20],[199,20,171,22],[199,24,171,26],[199,25,171,27,"hostname"],[199,33,171,35],[200,10,172,12,"secure"],[200,16,172,18],[200,18,172,20],[200,22,172,24],[200,23,172,25,"secure"],[200,29,172,31],[201,10,173,12,"port"],[201,14,173,16],[201,16,173,18],[201,20,173,22],[201,21,173,23,"port"],[202,8,174,8],[202,9,174,9],[202,11,174,11],[202,15,174,15],[202,16,174,16,"opts"],[202,20,174,20],[202,21,174,21,"transportOptions"],[202,37,174,37],[202,38,174,38,"name"],[202,42,174,42],[202,43,174,43],[202,44,174,44],[203,8,175,8],[203,15,175,15],[203,19,175,19],[203,23,175,23],[203,24,175,24,"_transportsByName"],[203,41,175,41],[203,42,175,42,"name"],[203,46,175,46],[203,47,175,47],[203,48,175,48,"opts"],[203,52,175,52],[203,53,175,53],[204,6,176,4],[205,6,177,4],[206,0,178,0],[207,0,179,0],[208,0,180,0],[209,0,181,0],[210,4,177,4],[211,6,177,4,"key"],[211,9,177,4],[212,6,177,4,"value"],[212,11,177,4],[212,13,182,4],[212,22,182,4,"_open"],[212,27,182,9,"_open"],[212,28,182,9],[212,30,182,12],[213,8,183,8],[213,12,183,12],[213,16,183,16],[213,17,183,17,"transports"],[213,27,183,27],[213,28,183,28,"length"],[213,34,183,34],[213,39,183,39],[213,40,183,40],[213,42,183,42],[214,10,184,12],[215,10,185,12],[215,14,185,16],[215,15,185,17,"setTimeoutFn"],[215,27,185,29],[215,28,185,30],[215,34,185,36],[216,12,186,16],[216,16,186,20],[216,17,186,21,"emitReserved"],[216,29,186,33],[216,30,186,34],[216,37,186,41],[216,39,186,43],[216,64,186,68],[216,65,186,69],[217,10,187,12],[217,11,187,13],[217,13,187,15],[217,14,187,16],[217,15,187,17],[218,10,188,12],[219,8,189,8],[220,8,190,8],[220,12,190,14,"transportName"],[220,25,190,27],[220,28,190,30],[220,32,190,34],[220,33,190,35,"opts"],[220,37,190,39],[220,38,190,40,"rememberUpgrade"],[220,53,190,55],[220,57,191,12,"SocketWithoutUpgrade"],[220,77,191,32],[220,78,191,33,"priorWebsocketSuccess"],[220,99,191,54],[220,103,192,12],[220,107,192,16],[220,108,192,17,"transports"],[220,118,192,27],[220,119,192,28,"indexOf"],[220,126,192,35],[220,127,192,36],[220,138,192,47],[220,139,192,48],[220,144,192,53],[220,145,192,54],[220,146,192,55],[220,149,193,14],[220,160,193,25],[220,163,194,14],[220,167,194,18],[220,168,194,19,"transports"],[220,178,194,29],[220,179,194,30],[220,180,194,31],[220,181,194,32],[221,8,195,8],[221,12,195,12],[221,13,195,13,"readyState"],[221,23,195,23],[221,26,195,26],[221,35,195,35],[222,8,196,8],[222,12,196,14,"transport"],[222,21,196,23],[222,24,196,26],[222,28,196,30],[222,29,196,31,"createTransport"],[222,44,196,46],[222,45,196,47,"transportName"],[222,58,196,60],[222,59,196,61],[223,8,197,8,"transport"],[223,17,197,17],[223,18,197,18,"open"],[223,22,197,22],[223,23,197,23],[223,24,197,24],[224,8,198,8],[224,12,198,12],[224,13,198,13,"setTransport"],[224,25,198,25],[224,26,198,26,"transport"],[224,35,198,35],[224,36,198,36],[225,6,199,4],[226,6,200,4],[227,0,201,0],[228,0,202,0],[229,0,203,0],[230,0,204,0],[231,4,200,4],[232,6,200,4,"key"],[232,9,200,4],[233,6,200,4,"value"],[233,11,200,4],[233,13,205,4],[233,22,205,4,"setTransport"],[233,34,205,16,"setTransport"],[233,35,205,17,"transport"],[233,44,205,26],[233,46,205,28],[234,8,206,8],[234,12,206,12],[234,16,206,16],[234,17,206,17,"transport"],[234,26,206,26],[234,28,206,28],[235,10,207,12],[235,14,207,16],[235,15,207,17,"transport"],[235,24,207,26],[235,25,207,27,"removeAllListeners"],[235,43,207,45],[235,44,207,46],[235,45,207,47],[236,8,208,8],[237,8,209,8],[238,8,210,8],[238,12,210,12],[238,13,210,13,"transport"],[238,22,210,22],[238,25,210,25,"transport"],[238,34,210,34],[239,8,211,8],[240,8,212,8,"transport"],[240,17,212,17],[240,18,213,13,"on"],[240,20,213,15],[240,21,213,16],[240,28,213,23],[240,30,213,25],[240,34,213,29],[240,35,213,30,"_onDrain"],[240,43,213,38],[240,44,213,39,"bind"],[240,48,213,43],[240,49,213,44],[240,53,213,48],[240,54,213,49],[240,55,213,50],[240,56,214,13,"on"],[240,58,214,15],[240,59,214,16],[240,67,214,24],[240,69,214,26],[240,73,214,30],[240,74,214,31,"_onPacket"],[240,83,214,40],[240,84,214,41,"bind"],[240,88,214,45],[240,89,214,46],[240,93,214,50],[240,94,214,51],[240,95,214,52],[240,96,215,13,"on"],[240,98,215,15],[240,99,215,16],[240,106,215,23],[240,108,215,25],[240,112,215,29],[240,113,215,30,"_onError"],[240,121,215,38],[240,122,215,39,"bind"],[240,126,215,43],[240,127,215,44],[240,131,215,48],[240,132,215,49],[240,133,215,50],[240,134,216,13,"on"],[240,136,216,15],[240,137,216,16],[240,144,216,23],[240,146,216,26,"reason"],[240,152,216,32],[240,156,216,37],[240,160,216,41],[240,161,216,42,"_onClose"],[240,169,216,50],[240,170,216,51],[240,187,216,68],[240,189,216,70,"reason"],[240,195,216,76],[240,196,216,77],[240,197,216,78],[241,6,217,4],[242,6,218,4],[243,0,219,0],[244,0,220,0],[245,0,221,0],[246,0,222,0],[247,4,218,4],[248,6,218,4,"key"],[248,9,218,4],[249,6,218,4,"value"],[249,11,218,4],[249,13,223,4],[249,22,223,4,"onOpen"],[249,28,223,10,"onOpen"],[249,29,223,10],[249,31,223,13],[250,8,224,8],[250,12,224,12],[250,13,224,13,"readyState"],[250,23,224,23],[250,26,224,26],[250,32,224,32],[251,8,225,8,"SocketWithoutUpgrade"],[251,28,225,28],[251,29,225,29,"priorWebsocketSuccess"],[251,50,225,50],[251,53,226,12],[251,64,226,23],[251,69,226,28],[251,73,226,32],[251,74,226,33,"transport"],[251,83,226,42],[251,84,226,43,"name"],[251,88,226,47],[252,8,227,8],[252,12,227,12],[252,13,227,13,"emitReserved"],[252,25,227,25],[252,26,227,26],[252,32,227,32],[252,33,227,33],[253,8,228,8],[253,12,228,12],[253,13,228,13,"flush"],[253,18,228,18],[253,19,228,19],[253,20,228,20],[254,6,229,4],[255,6,230,4],[256,0,231,0],[257,0,232,0],[258,0,233,0],[259,0,234,0],[260,4,230,4],[261,6,230,4,"key"],[261,9,230,4],[262,6,230,4,"value"],[262,11,230,4],[262,13,235,4],[262,22,235,4,"_onPacket"],[262,31,235,13,"_onPacket"],[262,32,235,14,"packet"],[262,38,235,20],[262,40,235,22],[263,8,236,8],[263,12,236,12],[263,21,236,21],[263,26,236,26],[263,30,236,30],[263,31,236,31,"readyState"],[263,41,236,41],[263,45,237,12],[263,51,237,18],[263,56,237,23],[263,60,237,27],[263,61,237,28,"readyState"],[263,71,237,38],[263,75,238,12],[263,84,238,21],[263,89,238,26],[263,93,238,30],[263,94,238,31,"readyState"],[263,104,238,41],[263,106,238,43],[264,10,239,12],[264,14,239,16],[264,15,239,17,"emitReserved"],[264,27,239,29],[264,28,239,30],[264,36,239,38],[264,38,239,40,"packet"],[264,44,239,46],[264,45,239,47],[265,10,240,12],[266,10,241,12],[266,14,241,16],[266,15,241,17,"emitReserved"],[266,27,241,29],[266,28,241,30],[266,39,241,41],[266,40,241,42],[267,10,242,12],[267,18,242,20,"packet"],[267,24,242,26],[267,25,242,27,"type"],[267,29,242,31],[268,12,243,16],[268,17,243,21],[268,23,243,27],[269,14,244,20],[269,18,244,24],[269,19,244,25,"onHandshake"],[269,30,244,36],[269,31,244,37,"JSON"],[269,35,244,41],[269,36,244,42,"parse"],[269,41,244,47],[269,42,244,48,"packet"],[269,48,244,54],[269,49,244,55,"data"],[269,53,244,59],[269,54,244,60],[269,55,244,61],[270,14,245,20],[271,12,246,16],[271,17,246,21],[271,23,246,27],[272,14,247,20],[272,18,247,24],[272,19,247,25,"_sendPacket"],[272,30,247,36],[272,31,247,37],[272,37,247,43],[272,38,247,44],[273,14,248,20],[273,18,248,24],[273,19,248,25,"emitReserved"],[273,31,248,37],[273,32,248,38],[273,38,248,44],[273,39,248,45],[274,14,249,20],[274,18,249,24],[274,19,249,25,"emitReserved"],[274,31,249,37],[274,32,249,38],[274,38,249,44],[274,39,249,45],[275,14,250,20],[275,18,250,24],[275,19,250,25,"_resetPingTimeout"],[275,36,250,42],[275,37,250,43],[275,38,250,44],[276,14,251,20],[277,12,252,16],[277,17,252,21],[277,24,252,28],[278,14,253,20],[278,18,253,26,"err"],[278,21,253,29],[278,24,253,32],[278,28,253,36,"Error"],[278,33,253,41],[278,34,253,42],[278,48,253,56],[278,49,253,57],[279,14,254,20],[280,14,255,20,"err"],[280,17,255,23],[280,18,255,24,"code"],[280,22,255,28],[280,25,255,31,"packet"],[280,31,255,37],[280,32,255,38,"data"],[280,36,255,42],[281,14,256,20],[281,18,256,24],[281,19,256,25,"_onError"],[281,27,256,33],[281,28,256,34,"err"],[281,31,256,37],[281,32,256,38],[282,14,257,20],[283,12,258,16],[283,17,258,21],[283,26,258,30],[284,14,259,20],[284,18,259,24],[284,19,259,25,"emitReserved"],[284,31,259,37],[284,32,259,38],[284,38,259,44],[284,40,259,46,"packet"],[284,46,259,52],[284,47,259,53,"data"],[284,51,259,57],[284,52,259,58],[285,14,260,20],[285,18,260,24],[285,19,260,25,"emitReserved"],[285,31,260,37],[285,32,260,38],[285,41,260,47],[285,43,260,49,"packet"],[285,49,260,55],[285,50,260,56,"data"],[285,54,260,60],[285,55,260,61],[286,14,261,20],[287,10,262,12],[288,8,263,8],[288,9,263,9],[288,15,264,13],[288,16,265,8],[289,6,266,4],[290,6,267,4],[291,0,268,0],[292,0,269,0],[293,0,270,0],[294,0,271,0],[295,0,272,0],[296,4,267,4],[297,6,267,4,"key"],[297,9,267,4],[298,6,267,4,"value"],[298,11,267,4],[298,13,273,4],[298,22,273,4,"onHandshake"],[298,33,273,15,"onHandshake"],[298,34,273,16,"data"],[298,38,273,20],[298,40,273,22],[299,8,274,8],[299,12,274,12],[299,13,274,13,"emitReserved"],[299,25,274,25],[299,26,274,26],[299,37,274,37],[299,39,274,39,"data"],[299,43,274,43],[299,44,274,44],[300,8,275,8],[300,12,275,12],[300,13,275,13,"id"],[300,15,275,15],[300,18,275,18,"data"],[300,22,275,22],[300,23,275,23,"sid"],[300,26,275,26],[301,8,276,8],[301,12,276,12],[301,13,276,13,"transport"],[301,22,276,22],[301,23,276,23,"query"],[301,28,276,28],[301,29,276,29,"sid"],[301,32,276,32],[301,35,276,35,"data"],[301,39,276,39],[301,40,276,40,"sid"],[301,43,276,43],[302,8,277,8],[302,12,277,12],[302,13,277,13,"_pingInterval"],[302,26,277,26],[302,29,277,29,"data"],[302,33,277,33],[302,34,277,34,"pingInterval"],[302,46,277,46],[303,8,278,8],[303,12,278,12],[303,13,278,13,"_pingTimeout"],[303,25,278,25],[303,28,278,28,"data"],[303,32,278,32],[303,33,278,33,"pingTimeout"],[303,44,278,44],[304,8,279,8],[304,12,279,12],[304,13,279,13,"_maxPayload"],[304,24,279,24],[304,27,279,27,"data"],[304,31,279,31],[304,32,279,32,"maxPayload"],[304,42,279,42],[305,8,280,8],[305,12,280,12],[305,13,280,13,"onOpen"],[305,19,280,19],[305,20,280,20],[305,21,280,21],[306,8,281,8],[307,8,282,8],[307,12,282,12],[307,20,282,20],[307,25,282,25],[307,29,282,29],[307,30,282,30,"readyState"],[307,40,282,40],[307,42,283,12],[308,8,284,8],[308,12,284,12],[308,13,284,13,"_resetPingTimeout"],[308,30,284,30],[308,31,284,31],[308,32,284,32],[309,6,285,4],[310,6,286,4],[311,0,287,0],[312,0,288,0],[313,0,289,0],[314,0,290,0],[315,4,286,4],[316,6,286,4,"key"],[316,9,286,4],[317,6,286,4,"value"],[317,11,286,4],[317,13,291,4],[317,22,291,4,"_resetPingTimeout"],[317,39,291,21,"_resetPingTimeout"],[317,40,291,21],[317,42,291,24],[318,8,292,8],[318,12,292,12],[318,13,292,13,"clearTimeoutFn"],[318,27,292,27],[318,28,292,28],[318,32,292,32],[318,33,292,33,"_pingTimeoutTimer"],[318,50,292,50],[318,51,292,51],[319,8,293,8],[319,12,293,14,"delay"],[319,17,293,19],[319,20,293,22],[319,24,293,26],[319,25,293,27,"_pingInterval"],[319,38,293,40],[319,41,293,43],[319,45,293,47],[319,46,293,48,"_pingTimeout"],[319,58,293,60],[320,8,294,8],[320,12,294,12],[320,13,294,13,"_pingTimeoutTime"],[320,29,294,29],[320,32,294,32,"Date"],[320,36,294,36],[320,37,294,37,"now"],[320,40,294,40],[320,41,294,41],[320,42,294,42],[320,45,294,45,"delay"],[320,50,294,50],[321,8,295,8],[321,12,295,12],[321,13,295,13,"_pingTimeoutTimer"],[321,30,295,30],[321,33,295,33],[321,37,295,37],[321,38,295,38,"setTimeoutFn"],[321,50,295,50],[321,51,295,51],[321,57,295,57],[322,10,296,12],[322,14,296,16],[322,15,296,17,"_onClose"],[322,23,296,25],[322,24,296,26],[322,38,296,40],[322,39,296,41],[323,8,297,8],[323,9,297,9],[323,11,297,11,"delay"],[323,16,297,16],[323,17,297,17],[324,8,298,8],[324,12,298,12],[324,16,298,16],[324,17,298,17,"opts"],[324,21,298,21],[324,22,298,22,"autoUnref"],[324,31,298,31],[324,33,298,33],[325,10,299,12],[325,14,299,16],[325,15,299,17,"_pingTimeoutTimer"],[325,32,299,34],[325,33,299,35,"unref"],[325,38,299,40],[325,39,299,41],[325,40,299,42],[326,8,300,8],[327,6,301,4],[328,6,302,4],[329,0,303,0],[330,0,304,0],[331,0,305,0],[332,0,306,0],[333,4,302,4],[334,6,302,4,"key"],[334,9,302,4],[335,6,302,4,"value"],[335,11,302,4],[335,13,307,4],[335,22,307,4,"_onDrain"],[335,30,307,12,"_onDrain"],[335,31,307,12],[335,33,307,15],[336,8,308,8],[336,12,308,12],[336,13,308,13,"writeBuffer"],[336,24,308,24],[336,25,308,25,"splice"],[336,31,308,31],[336,32,308,32],[336,33,308,33],[336,35,308,35],[336,39,308,39],[336,40,308,40,"_prevBufferLen"],[336,54,308,54],[336,55,308,55],[337,8,309,8],[338,8,310,8],[339,8,311,8],[340,8,312,8],[340,12,312,12],[340,13,312,13,"_prevBufferLen"],[340,27,312,27],[340,30,312,30],[340,31,312,31],[341,8,313,8],[341,12,313,12],[341,13,313,13],[341,18,313,18],[341,22,313,22],[341,23,313,23,"writeBuffer"],[341,34,313,34],[341,35,313,35,"length"],[341,41,313,41],[341,43,313,43],[342,10,314,12],[342,14,314,16],[342,15,314,17,"emitReserved"],[342,27,314,29],[342,28,314,30],[342,35,314,37],[342,36,314,38],[343,8,315,8],[343,9,315,9],[343,15,316,13],[344,10,317,12],[344,14,317,16],[344,15,317,17,"flush"],[344,20,317,22],[344,21,317,23],[344,22,317,24],[345,8,318,8],[346,6,319,4],[347,6,320,4],[348,0,321,0],[349,0,322,0],[350,0,323,0],[351,0,324,0],[352,4,320,4],[353,6,320,4,"key"],[353,9,320,4],[354,6,320,4,"value"],[354,11,320,4],[354,13,325,4],[354,22,325,4,"flush"],[354,27,325,9,"flush"],[354,28,325,9],[354,30,325,12],[355,8,326,8],[355,12,326,12],[355,20,326,20],[355,25,326,25],[355,29,326,29],[355,30,326,30,"readyState"],[355,40,326,40],[355,44,327,12],[355,48,327,16],[355,49,327,17,"transport"],[355,58,327,26],[355,59,327,27,"writable"],[355,67,327,35],[355,71,328,12],[355,72,328,13],[355,76,328,17],[355,77,328,18,"upgrading"],[355,86,328,27],[355,90,329,12],[355,94,329,16],[355,95,329,17,"writeBuffer"],[355,106,329,28],[355,107,329,29,"length"],[355,113,329,35],[355,115,329,37],[356,10,330,12],[356,14,330,18,"packets"],[356,21,330,25],[356,24,330,28],[356,28,330,32],[356,29,330,33,"_getWritablePackets"],[356,48,330,52],[356,49,330,53],[356,50,330,54],[357,10,331,12],[357,14,331,16],[357,15,331,17,"transport"],[357,24,331,26],[357,25,331,27,"send"],[357,29,331,31],[357,30,331,32,"packets"],[357,37,331,39],[357,38,331,40],[358,10,332,12],[359,10,333,12],[360,10,334,12],[360,14,334,16],[360,15,334,17,"_prevBufferLen"],[360,29,334,31],[360,32,334,34,"packets"],[360,39,334,41],[360,40,334,42,"length"],[360,46,334,48],[361,10,335,12],[361,14,335,16],[361,15,335,17,"emitReserved"],[361,27,335,29],[361,28,335,30],[361,35,335,37],[361,36,335,38],[362,8,336,8],[363,6,337,4],[364,6,338,4],[365,0,339,0],[366,0,340,0],[367,0,341,0],[368,0,342,0],[369,0,343,0],[370,4,338,4],[371,6,338,4,"key"],[371,9,338,4],[372,6,338,4,"value"],[372,11,338,4],[372,13,344,4],[372,22,344,4,"_getWritablePackets"],[372,41,344,23,"_getWritablePackets"],[372,42,344,23],[372,44,344,26],[373,8,345,8],[373,12,345,14,"shouldCheckPayloadSize"],[373,34,345,36],[373,37,345,39],[373,41,345,43],[373,42,345,44,"_maxPayload"],[373,53,345,55],[373,57,346,12],[373,61,346,16],[373,62,346,17,"transport"],[373,71,346,26],[373,72,346,27,"name"],[373,76,346,31],[373,81,346,36],[373,90,346,45],[373,94,347,12],[373,98,347,16],[373,99,347,17,"writeBuffer"],[373,110,347,28],[373,111,347,29,"length"],[373,117,347,35],[373,120,347,38],[373,121,347,39],[374,8,348,8],[374,12,348,12],[374,13,348,13,"shouldCheckPayloadSize"],[374,35,348,35],[374,37,348,37],[375,10,349,12],[375,17,349,19],[375,21,349,23],[375,22,349,24,"writeBuffer"],[375,33,349,35],[376,8,350,8],[377,8,351,8],[377,12,351,12,"payloadSize"],[377,23,351,23],[377,26,351,26],[377,27,351,27],[377,28,351,28],[377,29,351,29],[378,8,352,8],[378,13,352,13],[378,17,352,17,"i"],[378,18,352,18],[378,21,352,21],[378,22,352,22],[378,24,352,24,"i"],[378,25,352,25],[378,28,352,28],[378,32,352,32],[378,33,352,33,"writeBuffer"],[378,44,352,44],[378,45,352,45,"length"],[378,51,352,51],[378,53,352,53,"i"],[378,54,352,54],[378,56,352,56],[378,58,352,58],[379,10,353,12],[379,14,353,18,"data"],[379,18,353,22],[379,21,353,25],[379,25,353,29],[379,26,353,30,"writeBuffer"],[379,37,353,41],[379,38,353,42,"i"],[379,39,353,43],[379,40,353,44],[379,41,353,45,"data"],[379,45,353,49],[380,10,354,12],[380,14,354,16,"data"],[380,18,354,20],[380,20,354,22],[381,12,355,16,"payloadSize"],[381,23,355,27],[381,27,355,31],[381,31,355,31,"byteLength"],[381,38,355,41],[381,39,355,41,"byteLength"],[381,49,355,41],[381,51,355,42,"data"],[381,55,355,46],[381,56,355,47],[382,10,356,12],[383,10,357,12],[383,14,357,16,"i"],[383,15,357,17],[383,18,357,20],[383,19,357,21],[383,23,357,25,"payloadSize"],[383,34,357,36],[383,37,357,39],[383,41,357,43],[383,42,357,44,"_maxPayload"],[383,53,357,55],[383,55,357,57],[384,12,358,16],[384,19,358,23],[384,23,358,27],[384,24,358,28,"writeBuffer"],[384,35,358,39],[384,36,358,40,"slice"],[384,41,358,45],[384,42,358,46],[384,43,358,47],[384,45,358,49,"i"],[384,46,358,50],[384,47,358,51],[385,10,359,12],[386,10,360,12,"payloadSize"],[386,21,360,23],[386,25,360,27],[386,26,360,28],[386,27,360,29],[386,28,360,30],[387,8,361,8],[388,8,362,8],[388,15,362,15],[388,19,362,19],[388,20,362,20,"writeBuffer"],[388,31,362,31],[389,6,363,4],[390,6,364,4],[391,0,365,0],[392,0,366,0],[393,0,367,0],[394,0,368,0],[395,0,369,0],[396,0,370,0],[397,0,371,0],[398,0,372,0],[399,6,373,4],[400,4,373,4],[401,6,373,4,"key"],[401,9,373,4],[402,6,373,4,"value"],[402,11,373,4],[402,13,373,18],[402,22,373,18,"_hasPingExpired"],[402,37,373,33,"_hasPingExpired"],[402,38,373,33],[402,40,373,36],[403,8,374,8],[403,12,374,12],[403,13,374,13],[403,17,374,17],[403,18,374,18,"_pingTimeoutTime"],[403,34,374,34],[403,36,375,12],[403,43,375,19],[403,47,375,23],[404,8,376,8],[404,12,376,14,"hasExpired"],[404,22,376,24],[404,25,376,27,"Date"],[404,29,376,31],[404,30,376,32,"now"],[404,33,376,35],[404,34,376,36],[404,35,376,37],[404,38,376,40],[404,42,376,44],[404,43,376,45,"_pingTimeoutTime"],[404,59,376,61],[405,8,377,8],[405,12,377,12,"hasExpired"],[405,22,377,22],[405,24,377,24],[406,10,378,12],[406,14,378,16],[406,15,378,17,"_pingTimeoutTime"],[406,31,378,33],[406,34,378,36],[406,35,378,37],[407,10,379,12],[407,14,379,12,"nextTick"],[407,28,379,20],[407,29,379,20,"nextTick"],[407,37,379,20],[407,39,379,21],[407,45,379,27],[408,12,380,16],[408,16,380,20],[408,17,380,21,"_onClose"],[408,25,380,29],[408,26,380,30],[408,40,380,44],[408,41,380,45],[409,10,381,12],[409,11,381,13],[409,13,381,15],[409,17,381,19],[409,18,381,20,"setTimeoutFn"],[409,30,381,32],[409,31,381,33],[410,8,382,8],[411,8,383,8],[411,15,383,15,"hasExpired"],[411,25,383,25],[412,6,384,4],[413,6,385,4],[414,0,386,0],[415,0,387,0],[416,0,388,0],[417,0,389,0],[418,0,390,0],[419,0,391,0],[420,0,392,0],[421,4,385,4],[422,6,385,4,"key"],[422,9,385,4],[423,6,385,4,"value"],[423,11,385,4],[423,13,393,4],[423,22,393,4,"write"],[423,27,393,9,"write"],[423,28,393,10,"msg"],[423,31,393,13],[423,33,393,15,"options"],[423,40,393,22],[423,42,393,24,"fn"],[423,44,393,26],[423,46,393,28],[424,8,394,8],[424,12,394,12],[424,13,394,13,"_sendPacket"],[424,24,394,24],[424,25,394,25],[424,34,394,34],[424,36,394,36,"msg"],[424,39,394,39],[424,41,394,41,"options"],[424,48,394,48],[424,50,394,50,"fn"],[424,52,394,52],[424,53,394,53],[425,8,395,8],[425,15,395,15],[425,19,395,19],[426,6,396,4],[427,6,397,4],[428,0,398,0],[429,0,399,0],[430,0,400,0],[431,0,401,0],[432,0,402,0],[433,0,403,0],[434,0,404,0],[435,4,397,4],[436,6,397,4,"key"],[436,9,397,4],[437,6,397,4,"value"],[437,11,397,4],[437,13,405,4],[437,22,405,4,"send"],[437,26,405,8,"send"],[437,27,405,9,"msg"],[437,30,405,12],[437,32,405,14,"options"],[437,39,405,21],[437,41,405,23,"fn"],[437,43,405,25],[437,45,405,27],[438,8,406,8],[438,12,406,12],[438,13,406,13,"_sendPacket"],[438,24,406,24],[438,25,406,25],[438,34,406,34],[438,36,406,36,"msg"],[438,39,406,39],[438,41,406,41,"options"],[438,48,406,48],[438,50,406,50,"fn"],[438,52,406,52],[438,53,406,53],[439,8,407,8],[439,15,407,15],[439,19,407,19],[440,6,408,4],[441,6,409,4],[442,0,410,0],[443,0,411,0],[444,0,412,0],[445,0,413,0],[446,0,414,0],[447,0,415,0],[448,0,416,0],[449,0,417,0],[450,4,409,4],[451,6,409,4,"key"],[451,9,409,4],[452,6,409,4,"value"],[452,11,409,4],[452,13,418,4],[452,22,418,4,"_sendPacket"],[452,33,418,15,"_sendPacket"],[452,34,418,16,"type"],[452,38,418,20],[452,40,418,22,"data"],[452,44,418,26],[452,46,418,28,"options"],[452,53,418,35],[452,55,418,37,"fn"],[452,57,418,39],[452,59,418,41],[453,8,419,8],[453,12,419,12],[453,22,419,22],[453,27,419,27],[453,34,419,34,"data"],[453,38,419,38],[453,40,419,40],[454,10,420,12,"fn"],[454,12,420,14],[454,15,420,17,"data"],[454,19,420,21],[455,10,421,12,"data"],[455,14,421,16],[455,17,421,19,"undefined"],[455,26,421,28],[456,8,422,8],[457,8,423,8],[457,12,423,12],[457,22,423,22],[457,27,423,27],[457,34,423,34,"options"],[457,41,423,41],[457,43,423,43],[458,10,424,12,"fn"],[458,12,424,14],[458,15,424,17,"options"],[458,22,424,24],[459,10,425,12,"options"],[459,17,425,19],[459,20,425,22],[459,24,425,26],[460,8,426,8],[461,8,427,8],[461,12,427,12],[461,21,427,21],[461,26,427,26],[461,30,427,30],[461,31,427,31,"readyState"],[461,41,427,41],[461,45,427,45],[461,53,427,53],[461,58,427,58],[461,62,427,62],[461,63,427,63,"readyState"],[461,73,427,73],[461,75,427,75],[462,10,428,12],[463,8,429,8],[464,8,430,8,"options"],[464,15,430,15],[464,18,430,18,"options"],[464,25,430,25],[464,29,430,29],[464,30,430,30],[464,31,430,31],[465,8,431,8,"options"],[465,15,431,15],[465,16,431,16,"compress"],[465,24,431,24],[465,27,431,27],[465,32,431,32],[465,37,431,37,"options"],[465,44,431,44],[465,45,431,45,"compress"],[465,53,431,53],[466,8,432,8],[466,12,432,14,"packet"],[466,18,432,20],[466,21,432,23],[467,10,433,12,"type"],[467,14,433,16],[467,16,433,18,"type"],[467,20,433,22],[468,10,434,12,"data"],[468,14,434,16],[468,16,434,18,"data"],[468,20,434,22],[469,10,435,12,"options"],[469,17,435,19],[469,19,435,21,"options"],[470,8,436,8],[470,9,436,9],[471,8,437,8],[471,12,437,12],[471,13,437,13,"emitReserved"],[471,25,437,25],[471,26,437,26],[471,40,437,40],[471,42,437,42,"packet"],[471,48,437,48],[471,49,437,49],[472,8,438,8],[472,12,438,12],[472,13,438,13,"writeBuffer"],[472,24,438,24],[472,25,438,25,"push"],[472,29,438,29],[472,30,438,30,"packet"],[472,36,438,36],[472,37,438,37],[473,8,439,8],[473,12,439,12,"fn"],[473,14,439,14],[473,16,440,12],[473,20,440,16],[473,21,440,17,"once"],[473,25,440,21],[473,26,440,22],[473,33,440,29],[473,35,440,31,"fn"],[473,37,440,33],[473,38,440,34],[474,8,441,8],[474,12,441,12],[474,13,441,13,"flush"],[474,18,441,18],[474,19,441,19],[474,20,441,20],[475,6,442,4],[476,6,443,4],[477,0,444,0],[478,0,445,0],[479,4,443,4],[480,6,443,4,"key"],[480,9,443,4],[481,6,443,4,"value"],[481,11,443,4],[481,13,446,4],[481,22,446,4,"close"],[481,27,446,9,"close"],[481,28,446,9],[481,30,446,12],[482,8,447,8],[482,12,447,14,"close"],[482,17,447,19],[482,20,447,22,"close"],[482,21,447,22],[482,26,447,28],[483,10,448,12],[483,14,448,16],[483,15,448,17,"_onClose"],[483,23,448,25],[483,24,448,26],[483,38,448,40],[483,39,448,41],[484,10,449,12],[484,14,449,16],[484,15,449,17,"transport"],[484,24,449,26],[484,25,449,27,"close"],[484,30,449,32],[484,31,449,33],[484,32,449,34],[485,8,450,8],[485,9,450,9],[486,8,451,8],[486,12,451,14,"cleanupAndClose"],[486,27,451,29],[486,30,451,32,"cleanupAndClose"],[486,31,451,32],[486,36,451,38],[487,10,452,12],[487,14,452,16],[487,15,452,17,"off"],[487,18,452,20],[487,19,452,21],[487,28,452,30],[487,30,452,32,"cleanupAndClose"],[487,45,452,47],[487,46,452,48],[488,10,453,12],[488,14,453,16],[488,15,453,17,"off"],[488,18,453,20],[488,19,453,21],[488,33,453,35],[488,35,453,37,"cleanupAndClose"],[488,50,453,52],[488,51,453,53],[489,10,454,12,"close"],[489,15,454,17],[489,16,454,18],[489,17,454,19],[490,8,455,8],[490,9,455,9],[491,8,456,8],[491,12,456,14,"waitForUpgrade"],[491,26,456,28],[491,29,456,31,"waitForUpgrade"],[491,30,456,31],[491,35,456,37],[492,10,457,12],[493,10,458,12],[493,14,458,16],[493,15,458,17,"once"],[493,19,458,21],[493,20,458,22],[493,29,458,31],[493,31,458,33,"cleanupAndClose"],[493,46,458,48],[493,47,458,49],[494,10,459,12],[494,14,459,16],[494,15,459,17,"once"],[494,19,459,21],[494,20,459,22],[494,34,459,36],[494,36,459,38,"cleanupAndClose"],[494,51,459,53],[494,52,459,54],[495,8,460,8],[495,9,460,9],[496,8,461,8],[496,12,461,12],[496,21,461,21],[496,26,461,26],[496,30,461,30],[496,31,461,31,"readyState"],[496,41,461,41],[496,45,461,45],[496,51,461,51],[496,56,461,56],[496,60,461,60],[496,61,461,61,"readyState"],[496,71,461,71],[496,73,461,73],[497,10,462,12],[497,14,462,16],[497,15,462,17,"readyState"],[497,25,462,27],[497,28,462,30],[497,37,462,39],[498,10,463,12],[498,14,463,16],[498,18,463,20],[498,19,463,21,"writeBuffer"],[498,30,463,32],[498,31,463,33,"length"],[498,37,463,39],[498,39,463,41],[499,12,464,16],[499,16,464,20],[499,17,464,21,"once"],[499,21,464,25],[499,22,464,26],[499,29,464,33],[499,31,464,35],[499,37,464,41],[500,14,465,20],[500,18,465,24],[500,22,465,28],[500,23,465,29,"upgrading"],[500,32,465,38],[500,34,465,40],[501,16,466,24,"waitForUpgrade"],[501,30,466,38],[501,31,466,39],[501,32,466,40],[502,14,467,20],[502,15,467,21],[502,21,468,25],[503,16,469,24,"close"],[503,21,469,29],[503,22,469,30],[503,23,469,31],[504,14,470,20],[505,12,471,16],[505,13,471,17],[505,14,471,18],[506,10,472,12],[506,11,472,13],[506,17,473,17],[506,21,473,21],[506,25,473,25],[506,26,473,26,"upgrading"],[506,35,473,35],[506,37,473,37],[507,12,474,16,"waitForUpgrade"],[507,26,474,30],[507,27,474,31],[507,28,474,32],[508,10,475,12],[508,11,475,13],[508,17,476,17],[509,12,477,16,"close"],[509,17,477,21],[509,18,477,22],[509,19,477,23],[510,10,478,12],[511,8,479,8],[512,8,480,8],[512,15,480,15],[512,19,480,19],[513,6,481,4],[514,6,482,4],[515,0,483,0],[516,0,484,0],[517,0,485,0],[518,0,486,0],[519,4,482,4],[520,6,482,4,"key"],[520,9,482,4],[521,6,482,4,"value"],[521,11,482,4],[521,13,487,4],[521,22,487,4,"_onError"],[521,30,487,12,"_onError"],[521,31,487,13,"err"],[521,34,487,16],[521,36,487,18],[522,8,488,8,"SocketWithoutUpgrade"],[522,28,488,28],[522,29,488,29,"priorWebsocketSuccess"],[522,50,488,50],[522,53,488,53],[522,58,488,58],[523,8,489,8],[523,12,489,12],[523,16,489,16],[523,17,489,17,"opts"],[523,21,489,21],[523,22,489,22,"tryAllTransports"],[523,38,489,38],[523,42,490,12],[523,46,490,16],[523,47,490,17,"transports"],[523,57,490,27],[523,58,490,28,"length"],[523,64,490,34],[523,67,490,37],[523,68,490,38],[523,72,491,12],[523,76,491,16],[523,77,491,17,"readyState"],[523,87,491,27],[523,92,491,32],[523,101,491,41],[523,103,491,43],[524,10,492,12],[524,14,492,16],[524,15,492,17,"transports"],[524,25,492,27],[524,26,492,28,"shift"],[524,31,492,33],[524,32,492,34],[524,33,492,35],[525,10,493,12],[525,17,493,19],[525,21,493,23],[525,22,493,24,"_open"],[525,27,493,29],[525,28,493,30],[525,29,493,31],[526,8,494,8],[527,8,495,8],[527,12,495,12],[527,13,495,13,"emitReserved"],[527,25,495,25],[527,26,495,26],[527,33,495,33],[527,35,495,35,"err"],[527,38,495,38],[527,39,495,39],[528,8,496,8],[528,12,496,12],[528,13,496,13,"_onClose"],[528,21,496,21],[528,22,496,22],[528,39,496,39],[528,41,496,41,"err"],[528,44,496,44],[528,45,496,45],[529,6,497,4],[530,6,498,4],[531,0,499,0],[532,0,500,0],[533,0,501,0],[534,0,502,0],[535,4,498,4],[536,6,498,4,"key"],[536,9,498,4],[537,6,498,4,"value"],[537,11,498,4],[537,13,503,4],[537,22,503,4,"_onClose"],[537,30,503,12,"_onClose"],[537,31,503,13,"reason"],[537,37,503,19],[537,39,503,21,"description"],[537,50,503,32],[537,52,503,34],[538,8,504,8],[538,12,504,12],[538,21,504,21],[538,26,504,26],[538,30,504,30],[538,31,504,31,"readyState"],[538,41,504,41],[538,45,505,12],[538,51,505,18],[538,56,505,23],[538,60,505,27],[538,61,505,28,"readyState"],[538,71,505,38],[538,75,506,12],[538,84,506,21],[538,89,506,26],[538,93,506,30],[538,94,506,31,"readyState"],[538,104,506,41],[538,106,506,43],[539,10,507,12],[540,10,508,12],[540,14,508,16],[540,15,508,17,"clearTimeoutFn"],[540,29,508,31],[540,30,508,32],[540,34,508,36],[540,35,508,37,"_pingTimeoutTimer"],[540,52,508,54],[540,53,508,55],[541,10,509,12],[542,10,510,12],[542,14,510,16],[542,15,510,17,"transport"],[542,24,510,26],[542,25,510,27,"removeAllListeners"],[542,43,510,45],[542,44,510,46],[542,51,510,53],[542,52,510,54],[543,10,511,12],[544,10,512,12],[544,14,512,16],[544,15,512,17,"transport"],[544,24,512,26],[544,25,512,27,"close"],[544,30,512,32],[544,31,512,33],[544,32,512,34],[545,10,513,12],[546,10,514,12],[546,14,514,16],[546,15,514,17,"transport"],[546,24,514,26],[546,25,514,27,"removeAllListeners"],[546,43,514,45],[546,44,514,46],[546,45,514,47],[547,10,515,12],[547,14,515,16,"withEventListeners"],[547,32,515,34],[547,34,515,36],[548,12,516,16],[548,16,516,20],[548,20,516,24],[548,21,516,25,"_beforeunloadEventListener"],[548,47,516,51],[548,49,516,53],[549,14,517,20,"removeEventListener"],[549,33,517,39],[549,34,517,40],[549,48,517,54],[549,50,517,56],[549,54,517,60],[549,55,517,61,"_beforeunloadEventListener"],[549,81,517,87],[549,83,517,89],[549,88,517,94],[549,89,517,95],[550,12,518,16],[551,12,519,16],[551,16,519,20],[551,20,519,24],[551,21,519,25,"_offlineEventListener"],[551,42,519,46],[551,44,519,48],[552,14,520,20],[552,18,520,26,"i"],[552,19,520,27],[552,22,520,30,"OFFLINE_EVENT_LISTENERS"],[552,45,520,53],[552,46,520,54,"indexOf"],[552,53,520,61],[552,54,520,62],[552,58,520,66],[552,59,520,67,"_offlineEventListener"],[552,80,520,88],[552,81,520,89],[553,14,521,20],[553,18,521,24,"i"],[553,19,521,25],[553,24,521,30],[553,25,521,31],[553,26,521,32],[553,28,521,34],[554,16,522,24,"OFFLINE_EVENT_LISTENERS"],[554,39,522,47],[554,40,522,48,"splice"],[554,46,522,54],[554,47,522,55,"i"],[554,48,522,56],[554,50,522,58],[554,51,522,59],[554,52,522,60],[555,14,523,20],[556,12,524,16],[557,10,525,12],[558,10,526,12],[559,10,527,12],[559,14,527,16],[559,15,527,17,"readyState"],[559,25,527,27],[559,28,527,30],[559,36,527,38],[560,10,528,12],[561,10,529,12],[561,14,529,16],[561,15,529,17,"id"],[561,17,529,19],[561,20,529,22],[561,24,529,26],[562,10,530,12],[563,10,531,12],[563,14,531,16],[563,15,531,17,"emitReserved"],[563,27,531,29],[563,28,531,30],[563,35,531,37],[563,37,531,39,"reason"],[563,43,531,45],[563,45,531,47,"description"],[563,56,531,58],[563,57,531,59],[564,10,532,12],[565,10,533,12],[566,10,534,12],[566,14,534,16],[566,15,534,17,"writeBuffer"],[566,26,534,28],[566,29,534,31],[566,31,534,33],[567,10,535,12],[567,14,535,16],[567,15,535,17,"_prevBufferLen"],[567,29,535,31],[567,32,535,34],[567,33,535,35],[568,8,536,8],[569,6,537,4],[570,4,537,5],[571,2,537,5],[571,4,41,42,"Emitter"],[571,29,41,49],[571,30,41,49,"Emitter"],[571,37,41,49],[572,2,539,0,"SocketWithoutUpgrade"],[572,22,539,20],[572,23,539,21,"protocol"],[572,31,539,29],[572,34,539,32,"protocol"],[572,49,539,40],[572,50,539,40,"protocol"],[572,58,539,40],[573,2,540,0],[574,0,541,0],[575,0,542,0],[576,0,543,0],[577,0,544,0],[578,0,545,0],[579,0,546,0],[580,0,547,0],[581,0,548,0],[582,0,549,0],[583,0,550,0],[584,0,551,0],[585,0,552,0],[586,0,553,0],[587,0,554,0],[588,0,555,0],[589,0,556,0],[590,0,557,0],[591,0,558,0],[592,0,559,0],[593,0,560,0],[594,0,561,0],[595,0,562,0],[596,2,540,0],[596,6,563,13,"SocketWithUpgrade"],[596,23,563,30],[596,49,563,30,"_SocketWithoutUpgrade"],[596,70,563,30],[597,4,564,4],[597,13,564,4,"SocketWithUpgrade"],[597,31,564,4],[597,33,564,18],[598,6,564,18],[598,10,564,18,"_this2"],[598,16,564,18],[599,6,564,18],[599,10,564,18,"_classCallCheck"],[599,25,564,18],[599,26,564,18,"default"],[599,33,564,18],[599,41,564,18,"SocketWithUpgrade"],[599,58,564,18],[600,6,565,8,"_this2"],[600,12,565,8],[600,19,565,8,"_callSuper"],[600,29,565,8],[600,30,565,8,"default"],[600,37,565,8],[600,45,565,8,"SocketWithUpgrade"],[600,62,565,8],[600,64,565,17,"arguments"],[600,73,565,26],[601,6,566,8,"_this2"],[601,12,566,8],[601,13,566,13,"_upgrades"],[601,22,566,22],[601,25,566,25],[601,27,566,27],[602,6,566,28],[602,13,566,28,"_this2"],[602,19,566,28],[603,4,567,4],[604,4,567,5],[604,8,567,5,"_inherits"],[604,17,567,5],[604,18,567,5,"default"],[604,25,567,5],[604,27,567,5,"SocketWithUpgrade"],[604,44,567,5],[604,46,567,5,"_SocketWithoutUpgrade"],[604,67,567,5],[605,4,567,5],[605,15,567,5,"_createClass"],[605,27,567,5],[605,28,567,5,"default"],[605,35,567,5],[605,37,567,5,"SocketWithUpgrade"],[605,54,567,5],[606,6,567,5,"key"],[606,9,567,5],[607,6,567,5,"value"],[607,11,567,5],[607,13,568,4],[607,22,568,4,"onOpen"],[607,28,568,10,"onOpen"],[607,29,568,10],[607,31,568,13],[608,8,569,8],[608,12,569,8,"_superPropGet"],[608,25,569,8],[608,26,569,8,"default"],[608,33,569,8],[608,35,569,8,"SocketWithUpgrade"],[608,52,569,8],[609,8,570,8],[609,12,570,12],[609,18,570,18],[609,23,570,23],[609,27,570,27],[609,28,570,28,"readyState"],[609,38,570,38],[609,42,570,42],[609,46,570,46],[609,47,570,47,"opts"],[609,51,570,51],[609,52,570,52,"upgrade"],[609,59,570,59],[609,61,570,61],[610,10,571,12],[610,15,571,17],[610,19,571,21,"i"],[610,20,571,22],[610,23,571,25],[610,24,571,26],[610,26,571,28,"i"],[610,27,571,29],[610,30,571,32],[610,34,571,36],[610,35,571,37,"_upgrades"],[610,44,571,46],[610,45,571,47,"length"],[610,51,571,53],[610,53,571,55,"i"],[610,54,571,56],[610,56,571,58],[610,58,571,60],[611,12,572,16],[611,16,572,20],[611,17,572,21,"_probe"],[611,23,572,27],[611,24,572,28],[611,28,572,32],[611,29,572,33,"_upgrades"],[611,38,572,42],[611,39,572,43,"i"],[611,40,572,44],[611,41,572,45],[611,42,572,46],[612,10,573,12],[613,8,574,8],[614,6,575,4],[615,6,576,4],[616,0,577,0],[617,0,578,0],[618,0,579,0],[619,0,580,0],[620,0,581,0],[621,4,576,4],[622,6,576,4,"key"],[622,9,576,4],[623,6,576,4,"value"],[623,11,576,4],[623,13,582,4],[623,22,582,4,"_probe"],[623,28,582,10,"_probe"],[623,29,582,11,"name"],[623,33,582,15],[623,35,582,17],[624,8,583,8],[624,12,583,12,"transport"],[624,21,583,21],[624,24,583,24],[624,28,583,28],[624,29,583,29,"createTransport"],[624,44,583,44],[624,45,583,45,"name"],[624,49,583,49],[624,50,583,50],[625,8,584,8],[625,12,584,12,"failed"],[625,18,584,18],[625,21,584,21],[625,26,584,26],[626,8,585,8,"SocketWithoutUpgrade"],[626,28,585,28],[626,29,585,29,"priorWebsocketSuccess"],[626,50,585,50],[626,53,585,53],[626,58,585,58],[627,8,586,8],[627,12,586,14,"onTransportOpen"],[627,27,586,29],[627,30,586,32,"onTransportOpen"],[627,31,586,32],[627,36,586,38],[628,10,587,12],[628,14,587,16,"failed"],[628,20,587,22],[628,22,588,16],[629,10,589,12,"transport"],[629,19,589,21],[629,20,589,22,"send"],[629,24,589,26],[629,25,589,27],[629,26,589,28],[630,12,589,30,"type"],[630,16,589,34],[630,18,589,36],[630,24,589,42],[631,12,589,44,"data"],[631,16,589,48],[631,18,589,50],[632,10,589,58],[632,11,589,59],[632,12,589,60],[632,13,589,61],[633,10,590,12,"transport"],[633,19,590,21],[633,20,590,22,"once"],[633,24,590,26],[633,25,590,27],[633,33,590,35],[633,35,590,38,"msg"],[633,38,590,41],[633,42,590,46],[634,12,591,16],[634,16,591,20,"failed"],[634,22,591,26],[634,24,592,20],[635,12,593,16],[635,16,593,20],[635,22,593,26],[635,27,593,31,"msg"],[635,30,593,34],[635,31,593,35,"type"],[635,35,593,39],[635,39,593,43],[635,46,593,50],[635,51,593,55,"msg"],[635,54,593,58],[635,55,593,59,"data"],[635,59,593,63],[635,61,593,65],[636,14,594,20],[636,18,594,24],[636,19,594,25,"upgrading"],[636,28,594,34],[636,31,594,37],[636,35,594,41],[637,14,595,20],[637,18,595,24],[637,19,595,25,"emitReserved"],[637,31,595,37],[637,32,595,38],[637,43,595,49],[637,45,595,51,"transport"],[637,54,595,60],[637,55,595,61],[638,14,596,20],[638,18,596,24],[638,19,596,25,"transport"],[638,28,596,34],[638,30,597,24],[639,14,598,20,"SocketWithoutUpgrade"],[639,34,598,40],[639,35,598,41,"priorWebsocketSuccess"],[639,56,598,62],[639,59,599,24],[639,70,599,35],[639,75,599,40,"transport"],[639,84,599,49],[639,85,599,50,"name"],[639,89,599,54],[640,14,600,20],[640,18,600,24],[640,19,600,25,"transport"],[640,28,600,34],[640,29,600,35,"pause"],[640,34,600,40],[640,35,600,41],[640,41,600,47],[641,16,601,24],[641,20,601,28,"failed"],[641,26,601,34],[641,28,602,28],[642,16,603,24],[642,20,603,28],[642,28,603,36],[642,33,603,41],[642,37,603,45],[642,38,603,46,"readyState"],[642,48,603,56],[642,50,604,28],[643,16,605,24,"cleanup"],[643,23,605,31],[643,24,605,32],[643,25,605,33],[644,16,606,24],[644,20,606,28],[644,21,606,29,"setTransport"],[644,33,606,41],[644,34,606,42,"transport"],[644,43,606,51],[644,44,606,52],[645,16,607,24,"transport"],[645,25,607,33],[645,26,607,34,"send"],[645,30,607,38],[645,31,607,39],[645,32,607,40],[646,18,607,42,"type"],[646,22,607,46],[646,24,607,48],[647,16,607,58],[647,17,607,59],[647,18,607,60],[647,19,607,61],[648,16,608,24],[648,20,608,28],[648,21,608,29,"emitReserved"],[648,33,608,41],[648,34,608,42],[648,43,608,51],[648,45,608,53,"transport"],[648,54,608,62],[648,55,608,63],[649,16,609,24,"transport"],[649,25,609,33],[649,28,609,36],[649,32,609,40],[650,16,610,24],[650,20,610,28],[650,21,610,29,"upgrading"],[650,30,610,38],[650,33,610,41],[650,38,610,46],[651,16,611,24],[651,20,611,28],[651,21,611,29,"flush"],[651,26,611,34],[651,27,611,35],[651,28,611,36],[652,14,612,20],[652,15,612,21],[652,16,612,22],[653,12,613,16],[653,13,613,17],[653,19,614,21],[654,14,615,20],[654,18,615,26,"err"],[654,21,615,29],[654,24,615,32],[654,28,615,36,"Error"],[654,33,615,41],[654,34,615,42],[654,47,615,55],[654,48,615,56],[655,14,616,20],[656,14,617,20,"err"],[656,17,617,23],[656,18,617,24,"transport"],[656,27,617,33],[656,30,617,36,"transport"],[656,39,617,45],[656,40,617,46,"name"],[656,44,617,50],[657,14,618,20],[657,18,618,24],[657,19,618,25,"emitReserved"],[657,31,618,37],[657,32,618,38],[657,46,618,52],[657,48,618,54,"err"],[657,51,618,57],[657,52,618,58],[658,12,619,16],[659,10,620,12],[659,11,620,13],[659,12,620,14],[660,8,621,8],[660,9,621,9],[661,8,622,8],[661,17,622,17,"freezeTransport"],[661,32,622,32,"freezeTransport"],[661,33,622,32],[661,35,622,35],[662,10,623,12],[662,14,623,16,"failed"],[662,20,623,22],[662,22,624,16],[663,10,625,12],[664,10,626,12,"failed"],[664,16,626,18],[664,19,626,21],[664,23,626,25],[665,10,627,12,"cleanup"],[665,17,627,19],[665,18,627,20],[665,19,627,21],[666,10,628,12,"transport"],[666,19,628,21],[666,20,628,22,"close"],[666,25,628,27],[666,26,628,28],[666,27,628,29],[667,10,629,12,"transport"],[667,19,629,21],[667,22,629,24],[667,26,629,28],[668,8,630,8],[669,8,631,8],[670,8,632,8],[670,12,632,14,"onerror"],[670,19,632,21],[670,22,632,25,"err"],[670,25,632,28],[670,29,632,33],[671,10,633,12],[671,14,633,18,"error"],[671,19,633,23],[671,22,633,26],[671,26,633,30,"Error"],[671,31,633,35],[671,32,633,36],[671,47,633,51],[671,50,633,54,"err"],[671,53,633,57],[671,54,633,58],[672,10,634,12],[673,10,635,12,"error"],[673,15,635,17],[673,16,635,18,"transport"],[673,25,635,27],[673,28,635,30,"transport"],[673,37,635,39],[673,38,635,40,"name"],[673,42,635,44],[674,10,636,12,"freezeTransport"],[674,25,636,27],[674,26,636,28],[674,27,636,29],[675,10,637,12],[675,14,637,16],[675,15,637,17,"emitReserved"],[675,27,637,29],[675,28,637,30],[675,42,637,44],[675,44,637,46,"error"],[675,49,637,51],[675,50,637,52],[676,8,638,8],[676,9,638,9],[677,8,639,8],[677,17,639,17,"onTransportClose"],[677,33,639,33,"onTransportClose"],[677,34,639,33],[677,36,639,36],[678,10,640,12,"onerror"],[678,17,640,19],[678,18,640,20],[678,36,640,38],[678,37,640,39],[679,8,641,8],[680,8,642,8],[681,8,643,8],[681,17,643,17,"onclose"],[681,24,643,24,"onclose"],[681,25,643,24],[681,27,643,27],[682,10,644,12,"onerror"],[682,17,644,19],[682,18,644,20],[682,33,644,35],[682,34,644,36],[683,8,645,8],[684,8,646,8],[685,8,647,8],[685,17,647,17,"onupgrade"],[685,26,647,26,"onupgrade"],[685,27,647,27,"to"],[685,29,647,29],[685,31,647,31],[686,10,648,12],[686,14,648,16,"transport"],[686,23,648,25],[686,27,648,29,"to"],[686,29,648,31],[686,30,648,32,"name"],[686,34,648,36],[686,39,648,41,"transport"],[686,48,648,50],[686,49,648,51,"name"],[686,53,648,55],[686,55,648,57],[687,12,649,16,"freezeTransport"],[687,27,649,31],[687,28,649,32],[687,29,649,33],[688,10,650,12],[689,8,651,8],[690,8,652,8],[691,8,653,8],[691,12,653,14,"cleanup"],[691,19,653,21],[691,22,653,24,"cleanup"],[691,23,653,24],[691,28,653,30],[692,10,654,12,"transport"],[692,19,654,21],[692,20,654,22,"removeListener"],[692,34,654,36],[692,35,654,37],[692,41,654,43],[692,43,654,45,"onTransportOpen"],[692,58,654,60],[692,59,654,61],[693,10,655,12,"transport"],[693,19,655,21],[693,20,655,22,"removeListener"],[693,34,655,36],[693,35,655,37],[693,42,655,44],[693,44,655,46,"onerror"],[693,51,655,53],[693,52,655,54],[694,10,656,12,"transport"],[694,19,656,21],[694,20,656,22,"removeListener"],[694,34,656,36],[694,35,656,37],[694,42,656,44],[694,44,656,46,"onTransportClose"],[694,60,656,62],[694,61,656,63],[695,10,657,12],[695,14,657,16],[695,15,657,17,"off"],[695,18,657,20],[695,19,657,21],[695,26,657,28],[695,28,657,30,"onclose"],[695,35,657,37],[695,36,657,38],[696,10,658,12],[696,14,658,16],[696,15,658,17,"off"],[696,18,658,20],[696,19,658,21],[696,30,658,32],[696,32,658,34,"onupgrade"],[696,41,658,43],[696,42,658,44],[697,8,659,8],[697,9,659,9],[698,8,660,8,"transport"],[698,17,660,17],[698,18,660,18,"once"],[698,22,660,22],[698,23,660,23],[698,29,660,29],[698,31,660,31,"onTransportOpen"],[698,46,660,46],[698,47,660,47],[699,8,661,8,"transport"],[699,17,661,17],[699,18,661,18,"once"],[699,22,661,22],[699,23,661,23],[699,30,661,30],[699,32,661,32,"onerror"],[699,39,661,39],[699,40,661,40],[700,8,662,8,"transport"],[700,17,662,17],[700,18,662,18,"once"],[700,22,662,22],[700,23,662,23],[700,30,662,30],[700,32,662,32,"onTransportClose"],[700,48,662,48],[700,49,662,49],[701,8,663,8],[701,12,663,12],[701,13,663,13,"once"],[701,17,663,17],[701,18,663,18],[701,25,663,25],[701,27,663,27,"onclose"],[701,34,663,34],[701,35,663,35],[702,8,664,8],[702,12,664,12],[702,13,664,13,"once"],[702,17,664,17],[702,18,664,18],[702,29,664,29],[702,31,664,31,"onupgrade"],[702,40,664,40],[702,41,664,41],[703,8,665,8],[703,12,665,12],[703,16,665,16],[703,17,665,17,"_upgrades"],[703,26,665,26],[703,27,665,27,"indexOf"],[703,34,665,34],[703,35,665,35],[703,49,665,49],[703,50,665,50],[703,55,665,55],[703,56,665,56],[703,57,665,57],[703,61,666,12,"name"],[703,65,666,16],[703,70,666,21],[703,84,666,35],[703,86,666,37],[704,10,667,12],[705,10,668,12],[705,14,668,16],[705,15,668,17,"setTimeoutFn"],[705,27,668,29],[705,28,668,30],[705,34,668,36],[706,12,669,16],[706,16,669,20],[706,17,669,21,"failed"],[706,23,669,27],[706,25,669,29],[707,14,670,20,"transport"],[707,23,670,29],[707,24,670,30,"open"],[707,28,670,34],[707,29,670,35],[707,30,670,36],[708,12,671,16],[709,10,672,12],[709,11,672,13],[709,13,672,15],[709,16,672,18],[709,17,672,19],[710,8,673,8],[710,9,673,9],[710,15,674,13],[711,10,675,12,"transport"],[711,19,675,21],[711,20,675,22,"open"],[711,24,675,26],[711,25,675,27],[711,26,675,28],[712,8,676,8],[713,6,677,4],[714,4,677,5],[715,6,677,5,"key"],[715,9,677,5],[716,6,677,5,"value"],[716,11,677,5],[716,13,678,4],[716,22,678,4,"onHandshake"],[716,33,678,15,"onHandshake"],[716,34,678,16,"data"],[716,38,678,20],[716,40,678,22],[717,8,679,8],[717,12,679,12],[717,13,679,13,"_upgrades"],[717,22,679,22],[717,25,679,25],[717,29,679,29],[717,30,679,30,"_filterUpgrades"],[717,45,679,45],[717,46,679,46,"data"],[717,50,679,50],[717,51,679,51,"upgrades"],[717,59,679,59],[717,60,679,60],[718,8,680,8],[718,12,680,8,"_superPropGet"],[718,25,680,8],[718,26,680,8,"default"],[718,33,680,8],[718,35,680,8,"SocketWithUpgrade"],[718,52,680,8],[718,79,680,26,"data"],[718,83,680,30],[719,6,681,4],[720,6,682,4],[721,0,683,0],[722,0,684,0],[723,0,685,0],[724,0,686,0],[725,0,687,0],[726,4,682,4],[727,6,682,4,"key"],[727,9,682,4],[728,6,682,4,"value"],[728,11,682,4],[728,13,688,4],[728,22,688,4,"_filterUpgrades"],[728,37,688,19,"_filterUpgrades"],[728,38,688,20,"upgrades"],[728,46,688,28],[728,48,688,30],[729,8,689,8],[729,12,689,14,"filteredUpgrades"],[729,28,689,30],[729,31,689,33],[729,33,689,35],[730,8,690,8],[730,13,690,13],[730,17,690,17,"i"],[730,18,690,18],[730,21,690,21],[730,22,690,22],[730,24,690,24,"i"],[730,25,690,25],[730,28,690,28,"upgrades"],[730,36,690,36],[730,37,690,37,"length"],[730,43,690,43],[730,45,690,45,"i"],[730,46,690,46],[730,48,690,48],[730,50,690,50],[731,10,691,12],[731,14,691,16],[731,15,691,17],[731,19,691,21],[731,20,691,22,"transports"],[731,30,691,32],[731,31,691,33,"indexOf"],[731,38,691,40],[731,39,691,41,"upgrades"],[731,47,691,49],[731,48,691,50,"i"],[731,49,691,51],[731,50,691,52],[731,51,691,53],[731,53,692,16,"filteredUpgrades"],[731,69,692,32],[731,70,692,33,"push"],[731,74,692,37],[731,75,692,38,"upgrades"],[731,83,692,46],[731,84,692,47,"i"],[731,85,692,48],[731,86,692,49],[731,87,692,50],[732,8,693,8],[733,8,694,8],[733,15,694,15,"filteredUpgrades"],[733,31,694,31],[734,6,695,4],[735,4,695,5],[736,2,695,5],[736,4,563,39,"SocketWithoutUpgrade"],[736,24,563,59],[737,2,697,0],[738,0,698,0],[739,0,699,0],[740,0,700,0],[741,0,701,0],[742,0,702,0],[743,0,703,0],[744,0,704,0],[745,0,705,0],[746,0,706,0],[747,0,707,0],[748,0,708,0],[749,0,709,0],[750,0,710,0],[751,0,711,0],[752,0,712,0],[753,0,713,0],[754,0,714,0],[755,0,715,0],[756,2,697,0],[756,6,716,13,"Socket"],[756,12,716,19],[756,38,716,19,"_SocketWithUpgrade"],[756,56,716,19],[757,4,717,4],[757,13,717,4,"Socket"],[757,20,717,16,"uri"],[757,23,717,19],[757,25,717,32],[758,6,717,32],[758,10,717,21,"opts"],[758,14,717,25],[758,17,717,25,"arguments"],[758,26,717,25],[758,27,717,25,"length"],[758,33,717,25],[758,41,717,25,"arguments"],[758,50,717,25],[758,58,717,25,"undefined"],[758,67,717,25],[758,70,717,25,"arguments"],[758,79,717,25],[758,85,717,28],[758,86,717,29],[758,87,717,30],[759,6,717,30],[759,10,717,30,"_classCallCheck"],[759,25,717,30],[759,26,717,30,"default"],[759,33,717,30],[759,41,717,30,"Socket"],[759,47,717,30],[760,6,718,8],[760,10,718,14,"o"],[760,11,718,15],[760,14,718,18],[760,21,718,25,"uri"],[760,24,718,28],[760,29,718,33],[760,37,718,41],[760,40,718,44,"uri"],[760,43,718,47],[760,46,718,50,"opts"],[760,50,718,54],[761,6,719,8],[761,10,719,12],[761,11,719,13,"o"],[761,12,719,14],[761,13,719,15,"transports"],[761,23,719,25],[761,27,720,13,"o"],[761,28,720,14],[761,29,720,15,"transports"],[761,39,720,25],[761,43,720,29],[761,50,720,36,"o"],[761,51,720,37],[761,52,720,38,"transports"],[761,62,720,48],[761,63,720,49],[761,64,720,50],[761,65,720,51],[761,70,720,56],[761,78,720,65],[761,80,720,67],[762,8,721,12,"o"],[762,9,721,13],[762,10,721,14,"transports"],[762,20,721,24],[762,23,721,27],[762,24,721,28,"o"],[762,25,721,29],[762,26,721,30,"transports"],[762,36,721,40],[762,40,721,44],[762,41,721,45],[762,50,721,54],[762,52,721,56],[762,63,721,67],[762,65,721,69],[762,79,721,83],[762,80,721,84],[762,82,722,17,"map"],[762,85,722,20],[762,86,722,22,"transportName"],[762,99,722,35],[762,103,722,40,"DEFAULT_TRANSPORTS"],[762,121,722,58],[762,122,722,58,"transports"],[762,132,722,58],[762,133,722,59,"transportName"],[762,146,722,72],[762,147,722,73],[762,148,722,74],[762,149,723,17,"filter"],[762,155,723,23],[762,156,723,25,"t"],[762,157,723,26],[762,161,723,31],[762,162,723,32],[762,163,723,33,"t"],[762,164,723,34],[762,165,723,35],[763,6,724,8],[764,6,724,9],[764,17,724,9,"_callSuper"],[764,27,724,9],[764,28,724,9,"default"],[764,35,724,9],[764,43,724,9,"Socket"],[764,49,724,9],[764,52,725,14,"uri"],[764,55,725,17],[764,57,725,19,"o"],[764,58,725,20],[765,4,726,4],[766,4,726,5],[766,8,726,5,"_inherits"],[766,17,726,5],[766,18,726,5,"default"],[766,25,726,5],[766,27,726,5,"Socket"],[766,33,726,5],[766,35,726,5,"_SocketWithUpgrade"],[766,53,726,5],[767,4,726,5],[767,15,726,5,"_createClass"],[767,27,726,5],[767,28,726,5,"default"],[767,35,726,5],[767,37,726,5,"Socket"],[767,43,726,5],[768,2,726,5],[768,4,716,28,"SocketWithUpgrade"],[768,21,716,45],[769,0,716,45],[769,3]],"functionMap":{"names":["<global>","addEventListener$argument_1","OFFLINE_EVENT_LISTENERS.forEach$argument_0","SocketWithoutUpgrade","SocketWithoutUpgrade#constructor","opts.transports.forEach$argument_0","_beforeunloadEventListener","_offlineEventListener","SocketWithoutUpgrade#createTransport","SocketWithoutUpgrade#_open","setTimeoutFn$argument_0","SocketWithoutUpgrade#setTransport","transport.on.on.on.on$argument_1","SocketWithoutUpgrade#onOpen","SocketWithoutUpgrade#_onPacket","SocketWithoutUpgrade#onHandshake","SocketWithoutUpgrade#_resetPingTimeout","SocketWithoutUpgrade#_onDrain","SocketWithoutUpgrade#flush","SocketWithoutUpgrade#_getWritablePackets","SocketWithoutUpgrade#_hasPingExpired","nextTick$argument_0","SocketWithoutUpgrade#write","SocketWithoutUpgrade#send","SocketWithoutUpgrade#_sendPacket","SocketWithoutUpgrade#close","close","cleanupAndClose","waitForUpgrade","once$argument_1","SocketWithoutUpgrade#_onError","SocketWithoutUpgrade#_onClose","SocketWithUpgrade","SocketWithUpgrade#constructor","SocketWithUpgrade#onOpen","SocketWithUpgrade#_probe","onTransportOpen","transport.once$argument_1","transport.pause$argument_0","freezeTransport","onerror","onTransportClose","onclose","onupgrade","cleanup","SocketWithUpgrade#onHandshake","SocketWithUpgrade#_filterUpgrades","Socket","Socket#constructor","map$argument_0","map.filter$argument_0"],"mappings":"AAA;gCCa;wCCC,wBD;KDC;OGyB;ICO;gCCkD;SDI;kDE2B;iBFM;6CGI;iBHI;KDQ;IKQ;KLiB;IMM;8BCG;aDE;KNY;IQM;yBCW,oDD;KRC;IUM;KVM;IWM;KX+B;IYO;KZY;IaM;mDNI;SME;KbI;IcM;KdY;IeM;KfY;IgBO;KhBmB;kBiBU;qBCM;aDE;KjBG;ImBS;KnBG;IoBS;KpBG;IqBU;KrBwB;IsBI;sBCC;SDG;gCEC;SFI;+BGC;SHI;mCII;iBJO;KtBU;I2BM;K3BU;I4BM;K5BkC;CHC;OgCyB;ICC;KDG;IEC;KFO;IGO;gCCI;qCCI;yCCU;qBDY;aDQ;SDC;QIC;SJQ;wBKE;SLM;QMC;SNE;QOE;SPE;QQE;SRI;wBSE;STM;8BzBS;ayBI;KHK;IaC;KbG;IcO;KdO;ChCC;O+CoB;ICC;qBCK,oDD;wBEC,UF;KDG;C/CC"},"hasCjsExports":false},"type":"js/module"}]}