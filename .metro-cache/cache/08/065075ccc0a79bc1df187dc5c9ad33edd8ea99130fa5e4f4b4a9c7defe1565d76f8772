{"dependencies":[{"name":"@babel/runtime/helpers/callSuper","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"378KbBHdmndC3iMXZ2Ix8oB3LeE=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/superPropGet","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"b4Lel0pEiTM8mvZZX/d05uR+OmU=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@socket.io/component-emitter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":55,"index":55}}],"key":"nWmouVdWEVSQD2UwM6teY1JyKBM=","exportNames":["*"],"imports":1}},{"name":"./binary.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":56},"end":{"line":2,"column":67,"index":123}}],"key":"n3k3ricg147CfAsjRPov5+2UD6U=","exportNames":["*"],"imports":1}},{"name":"./is-binary.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":124},"end":{"line":3,"column":53,"index":177}}],"key":"nI6Cd4R9sJDIQIUaBK8/eqMqCAI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"protocol\", {\n    enumerable: true,\n    get: function () {\n      return protocol;\n    }\n  });\n  Object.defineProperty(exports, \"PacketType\", {\n    enumerable: true,\n    get: function () {\n      return PacketType;\n    }\n  });\n  Object.defineProperty(exports, \"Encoder\", {\n    enumerable: true,\n    get: function () {\n      return Encoder;\n    }\n  });\n  Object.defineProperty(exports, \"Decoder\", {\n    enumerable: true,\n    get: function () {\n      return Decoder;\n    }\n  });\n  var _babelRuntimeHelpersCallSuper = require(_dependencyMap[0], \"@babel/runtime/helpers/callSuper\");\n  var _callSuper = _interopDefault(_babelRuntimeHelpersCallSuper);\n  var _babelRuntimeHelpersSuperPropGet = require(_dependencyMap[1], \"@babel/runtime/helpers/superPropGet\");\n  var _superPropGet = _interopDefault(_babelRuntimeHelpersSuperPropGet);\n  var _babelRuntimeHelpersInherits = require(_dependencyMap[2], \"@babel/runtime/helpers/inherits\");\n  var _inherits = _interopDefault(_babelRuntimeHelpersInherits);\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[4], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _socketIoComponentEmitter = require(_dependencyMap[5], \"@socket.io/component-emitter\");\n  var _binaryJs = require(_dependencyMap[6], \"./binary.js\");\n  var _isBinaryJs = require(_dependencyMap[7], \"./is-binary.js\");\n  /**\n   * These strings must not be used as event names, as they have a special meaning.\n   */\n  var RESERVED_EVENTS = [\"connect\", \"connect_error\", \"disconnect\", \"disconnecting\", \"newListener\", \"removeListener\" // used by the Node.js EventEmitter\n  ];\n  /**\n   * Protocol version.\n   *\n   * @public\n   */\n  var protocol = 5;\n  var PacketType;\n  (function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n  })(PacketType || (PacketType = {}));\n  /**\n   * A socket.io Encoder instance\n   */\n  var Encoder = /*#__PURE__*/function () {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    function Encoder(replacer) {\n      (0, _classCallCheck.default)(this, Encoder);\n      this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    return (0, _createClass.default)(Encoder, [{\n      key: \"encode\",\n      value: function encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n          if ((0, _isBinaryJs.hasBinary)(obj)) {\n            return this.encodeAsBinary({\n              type: obj.type === PacketType.EVENT ? PacketType.BINARY_EVENT : PacketType.BINARY_ACK,\n              nsp: obj.nsp,\n              data: obj.data,\n              id: obj.id\n            });\n          }\n        }\n        return [this.encodeAsString(obj)];\n      }\n      /**\n       * Encode packet as string.\n       */\n    }, {\n      key: \"encodeAsString\",\n      value: function encodeAsString(obj) {\n        // first is type\n        var str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT || obj.type === PacketType.BINARY_ACK) {\n          str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n          str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n          str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n          str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n      }\n      /**\n       * Encode packet as 'buffer sequence' by removing blobs, and\n       * deconstructing packet into object with placeholders and\n       * a list of buffers.\n       */\n    }, {\n      key: \"encodeAsBinary\",\n      value: function encodeAsBinary(obj) {\n        var deconstruction = (0, _binaryJs.deconstructPacket)(obj);\n        var pack = this.encodeAsString(deconstruction.packet);\n        var buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n      }\n    }]);\n  }(); // see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\n  function isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n  }\n  /**\n   * A socket.io Decoder instance\n   *\n   * @return {Object} decoder\n   */\n  var Decoder = /*#__PURE__*/function (_Emitter) {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    function Decoder(reviver) {\n      var _this;\n      (0, _classCallCheck.default)(this, Decoder);\n      _this = (0, _callSuper.default)(this, Decoder);\n      _this.reviver = reviver;\n      return _this;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    (0, _inherits.default)(Decoder, _Emitter);\n    return (0, _createClass.default)(Decoder, [{\n      key: \"add\",\n      value: function add(obj) {\n        var packet;\n        if (typeof obj === \"string\") {\n          if (this.reconstructor) {\n            throw new Error(\"got plaintext data when reconstructing a packet\");\n          }\n          packet = this.decodeString(obj);\n          var isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n          if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n            packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n            // binary packet's json\n            this.reconstructor = new BinaryReconstructor(packet);\n            // no attachments, labeled binary but no binary data to follow\n            if (packet.attachments === 0) {\n              (0, _superPropGet.default)(Decoder, \"emitReserved\", this, 3)([\"decoded\", packet]);\n            }\n          } else {\n            // non-binary full packet\n            (0, _superPropGet.default)(Decoder, \"emitReserved\", this, 3)([\"decoded\", packet]);\n          }\n        } else if ((0, _isBinaryJs.isBinary)(obj) || obj.base64) {\n          // raw binary data\n          if (!this.reconstructor) {\n            throw new Error(\"got binary data when not reconstructing a packet\");\n          } else {\n            packet = this.reconstructor.takeBinaryData(obj);\n            if (packet) {\n              // received final buffer\n              this.reconstructor = null;\n              (0, _superPropGet.default)(Decoder, \"emitReserved\", this, 3)([\"decoded\", packet]);\n            }\n          }\n        } else {\n          throw new Error(\"Unknown type: \" + obj);\n        }\n      }\n      /**\n       * Decode a packet String (JSON data)\n       *\n       * @param {String} str\n       * @return {Object} packet\n       */\n    }, {\n      key: \"decodeString\",\n      value: function decodeString(str) {\n        var i = 0;\n        // look up type\n        var p = {\n          type: Number(str.charAt(0))\n        };\n        if (PacketType[p.type] === undefined) {\n          throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT || p.type === PacketType.BINARY_ACK) {\n          var start = i + 1;\n          while (str.charAt(++i) !== \"-\" && i != str.length) {}\n          var buf = str.substring(start, i);\n          if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n            throw new Error(\"Illegal attachments\");\n          }\n          p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n          var _start = i + 1;\n          while (++i) {\n            var c = str.charAt(i);\n            if (\",\" === c) break;\n            if (i === str.length) break;\n          }\n          p.nsp = str.substring(_start, i);\n        } else {\n          p.nsp = \"/\";\n        }\n        // look up id\n        var next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n          var _start2 = i + 1;\n          while (++i) {\n            var _c = str.charAt(i);\n            if (null == _c || Number(_c) != _c) {\n              --i;\n              break;\n            }\n            if (i === str.length) break;\n          }\n          p.id = Number(str.substring(_start2, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n          var payload = this.tryParse(str.substr(i));\n          if (Decoder.isPayloadValid(p.type, payload)) {\n            p.data = payload;\n          } else {\n            throw new Error(\"invalid payload\");\n          }\n        }\n        return p;\n      }\n    }, {\n      key: \"tryParse\",\n      value: function tryParse(str) {\n        try {\n          return JSON.parse(str, this.reviver);\n        } catch (e) {\n          return false;\n        }\n      }\n    }, {\n      key: \"destroy\",\n      value:\n      /**\n       * Deallocates a parser's resources\n       */\n      function destroy() {\n        if (this.reconstructor) {\n          this.reconstructor.finishedReconstruction();\n          this.reconstructor = null;\n        }\n      }\n    }], [{\n      key: \"isPayloadValid\",\n      value: function isPayloadValid(type, payload) {\n        switch (type) {\n          case PacketType.CONNECT:\n            return isObject(payload);\n          case PacketType.DISCONNECT:\n            return payload === undefined;\n          case PacketType.CONNECT_ERROR:\n            return typeof payload === \"string\" || isObject(payload);\n          case PacketType.EVENT:\n          case PacketType.BINARY_EVENT:\n            return Array.isArray(payload) && (typeof payload[0] === \"number\" || typeof payload[0] === \"string\" && RESERVED_EVENTS.indexOf(payload[0]) === -1);\n          case PacketType.ACK:\n          case PacketType.BINARY_ACK:\n            return Array.isArray(payload);\n        }\n      }\n    }]);\n  }(_socketIoComponentEmitter.Emitter);\n  /**\n   * A manager of a binary event's 'buffer sequence'. Should\n   * be constructed whenever a packet of type BINARY_EVENT is\n   * decoded.\n   *\n   * @param {Object} packet\n   * @return {BinaryReconstructor} initialized reconstructor\n   */\n  var BinaryReconstructor = /*#__PURE__*/function () {\n    function BinaryReconstructor(packet) {\n      (0, _classCallCheck.default)(this, BinaryReconstructor);\n      this.packet = packet;\n      this.buffers = [];\n      this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    return (0, _createClass.default)(BinaryReconstructor, [{\n      key: \"takeBinaryData\",\n      value: function takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n          // done with buffer list\n          var packet = (0, _binaryJs.reconstructPacket)(this.reconPack, this.buffers);\n          this.finishedReconstruction();\n          return packet;\n        }\n        return null;\n      }\n      /**\n       * Cleans up binary packet reconstruction variables.\n       */\n    }, {\n      key: \"finishedReconstruction\",\n      value: function finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n      }\n    }]);\n  }();\n});","lineCount":363,"map":[[12,2,20,0,"Object"],[12,8,20,0],[12,9,20,0,"defineProperty"],[12,23,20,0],[12,24,20,0,"exports"],[12,31,20,0],[13,4,20,0,"enumerable"],[13,14,20,0],[14,4,20,0,"get"],[14,7,20,0],[14,18,20,0,"get"],[14,19,20,0],[15,6,20,0],[15,13,20,0,"protocol"],[15,21,20,0],[16,4,20,0],[17,2,20,0],[18,2,21,0,"Object"],[18,8,21,0],[18,9,21,0,"defineProperty"],[18,23,21,0],[18,24,21,0,"exports"],[18,31,21,0],[19,4,21,0,"enumerable"],[19,14,21,0],[20,4,21,0,"get"],[20,7,21,0],[20,18,21,0,"get"],[20,19,21,0],[21,6,21,0],[21,13,21,0,"PacketType"],[21,23,21,0],[22,4,21,0],[23,2,21,0],[24,2,34,0,"Object"],[24,8,34,0],[24,9,34,0,"defineProperty"],[24,23,34,0],[24,24,34,0,"exports"],[24,31,34,0],[25,4,34,0,"enumerable"],[25,14,34,0],[26,4,34,0,"get"],[26,7,34,0],[26,18,34,0,"get"],[26,19,34,0],[27,6,34,0],[27,13,34,0,"Encoder"],[27,20,34,0],[28,4,34,0],[29,2,34,0],[30,2,112,0,"Object"],[30,8,112,0],[30,9,112,0,"defineProperty"],[30,23,112,0],[30,24,112,0,"exports"],[30,31,112,0],[31,4,112,0,"enumerable"],[31,14,112,0],[32,4,112,0,"get"],[32,7,112,0],[32,18,112,0,"get"],[32,19,112,0],[33,6,112,0],[33,13,112,0,"Decoder"],[33,20,112,0],[34,4,112,0],[35,2,112,0],[36,2,271,1],[36,6,271,1,"_babelRuntimeHelpersCallSuper"],[36,35,271,1],[36,38,271,1,"require"],[36,45,271,1],[36,46,271,1,"_dependencyMap"],[36,60,271,1],[37,2,271,1],[37,6,271,1,"_callSuper"],[37,16,271,1],[37,19,271,1,"_interopDefault"],[37,34,271,1],[37,35,271,1,"_babelRuntimeHelpersCallSuper"],[37,64,271,1],[38,2,271,1],[38,6,271,1,"_babelRuntimeHelpersSuperPropGet"],[38,38,271,1],[38,41,271,1,"require"],[38,48,271,1],[38,49,271,1,"_dependencyMap"],[38,63,271,1],[39,2,271,1],[39,6,271,1,"_superPropGet"],[39,19,271,1],[39,22,271,1,"_interopDefault"],[39,37,271,1],[39,38,271,1,"_babelRuntimeHelpersSuperPropGet"],[39,70,271,1],[40,2,271,1],[40,6,271,1,"_babelRuntimeHelpersInherits"],[40,34,271,1],[40,37,271,1,"require"],[40,44,271,1],[40,45,271,1,"_dependencyMap"],[40,59,271,1],[41,2,271,1],[41,6,271,1,"_inherits"],[41,15,271,1],[41,18,271,1,"_interopDefault"],[41,33,271,1],[41,34,271,1,"_babelRuntimeHelpersInherits"],[41,62,271,1],[42,2,271,1],[42,6,271,1,"_babelRuntimeHelpersClassCallCheck"],[42,40,271,1],[42,43,271,1,"require"],[42,50,271,1],[42,51,271,1,"_dependencyMap"],[42,65,271,1],[43,2,271,1],[43,6,271,1,"_classCallCheck"],[43,21,271,1],[43,24,271,1,"_interopDefault"],[43,39,271,1],[43,40,271,1,"_babelRuntimeHelpersClassCallCheck"],[43,74,271,1],[44,2,271,1],[44,6,271,1,"_babelRuntimeHelpersCreateClass"],[44,37,271,1],[44,40,271,1,"require"],[44,47,271,1],[44,48,271,1,"_dependencyMap"],[44,62,271,1],[45,2,271,1],[45,6,271,1,"_createClass"],[45,18,271,1],[45,21,271,1,"_interopDefault"],[45,36,271,1],[45,37,271,1,"_babelRuntimeHelpersCreateClass"],[45,68,271,1],[46,2,1,0],[46,6,1,0,"_socketIoComponentEmitter"],[46,31,1,0],[46,34,1,0,"require"],[46,41,1,0],[46,42,1,0,"_dependencyMap"],[46,56,1,0],[47,2,2,0],[47,6,2,0,"_binaryJs"],[47,15,2,0],[47,18,2,0,"require"],[47,25,2,0],[47,26,2,0,"_dependencyMap"],[47,40,2,0],[48,2,3,0],[48,6,3,0,"_isBinaryJs"],[48,17,3,0],[48,20,3,0,"require"],[48,27,3,0],[48,28,3,0,"_dependencyMap"],[48,42,3,0],[49,2,4,0],[50,0,5,0],[51,0,6,0],[52,2,7,0],[52,6,7,6,"RESERVED_EVENTS"],[52,21,7,21],[52,24,7,24],[52,25,8,4],[52,34,8,13],[52,36,9,4],[52,51,9,19],[52,53,10,4],[52,65,10,16],[52,67,11,4],[52,82,11,19],[52,84,12,4],[52,97,12,17],[52,99,13,4],[52,115,13,20],[52,116,13,22],[53,2,13,22],[53,3,14,1],[54,2,15,0],[55,0,16,0],[56,0,17,0],[57,0,18,0],[58,0,19,0],[59,2,20,7],[59,6,20,13,"protocol"],[59,14,20,21],[59,17,20,24],[59,18,20,25],[60,2,21,7],[60,6,21,11,"PacketType"],[60,16,21,21],[61,2,22,0],[61,3,22,1],[61,13,22,11,"PacketType"],[61,23,22,21],[61,25,22,23],[62,4,23,4,"PacketType"],[62,14,23,14],[62,15,23,15,"PacketType"],[62,25,23,25],[62,26,23,26],[62,35,23,35],[62,36,23,36],[62,39,23,39],[62,40,23,40],[62,41,23,41],[62,44,23,44],[62,53,23,53],[63,4,24,4,"PacketType"],[63,14,24,14],[63,15,24,15,"PacketType"],[63,25,24,25],[63,26,24,26],[63,38,24,38],[63,39,24,39],[63,42,24,42],[63,43,24,43],[63,44,24,44],[63,47,24,47],[63,59,24,59],[64,4,25,4,"PacketType"],[64,14,25,14],[64,15,25,15,"PacketType"],[64,25,25,25],[64,26,25,26],[64,33,25,33],[64,34,25,34],[64,37,25,37],[64,38,25,38],[64,39,25,39],[64,42,25,42],[64,49,25,49],[65,4,26,4,"PacketType"],[65,14,26,14],[65,15,26,15,"PacketType"],[65,25,26,25],[65,26,26,26],[65,31,26,31],[65,32,26,32],[65,35,26,35],[65,36,26,36],[65,37,26,37],[65,40,26,40],[65,45,26,45],[66,4,27,4,"PacketType"],[66,14,27,14],[66,15,27,15,"PacketType"],[66,25,27,25],[66,26,27,26],[66,41,27,41],[66,42,27,42],[66,45,27,45],[66,46,27,46],[66,47,27,47],[66,50,27,50],[66,65,27,65],[67,4,28,4,"PacketType"],[67,14,28,14],[67,15,28,15,"PacketType"],[67,25,28,25],[67,26,28,26],[67,40,28,40],[67,41,28,41],[67,44,28,44],[67,45,28,45],[67,46,28,46],[67,49,28,49],[67,63,28,63],[68,4,29,4,"PacketType"],[68,14,29,14],[68,15,29,15,"PacketType"],[68,25,29,25],[68,26,29,26],[68,38,29,38],[68,39,29,39],[68,42,29,42],[68,43,29,43],[68,44,29,44],[68,47,29,47],[68,59,29,59],[69,2,30,0],[69,3,30,1],[69,5,30,3,"PacketType"],[69,15,30,13],[69,20,30,18,"PacketType"],[69,30,30,28],[69,33,30,31],[69,34,30,32],[69,35,30,33],[69,36,30,34],[69,37,30,35],[70,2,31,0],[71,0,32,0],[72,0,33,0],[73,2,31,0],[73,6,34,13,"Encoder"],[73,13,34,20],[74,4,35,4],[75,0,36,0],[76,0,37,0],[77,0,38,0],[78,0,39,0],[79,4,40,4],[79,13,40,4,"Encoder"],[79,21,40,16,"replacer"],[79,29,40,24],[79,31,40,26],[80,6,40,26],[80,10,40,26,"_classCallCheck"],[80,25,40,26],[80,26,40,26,"default"],[80,33,40,26],[80,41,40,26,"Encoder"],[80,48,40,26],[81,6,41,8],[81,10,41,12],[81,11,41,13,"replacer"],[81,19,41,21],[81,22,41,24,"replacer"],[81,30,41,32],[82,4,42,4],[83,4,43,4],[84,0,44,0],[85,0,45,0],[86,0,46,0],[87,0,47,0],[88,0,48,0],[89,4,43,4],[89,15,43,4,"_createClass"],[89,27,43,4],[89,28,43,4,"default"],[89,35,43,4],[89,37,43,4,"Encoder"],[89,44,43,4],[90,6,43,4,"key"],[90,9,43,4],[91,6,43,4,"value"],[91,11,43,4],[91,13,49,4],[91,22,49,4,"encode"],[91,28,49,10,"encode"],[91,29,49,11,"obj"],[91,32,49,14],[91,34,49,16],[92,8,50,8],[92,12,50,12,"obj"],[92,15,50,15],[92,16,50,16,"type"],[92,20,50,20],[92,25,50,25,"PacketType"],[92,35,50,35],[92,36,50,36,"EVENT"],[92,41,50,41],[92,45,50,45,"obj"],[92,48,50,48],[92,49,50,49,"type"],[92,53,50,53],[92,58,50,58,"PacketType"],[92,68,50,68],[92,69,50,69,"ACK"],[92,72,50,72],[92,74,50,74],[93,10,51,12],[93,14,51,16],[93,18,51,16,"hasBinary"],[93,29,51,25],[93,30,51,25,"hasBinary"],[93,39,51,25],[93,41,51,26,"obj"],[93,44,51,29],[93,45,51,30],[93,47,51,32],[94,12,52,16],[94,19,52,23],[94,23,52,27],[94,24,52,28,"encodeAsBinary"],[94,38,52,42],[94,39,52,43],[95,14,53,20,"type"],[95,18,53,24],[95,20,53,26,"obj"],[95,23,53,29],[95,24,53,30,"type"],[95,28,53,34],[95,33,53,39,"PacketType"],[95,43,53,49],[95,44,53,50,"EVENT"],[95,49,53,55],[95,52,54,26,"PacketType"],[95,62,54,36],[95,63,54,37,"BINARY_EVENT"],[95,75,54,49],[95,78,55,26,"PacketType"],[95,88,55,36],[95,89,55,37,"BINARY_ACK"],[95,99,55,47],[96,14,56,20,"nsp"],[96,17,56,23],[96,19,56,25,"obj"],[96,22,56,28],[96,23,56,29,"nsp"],[96,26,56,32],[97,14,57,20,"data"],[97,18,57,24],[97,20,57,26,"obj"],[97,23,57,29],[97,24,57,30,"data"],[97,28,57,34],[98,14,58,20,"id"],[98,16,58,22],[98,18,58,24,"obj"],[98,21,58,27],[98,22,58,28,"id"],[99,12,59,16],[99,13,59,17],[99,14,59,18],[100,10,60,12],[101,8,61,8],[102,8,62,8],[102,15,62,15],[102,16,62,16],[102,20,62,20],[102,21,62,21,"encodeAsString"],[102,35,62,35],[102,36,62,36,"obj"],[102,39,62,39],[102,40,62,40],[102,41,62,41],[103,6,63,4],[104,6,64,4],[105,0,65,0],[106,0,66,0],[107,4,64,4],[108,6,64,4,"key"],[108,9,64,4],[109,6,64,4,"value"],[109,11,64,4],[109,13,67,4],[109,22,67,4,"encodeAsString"],[109,36,67,18,"encodeAsString"],[109,37,67,19,"obj"],[109,40,67,22],[109,42,67,24],[110,8,68,8],[111,8,69,8],[111,12,69,12,"str"],[111,15,69,15],[111,18,69,18],[111,20,69,20],[111,23,69,23,"obj"],[111,26,69,26],[111,27,69,27,"type"],[111,31,69,31],[112,8,70,8],[113,8,71,8],[113,12,71,12,"obj"],[113,15,71,15],[113,16,71,16,"type"],[113,20,71,20],[113,25,71,25,"PacketType"],[113,35,71,35],[113,36,71,36,"BINARY_EVENT"],[113,48,71,48],[113,52,72,12,"obj"],[113,55,72,15],[113,56,72,16,"type"],[113,60,72,20],[113,65,72,25,"PacketType"],[113,75,72,35],[113,76,72,36,"BINARY_ACK"],[113,86,72,46],[113,88,72,48],[114,10,73,12,"str"],[114,13,73,15],[114,17,73,19,"obj"],[114,20,73,22],[114,21,73,23,"attachments"],[114,32,73,34],[114,35,73,37],[114,38,73,40],[115,8,74,8],[116,8,75,8],[117,8,76,8],[118,8,77,8],[118,12,77,12,"obj"],[118,15,77,15],[118,16,77,16,"nsp"],[118,19,77,19],[118,23,77,23],[118,26,77,26],[118,31,77,31,"obj"],[118,34,77,34],[118,35,77,35,"nsp"],[118,38,77,38],[118,40,77,40],[119,10,78,12,"str"],[119,13,78,15],[119,17,78,19,"obj"],[119,20,78,22],[119,21,78,23,"nsp"],[119,24,78,26],[119,27,78,29],[119,30,78,32],[120,8,79,8],[121,8,80,8],[122,8,81,8],[122,12,81,12],[122,16,81,16],[122,20,81,20,"obj"],[122,23,81,23],[122,24,81,24,"id"],[122,26,81,26],[122,28,81,28],[123,10,82,12,"str"],[123,13,82,15],[123,17,82,19,"obj"],[123,20,82,22],[123,21,82,23,"id"],[123,23,82,25],[124,8,83,8],[125,8,84,8],[126,8,85,8],[126,12,85,12],[126,16,85,16],[126,20,85,20,"obj"],[126,23,85,23],[126,24,85,24,"data"],[126,28,85,28],[126,30,85,30],[127,10,86,12,"str"],[127,13,86,15],[127,17,86,19,"JSON"],[127,21,86,23],[127,22,86,24,"stringify"],[127,31,86,33],[127,32,86,34,"obj"],[127,35,86,37],[127,36,86,38,"data"],[127,40,86,42],[127,42,86,44],[127,46,86,48],[127,47,86,49,"replacer"],[127,55,86,57],[127,56,86,58],[128,8,87,8],[129,8,88,8],[129,15,88,15,"str"],[129,18,88,18],[130,6,89,4],[131,6,90,4],[132,0,91,0],[133,0,92,0],[134,0,93,0],[135,0,94,0],[136,4,90,4],[137,6,90,4,"key"],[137,9,90,4],[138,6,90,4,"value"],[138,11,90,4],[138,13,95,4],[138,22,95,4,"encodeAsBinary"],[138,36,95,18,"encodeAsBinary"],[138,37,95,19,"obj"],[138,40,95,22],[138,42,95,24],[139,8,96,8],[139,12,96,14,"deconstruction"],[139,26,96,28],[139,29,96,31],[139,33,96,31,"deconstructPacket"],[139,42,96,48],[139,43,96,48,"deconstructPacket"],[139,60,96,48],[139,62,96,49,"obj"],[139,65,96,52],[139,66,96,53],[140,8,97,8],[140,12,97,14,"pack"],[140,16,97,18],[140,19,97,21],[140,23,97,25],[140,24,97,26,"encodeAsString"],[140,38,97,40],[140,39,97,41,"deconstruction"],[140,53,97,55],[140,54,97,56,"packet"],[140,60,97,62],[140,61,97,63],[141,8,98,8],[141,12,98,14,"buffers"],[141,19,98,21],[141,22,98,24,"deconstruction"],[141,36,98,38],[141,37,98,39,"buffers"],[141,44,98,46],[142,8,99,8,"buffers"],[142,15,99,15],[142,16,99,16,"unshift"],[142,23,99,23],[142,24,99,24,"pack"],[142,28,99,28],[142,29,99,29],[142,30,99,30],[142,31,99,31],[143,8,100,8],[143,15,100,15,"buffers"],[143,22,100,22],[143,23,100,23],[143,24,100,24],[144,6,101,4],[145,4,101,5],[146,2,101,5],[146,7,103,0],[147,2,104,0],[147,11,104,9,"isObject"],[147,19,104,17,"isObject"],[147,20,104,18,"value"],[147,25,104,23],[147,27,104,25],[148,4,105,4],[148,11,105,11,"Object"],[148,17,105,17],[148,18,105,18,"prototype"],[148,27,105,27],[148,28,105,28,"toString"],[148,36,105,36],[148,37,105,37,"call"],[148,41,105,41],[148,42,105,42,"value"],[148,47,105,47],[148,48,105,48],[148,53,105,53],[148,70,105,70],[149,2,106,0],[150,2,107,0],[151,0,108,0],[152,0,109,0],[153,0,110,0],[154,0,111,0],[155,2,107,0],[155,6,112,13,"Decoder"],[155,13,112,20],[155,39,112,20,"_Emitter"],[155,47,112,20],[156,4,113,4],[157,0,114,0],[158,0,115,0],[159,0,116,0],[160,0,117,0],[161,4,118,4],[161,13,118,4,"Decoder"],[161,21,118,16,"reviver"],[161,28,118,23],[161,30,118,25],[162,6,118,25],[162,10,118,25,"_this"],[162,15,118,25],[163,6,118,25],[163,10,118,25,"_classCallCheck"],[163,25,118,25],[163,26,118,25,"default"],[163,33,118,25],[163,41,118,25,"Decoder"],[163,48,118,25],[164,6,119,8,"_this"],[164,11,119,8],[164,18,119,8,"_callSuper"],[164,28,119,8],[164,29,119,8,"default"],[164,36,119,8],[164,44,119,8,"Decoder"],[164,51,119,8],[165,6,120,8,"_this"],[165,11,120,8],[165,12,120,13,"reviver"],[165,19,120,20],[165,22,120,23,"reviver"],[165,29,120,30],[166,6,120,31],[166,13,120,31,"_this"],[166,18,120,31],[167,4,121,4],[168,4,122,4],[169,0,123,0],[170,0,124,0],[171,0,125,0],[172,0,126,0],[173,4,122,4],[173,8,122,4,"_inherits"],[173,17,122,4],[173,18,122,4,"default"],[173,25,122,4],[173,27,122,4,"Decoder"],[173,34,122,4],[173,36,122,4,"_Emitter"],[173,44,122,4],[174,4,122,4],[174,15,122,4,"_createClass"],[174,27,122,4],[174,28,122,4,"default"],[174,35,122,4],[174,37,122,4,"Decoder"],[174,44,122,4],[175,6,122,4,"key"],[175,9,122,4],[176,6,122,4,"value"],[176,11,122,4],[176,13,127,4],[176,22,127,4,"add"],[176,25,127,7,"add"],[176,26,127,8,"obj"],[176,29,127,11],[176,31,127,13],[177,8,128,8],[177,12,128,12,"packet"],[177,18,128,18],[178,8,129,8],[178,12,129,12],[178,19,129,19,"obj"],[178,22,129,22],[178,27,129,27],[178,35,129,35],[178,37,129,37],[179,10,130,12],[179,14,130,16],[179,18,130,20],[179,19,130,21,"reconstructor"],[179,32,130,34],[179,34,130,36],[180,12,131,16],[180,18,131,22],[180,22,131,26,"Error"],[180,27,131,31],[180,28,131,32],[180,77,131,81],[180,78,131,82],[181,10,132,12],[182,10,133,12,"packet"],[182,16,133,18],[182,19,133,21],[182,23,133,25],[182,24,133,26,"decodeString"],[182,36,133,38],[182,37,133,39,"obj"],[182,40,133,42],[182,41,133,43],[183,10,134,12],[183,14,134,18,"isBinaryEvent"],[183,27,134,31],[183,30,134,34,"packet"],[183,36,134,40],[183,37,134,41,"type"],[183,41,134,45],[183,46,134,50,"PacketType"],[183,56,134,60],[183,57,134,61,"BINARY_EVENT"],[183,69,134,73],[184,10,135,12],[184,14,135,16,"isBinaryEvent"],[184,27,135,29],[184,31,135,33,"packet"],[184,37,135,39],[184,38,135,40,"type"],[184,42,135,44],[184,47,135,49,"PacketType"],[184,57,135,59],[184,58,135,60,"BINARY_ACK"],[184,68,135,70],[184,70,135,72],[185,12,136,16,"packet"],[185,18,136,22],[185,19,136,23,"type"],[185,23,136,27],[185,26,136,30,"isBinaryEvent"],[185,39,136,43],[185,42,136,46,"PacketType"],[185,52,136,56],[185,53,136,57,"EVENT"],[185,58,136,62],[185,61,136,65,"PacketType"],[185,71,136,75],[185,72,136,76,"ACK"],[185,75,136,79],[186,12,137,16],[187,12,138,16],[187,16,138,20],[187,17,138,21,"reconstructor"],[187,30,138,34],[187,33,138,37],[187,37,138,41,"BinaryReconstructor"],[187,56,138,60],[187,57,138,61,"packet"],[187,63,138,67],[187,64,138,68],[188,12,139,16],[189,12,140,16],[189,16,140,20,"packet"],[189,22,140,26],[189,23,140,27,"attachments"],[189,34,140,38],[189,39,140,43],[189,40,140,44],[189,42,140,46],[190,14,141,20],[190,18,141,20,"_superPropGet"],[190,31,141,20],[190,32,141,20,"default"],[190,39,141,20],[190,41,141,20,"Decoder"],[190,48,141,20],[190,76,141,39],[190,85,141,48],[190,87,141,50,"packet"],[190,93,141,56],[191,12,142,16],[192,10,143,12],[192,11,143,13],[192,17,144,17],[193,12,145,16],[194,12,146,16],[194,16,146,16,"_superPropGet"],[194,29,146,16],[194,30,146,16,"default"],[194,37,146,16],[194,39,146,16,"Decoder"],[194,46,146,16],[194,74,146,35],[194,83,146,44],[194,85,146,46,"packet"],[194,91,146,52],[195,10,147,12],[196,8,148,8],[196,9,148,9],[196,15,149,13],[196,19,149,17],[196,23,149,17,"isBinary"],[196,34,149,25],[196,35,149,25,"isBinary"],[196,43,149,25],[196,45,149,26,"obj"],[196,48,149,29],[196,49,149,30],[196,53,149,34,"obj"],[196,56,149,37],[196,57,149,38,"base64"],[196,63,149,44],[196,65,149,46],[197,10,150,12],[198,10,151,12],[198,14,151,16],[198,15,151,17],[198,19,151,21],[198,20,151,22,"reconstructor"],[198,33,151,35],[198,35,151,37],[199,12,152,16],[199,18,152,22],[199,22,152,26,"Error"],[199,27,152,31],[199,28,152,32],[199,78,152,82],[199,79,152,83],[200,10,153,12],[200,11,153,13],[200,17,154,17],[201,12,155,16,"packet"],[201,18,155,22],[201,21,155,25],[201,25,155,29],[201,26,155,30,"reconstructor"],[201,39,155,43],[201,40,155,44,"takeBinaryData"],[201,54,155,58],[201,55,155,59,"obj"],[201,58,155,62],[201,59,155,63],[202,12,156,16],[202,16,156,20,"packet"],[202,22,156,26],[202,24,156,28],[203,14,157,20],[204,14,158,20],[204,18,158,24],[204,19,158,25,"reconstructor"],[204,32,158,38],[204,35,158,41],[204,39,158,45],[205,14,159,20],[205,18,159,20,"_superPropGet"],[205,31,159,20],[205,32,159,20,"default"],[205,39,159,20],[205,41,159,20,"Decoder"],[205,48,159,20],[205,76,159,39],[205,85,159,48],[205,87,159,50,"packet"],[205,93,159,56],[206,12,160,16],[207,10,161,12],[208,8,162,8],[208,9,162,9],[208,15,163,13],[209,10,164,12],[209,16,164,18],[209,20,164,22,"Error"],[209,25,164,27],[209,26,164,28],[209,42,164,44],[209,45,164,47,"obj"],[209,48,164,50],[209,49,164,51],[210,8,165,8],[211,6,166,4],[212,6,167,4],[213,0,168,0],[214,0,169,0],[215,0,170,0],[216,0,171,0],[217,0,172,0],[218,4,167,4],[219,6,167,4,"key"],[219,9,167,4],[220,6,167,4,"value"],[220,11,167,4],[220,13,173,4],[220,22,173,4,"decodeString"],[220,34,173,16,"decodeString"],[220,35,173,17,"str"],[220,38,173,20],[220,40,173,22],[221,8,174,8],[221,12,174,12,"i"],[221,13,174,13],[221,16,174,16],[221,17,174,17],[222,8,175,8],[223,8,176,8],[223,12,176,14,"p"],[223,13,176,15],[223,16,176,18],[224,10,177,12,"type"],[224,14,177,16],[224,16,177,18,"Number"],[224,22,177,24],[224,23,177,25,"str"],[224,26,177,28],[224,27,177,29,"charAt"],[224,33,177,35],[224,34,177,36],[224,35,177,37],[224,36,177,38],[225,8,178,8],[225,9,178,9],[226,8,179,8],[226,12,179,12,"PacketType"],[226,22,179,22],[226,23,179,23,"p"],[226,24,179,24],[226,25,179,25,"type"],[226,29,179,29],[226,30,179,30],[226,35,179,35,"undefined"],[226,44,179,44],[226,46,179,46],[227,10,180,12],[227,16,180,18],[227,20,180,22,"Error"],[227,25,180,27],[227,26,180,28],[227,48,180,50],[227,51,180,53,"p"],[227,52,180,54],[227,53,180,55,"type"],[227,57,180,59],[227,58,180,60],[228,8,181,8],[229,8,182,8],[230,8,183,8],[230,12,183,12,"p"],[230,13,183,13],[230,14,183,14,"type"],[230,18,183,18],[230,23,183,23,"PacketType"],[230,33,183,33],[230,34,183,34,"BINARY_EVENT"],[230,46,183,46],[230,50,184,12,"p"],[230,51,184,13],[230,52,184,14,"type"],[230,56,184,18],[230,61,184,23,"PacketType"],[230,71,184,33],[230,72,184,34,"BINARY_ACK"],[230,82,184,44],[230,84,184,46],[231,10,185,12],[231,14,185,18,"start"],[231,19,185,23],[231,22,185,26,"i"],[231,23,185,27],[231,26,185,30],[231,27,185,31],[232,10,186,12],[232,17,186,19,"str"],[232,20,186,22],[232,21,186,23,"charAt"],[232,27,186,29],[232,28,186,30],[232,30,186,32,"i"],[232,31,186,33],[232,32,186,34],[232,37,186,39],[232,40,186,42],[232,44,186,46,"i"],[232,45,186,47],[232,49,186,51,"str"],[232,52,186,54],[232,53,186,55,"length"],[232,59,186,61],[232,61,186,63],[232,62,186,65],[233,10,187,12],[233,14,187,18,"buf"],[233,17,187,21],[233,20,187,24,"str"],[233,23,187,27],[233,24,187,28,"substring"],[233,33,187,37],[233,34,187,38,"start"],[233,39,187,43],[233,41,187,45,"i"],[233,42,187,46],[233,43,187,47],[234,10,188,12],[234,14,188,16,"buf"],[234,17,188,19],[234,21,188,23,"Number"],[234,27,188,29],[234,28,188,30,"buf"],[234,31,188,33],[234,32,188,34],[234,36,188,38,"str"],[234,39,188,41],[234,40,188,42,"charAt"],[234,46,188,48],[234,47,188,49,"i"],[234,48,188,50],[234,49,188,51],[234,54,188,56],[234,57,188,59],[234,59,188,61],[235,12,189,16],[235,18,189,22],[235,22,189,26,"Error"],[235,27,189,31],[235,28,189,32],[235,49,189,53],[235,50,189,54],[236,10,190,12],[237,10,191,12,"p"],[237,11,191,13],[237,12,191,14,"attachments"],[237,23,191,25],[237,26,191,28,"Number"],[237,32,191,34],[237,33,191,35,"buf"],[237,36,191,38],[237,37,191,39],[238,8,192,8],[239,8,193,8],[240,8,194,8],[240,12,194,12],[240,15,194,15],[240,20,194,20,"str"],[240,23,194,23],[240,24,194,24,"charAt"],[240,30,194,30],[240,31,194,31,"i"],[240,32,194,32],[240,35,194,35],[240,36,194,36],[240,37,194,37],[240,39,194,39],[241,10,195,12],[241,14,195,18,"start"],[241,20,195,23],[241,23,195,26,"i"],[241,24,195,27],[241,27,195,30],[241,28,195,31],[242,10,196,12],[242,17,196,19],[242,19,196,21,"i"],[242,20,196,22],[242,22,196,24],[243,12,197,16],[243,16,197,22,"c"],[243,17,197,23],[243,20,197,26,"str"],[243,23,197,29],[243,24,197,30,"charAt"],[243,30,197,36],[243,31,197,37,"i"],[243,32,197,38],[243,33,197,39],[244,12,198,16],[244,16,198,20],[244,19,198,23],[244,24,198,28,"c"],[244,25,198,29],[244,27,199,20],[245,12,200,16],[245,16,200,20,"i"],[245,17,200,21],[245,22,200,26,"str"],[245,25,200,29],[245,26,200,30,"length"],[245,32,200,36],[245,34,201,20],[246,10,202,12],[247,10,203,12,"p"],[247,11,203,13],[247,12,203,14,"nsp"],[247,15,203,17],[247,18,203,20,"str"],[247,21,203,23],[247,22,203,24,"substring"],[247,31,203,33],[247,32,203,34,"start"],[247,38,203,39],[247,40,203,41,"i"],[247,41,203,42],[247,42,203,43],[248,8,204,8],[248,9,204,9],[248,15,205,13],[249,10,206,12,"p"],[249,11,206,13],[249,12,206,14,"nsp"],[249,15,206,17],[249,18,206,20],[249,21,206,23],[250,8,207,8],[251,8,208,8],[252,8,209,8],[252,12,209,14,"next"],[252,16,209,18],[252,19,209,21,"str"],[252,22,209,24],[252,23,209,25,"charAt"],[252,29,209,31],[252,30,209,32,"i"],[252,31,209,33],[252,34,209,36],[252,35,209,37],[252,36,209,38],[253,8,210,8],[253,12,210,12],[253,14,210,14],[253,19,210,19,"next"],[253,23,210,23],[253,27,210,27,"Number"],[253,33,210,33],[253,34,210,34,"next"],[253,38,210,38],[253,39,210,39],[253,43,210,43,"next"],[253,47,210,47],[253,49,210,49],[254,10,211,12],[254,14,211,18,"start"],[254,21,211,23],[254,24,211,26,"i"],[254,25,211,27],[254,28,211,30],[254,29,211,31],[255,10,212,12],[255,17,212,19],[255,19,212,21,"i"],[255,20,212,22],[255,22,212,24],[256,12,213,16],[256,16,213,22,"c"],[256,18,213,23],[256,21,213,26,"str"],[256,24,213,29],[256,25,213,30,"charAt"],[256,31,213,36],[256,32,213,37,"i"],[256,33,213,38],[256,34,213,39],[257,12,214,16],[257,16,214,20],[257,20,214,24],[257,24,214,28,"c"],[257,26,214,29],[257,30,214,33,"Number"],[257,36,214,39],[257,37,214,40,"c"],[257,39,214,41],[257,40,214,42],[257,44,214,46,"c"],[257,46,214,47],[257,48,214,49],[258,14,215,20],[258,16,215,22,"i"],[258,17,215,23],[259,14,216,20],[260,12,217,16],[261,12,218,16],[261,16,218,20,"i"],[261,17,218,21],[261,22,218,26,"str"],[261,25,218,29],[261,26,218,30,"length"],[261,32,218,36],[261,34,219,20],[262,10,220,12],[263,10,221,12,"p"],[263,11,221,13],[263,12,221,14,"id"],[263,14,221,16],[263,17,221,19,"Number"],[263,23,221,25],[263,24,221,26,"str"],[263,27,221,29],[263,28,221,30,"substring"],[263,37,221,39],[263,38,221,40,"start"],[263,45,221,45],[263,47,221,47,"i"],[263,48,221,48],[263,51,221,51],[263,52,221,52],[263,53,221,53],[263,54,221,54],[264,8,222,8],[265,8,223,8],[266,8,224,8],[266,12,224,12,"str"],[266,15,224,15],[266,16,224,16,"charAt"],[266,22,224,22],[266,23,224,23],[266,25,224,25,"i"],[266,26,224,26],[266,27,224,27],[266,29,224,29],[267,10,225,12],[267,14,225,18,"payload"],[267,21,225,25],[267,24,225,28],[267,28,225,32],[267,29,225,33,"tryParse"],[267,37,225,41],[267,38,225,42,"str"],[267,41,225,45],[267,42,225,46,"substr"],[267,48,225,52],[267,49,225,53,"i"],[267,50,225,54],[267,51,225,55],[267,52,225,56],[268,10,226,12],[268,14,226,16,"Decoder"],[268,21,226,23],[268,22,226,24,"isPayloadValid"],[268,36,226,38],[268,37,226,39,"p"],[268,38,226,40],[268,39,226,41,"type"],[268,43,226,45],[268,45,226,47,"payload"],[268,52,226,54],[268,53,226,55],[268,55,226,57],[269,12,227,16,"p"],[269,13,227,17],[269,14,227,18,"data"],[269,18,227,22],[269,21,227,25,"payload"],[269,28,227,32],[270,10,228,12],[270,11,228,13],[270,17,229,17],[271,12,230,16],[271,18,230,22],[271,22,230,26,"Error"],[271,27,230,31],[271,28,230,32],[271,45,230,49],[271,46,230,50],[272,10,231,12],[273,8,232,8],[274,8,233,8],[274,15,233,15,"p"],[274,16,233,16],[275,6,234,4],[276,4,234,5],[277,6,234,5,"key"],[277,9,234,5],[278,6,234,5,"value"],[278,11,234,5],[278,13,235,4],[278,22,235,4,"tryParse"],[278,30,235,12,"tryParse"],[278,31,235,13,"str"],[278,34,235,16],[278,36,235,18],[279,8,236,8],[279,12,236,12],[280,10,237,12],[280,17,237,19,"JSON"],[280,21,237,23],[280,22,237,24,"parse"],[280,27,237,29],[280,28,237,30,"str"],[280,31,237,33],[280,33,237,35],[280,37,237,39],[280,38,237,40,"reviver"],[280,45,237,47],[280,46,237,48],[281,8,238,8],[281,9,238,9],[281,10,239,8],[281,17,239,15,"e"],[281,18,239,16],[281,20,239,18],[282,10,240,12],[282,17,240,19],[282,22,240,24],[283,8,241,8],[284,6,242,4],[285,4,242,5],[286,6,242,5,"key"],[286,9,242,5],[287,6,242,5,"value"],[287,11,242,5],[288,6,262,4],[289,0,263,0],[290,0,264,0],[291,6,265,4],[291,15,265,4,"destroy"],[291,22,265,11,"destroy"],[291,23,265,11],[291,25,265,14],[292,8,266,8],[292,12,266,12],[292,16,266,16],[292,17,266,17,"reconstructor"],[292,30,266,30],[292,32,266,32],[293,10,267,12],[293,14,267,16],[293,15,267,17,"reconstructor"],[293,28,267,30],[293,29,267,31,"finishedReconstruction"],[293,51,267,53],[293,52,267,54],[293,53,267,55],[294,10,268,12],[294,14,268,16],[294,15,268,17,"reconstructor"],[294,28,268,30],[294,31,268,33],[294,35,268,37],[295,8,269,8],[296,6,270,4],[297,4,270,5],[298,6,270,5,"key"],[298,9,270,5],[299,6,270,5,"value"],[299,11,270,5],[299,13,243,4],[299,22,243,11,"isPayloadValid"],[299,36,243,25,"isPayloadValid"],[299,37,243,26,"type"],[299,41,243,30],[299,43,243,32,"payload"],[299,50,243,39],[299,52,243,41],[300,8,244,8],[300,16,244,16,"type"],[300,20,244,20],[301,10,245,12],[301,15,245,17,"PacketType"],[301,25,245,27],[301,26,245,28,"CONNECT"],[301,33,245,35],[302,12,246,16],[302,19,246,23,"isObject"],[302,27,246,31],[302,28,246,32,"payload"],[302,35,246,39],[302,36,246,40],[303,10,247,12],[303,15,247,17,"PacketType"],[303,25,247,27],[303,26,247,28,"DISCONNECT"],[303,36,247,38],[304,12,248,16],[304,19,248,23,"payload"],[304,26,248,30],[304,31,248,35,"undefined"],[304,40,248,44],[305,10,249,12],[305,15,249,17,"PacketType"],[305,25,249,27],[305,26,249,28,"CONNECT_ERROR"],[305,39,249,41],[306,12,250,16],[306,19,250,23],[306,26,250,30,"payload"],[306,33,250,37],[306,38,250,42],[306,46,250,50],[306,50,250,54,"isObject"],[306,58,250,62],[306,59,250,63,"payload"],[306,66,250,70],[306,67,250,71],[307,10,251,12],[307,15,251,17,"PacketType"],[307,25,251,27],[307,26,251,28,"EVENT"],[307,31,251,33],[308,10,252,12],[308,15,252,17,"PacketType"],[308,25,252,27],[308,26,252,28,"BINARY_EVENT"],[308,38,252,40],[309,12,253,16],[309,19,253,24,"Array"],[309,24,253,29],[309,25,253,30,"isArray"],[309,32,253,37],[309,33,253,38,"payload"],[309,40,253,45],[309,41,253,46],[309,46,254,21],[309,53,254,28,"payload"],[309,60,254,35],[309,61,254,36],[309,62,254,37],[309,63,254,38],[309,68,254,43],[309,76,254,51],[309,80,255,25],[309,87,255,32,"payload"],[309,94,255,39],[309,95,255,40],[309,96,255,41],[309,97,255,42],[309,102,255,47],[309,110,255,55],[309,114,256,28,"RESERVED_EVENTS"],[309,129,256,43],[309,130,256,44,"indexOf"],[309,137,256,51],[309,138,256,52,"payload"],[309,145,256,59],[309,146,256,60],[309,147,256,61],[309,148,256,62],[309,149,256,63],[309,154,256,68],[309,155,256,69],[309,156,256,71],[309,157,256,72],[310,10,257,12],[310,15,257,17,"PacketType"],[310,25,257,27],[310,26,257,28,"ACK"],[310,29,257,31],[311,10,258,12],[311,15,258,17,"PacketType"],[311,25,258,27],[311,26,258,28,"BINARY_ACK"],[311,36,258,38],[312,12,259,16],[312,19,259,23,"Array"],[312,24,259,28],[312,25,259,29,"isArray"],[312,32,259,36],[312,33,259,37,"payload"],[312,40,259,44],[312,41,259,45],[313,8,260,8],[314,6,261,4],[315,4,261,5],[316,2,261,5],[316,4,112,29,"Emitter"],[316,29,112,36],[316,30,112,36,"Emitter"],[316,37,112,36],[317,2,272,0],[318,0,273,0],[319,0,274,0],[320,0,275,0],[321,0,276,0],[322,0,277,0],[323,0,278,0],[324,0,279,0],[325,2,272,0],[325,6,280,6,"BinaryReconstructor"],[325,25,280,25],[326,4,281,4],[326,13,281,4,"BinaryReconstructor"],[326,33,281,16,"packet"],[326,39,281,22],[326,41,281,24],[327,6,281,24],[327,10,281,24,"_classCallCheck"],[327,25,281,24],[327,26,281,24,"default"],[327,33,281,24],[327,41,281,24,"BinaryReconstructor"],[327,60,281,24],[328,6,282,8],[328,10,282,12],[328,11,282,13,"packet"],[328,17,282,19],[328,20,282,22,"packet"],[328,26,282,28],[329,6,283,8],[329,10,283,12],[329,11,283,13,"buffers"],[329,18,283,20],[329,21,283,23],[329,23,283,25],[330,6,284,8],[330,10,284,12],[330,11,284,13,"reconPack"],[330,20,284,22],[330,23,284,25,"packet"],[330,29,284,31],[331,4,285,4],[332,4,286,4],[333,0,287,0],[334,0,288,0],[335,0,289,0],[336,0,290,0],[337,0,291,0],[338,0,292,0],[339,0,293,0],[340,4,286,4],[340,15,286,4,"_createClass"],[340,27,286,4],[340,28,286,4,"default"],[340,35,286,4],[340,37,286,4,"BinaryReconstructor"],[340,56,286,4],[341,6,286,4,"key"],[341,9,286,4],[342,6,286,4,"value"],[342,11,286,4],[342,13,294,4],[342,22,294,4,"takeBinaryData"],[342,36,294,18,"takeBinaryData"],[342,37,294,19,"binData"],[342,44,294,26],[342,46,294,28],[343,8,295,8],[343,12,295,12],[343,13,295,13,"buffers"],[343,20,295,20],[343,21,295,21,"push"],[343,25,295,25],[343,26,295,26,"binData"],[343,33,295,33],[343,34,295,34],[344,8,296,8],[344,12,296,12],[344,16,296,16],[344,17,296,17,"buffers"],[344,24,296,24],[344,25,296,25,"length"],[344,31,296,31],[344,36,296,36],[344,40,296,40],[344,41,296,41,"reconPack"],[344,50,296,50],[344,51,296,51,"attachments"],[344,62,296,62],[344,64,296,64],[345,10,297,12],[346,10,298,12],[346,14,298,18,"packet"],[346,20,298,24],[346,23,298,27],[346,27,298,27,"reconstructPacket"],[346,36,298,44],[346,37,298,44,"reconstructPacket"],[346,54,298,44],[346,56,298,45],[346,60,298,49],[346,61,298,50,"reconPack"],[346,70,298,59],[346,72,298,61],[346,76,298,65],[346,77,298,66,"buffers"],[346,84,298,73],[346,85,298,74],[347,10,299,12],[347,14,299,16],[347,15,299,17,"finishedReconstruction"],[347,37,299,39],[347,38,299,40],[347,39,299,41],[348,10,300,12],[348,17,300,19,"packet"],[348,23,300,25],[349,8,301,8],[350,8,302,8],[350,15,302,15],[350,19,302,19],[351,6,303,4],[352,6,304,4],[353,0,305,0],[354,0,306,0],[355,4,304,4],[356,6,304,4,"key"],[356,9,304,4],[357,6,304,4,"value"],[357,11,304,4],[357,13,307,4],[357,22,307,4,"finishedReconstruction"],[357,44,307,26,"finishedReconstruction"],[357,45,307,26],[357,47,307,29],[358,8,308,8],[358,12,308,12],[358,13,308,13,"reconPack"],[358,22,308,22],[358,25,308,25],[358,29,308,29],[359,8,309,8],[359,12,309,12],[359,13,309,13,"buffers"],[359,20,309,20],[359,23,309,23],[359,25,309,25],[360,6,310,4],[361,4,310,5],[362,2,310,5],[363,0,310,5],[363,3]],"functionMap":{"names":["<global>","<anonymous>","Encoder","Encoder#constructor","Encoder#encode","Encoder#encodeAsString","Encoder#encodeAsBinary","isObject","Decoder","Decoder#constructor","Decoder#add","Decoder#decodeString","Decoder#tryParse","Decoder.isPayloadValid","Decoder#destroy","BinaryReconstructor","BinaryReconstructor#constructor","BinaryReconstructor#takeBinaryData","BinaryReconstructor#finishedReconstruction"],"mappings":"AAA;CCqB;CDQ;OEI;ICM;KDE;IEO;KFc;IGI;KHsB;IIM;KJM;CFC;AOE;CPE;OQM;ICM;KDG;IEM;KFuC;IGO;KH6D;IIC;KJO;IKC;KLkB;IMI;KNK;CRC;AeS;ICC;KDI;IES;KFS;IGI;KHG;CfC"},"hasCjsExports":false},"type":"js/module"}]}