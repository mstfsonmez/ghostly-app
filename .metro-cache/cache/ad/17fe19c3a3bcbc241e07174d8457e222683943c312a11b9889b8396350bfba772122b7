{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.parse = parse;\n  // imported from https://github.com/galkn/parseuri\n  /**\n   * Parses a URI\n   *\n   * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n   *\n   * See:\n   * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n   * - https://caniuse.com/url\n   * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n   *\n   * History of the parse() method:\n   * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n   * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n   * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n   *\n   * @author Steven Levithan <stevenlevithan.com> (MIT license)\n   * @api private\n   */\n  const re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n  const parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];\n  function parse(str) {\n    if (str.length > 8000) {\n      throw \"URI too long\";\n    }\n    const src = str,\n      b = str.indexOf('['),\n      e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n      str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''),\n      uri = {},\n      i = 14;\n    while (i--) {\n      uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n      uri.source = src;\n      uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n      uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n      uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n  }\n  function pathNames(obj, path) {\n    const regx = /\\/{2,9}/g,\n      names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n      names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n      names.splice(names.length - 1, 1);\n    }\n    return names;\n  }\n  function queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n      if ($1) {\n        data[$1] = $2;\n      }\n    });\n    return data;\n  }\n});","lineCount":75,"map":[[7,2,24,0,"exports"],[7,9,24,0],[7,10,24,0,"parse"],[7,15,24,0],[7,18,24,0,"parse"],[7,23,24,0],[8,2,1,0],[9,2,2,0],[10,0,3,0],[11,0,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[18,0,11,0],[19,0,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[23,0,16,0],[24,0,17,0],[25,0,18,0],[26,0,19,0],[27,2,20,0],[27,8,20,6,"re"],[27,10,20,8],[27,13,20,11],[27,258,20,256],[28,2,21,0],[28,8,21,6,"parts"],[28,13,21,11],[28,16,21,14],[28,17,22,4],[28,25,22,12],[28,27,22,14],[28,37,22,24],[28,39,22,26],[28,50,22,37],[28,52,22,39],[28,62,22,49],[28,64,22,51],[28,70,22,57],[28,72,22,59],[28,82,22,69],[28,84,22,71],[28,90,22,77],[28,92,22,79],[28,98,22,85],[28,100,22,87],[28,110,22,97],[28,112,22,99],[28,118,22,105],[28,120,22,107],[28,131,22,118],[28,133,22,120],[28,139,22,126],[28,141,22,128],[28,148,22,135],[28,150,22,137],[28,158,22,145],[28,159,23,1],[29,2,24,7],[29,11,24,16,"parse"],[29,16,24,21,"parse"],[29,17,24,22,"str"],[29,20,24,25],[29,22,24,27],[30,4,25,4],[30,8,25,8,"str"],[30,11,25,11],[30,12,25,12,"length"],[30,18,25,18],[30,21,25,21],[30,25,25,25],[30,27,25,27],[31,6,26,8],[31,12,26,14],[31,26,26,28],[32,4,27,4],[33,4,28,4],[33,10,28,10,"src"],[33,13,28,13],[33,16,28,16,"str"],[33,19,28,19],[34,6,28,21,"b"],[34,7,28,22],[34,10,28,25,"str"],[34,13,28,28],[34,14,28,29,"indexOf"],[34,21,28,36],[34,22,28,37],[34,25,28,40],[34,26,28,41],[35,6,28,43,"e"],[35,7,28,44],[35,10,28,47,"str"],[35,13,28,50],[35,14,28,51,"indexOf"],[35,21,28,58],[35,22,28,59],[35,25,28,62],[35,26,28,63],[36,4,29,4],[36,8,29,8,"b"],[36,9,29,9],[36,13,29,13],[36,14,29,14],[36,15,29,15],[36,19,29,19,"e"],[36,20,29,20],[36,24,29,24],[36,25,29,25],[36,26,29,26],[36,28,29,28],[37,6,30,8,"str"],[37,9,30,11],[37,12,30,14,"str"],[37,15,30,17],[37,16,30,18,"substring"],[37,25,30,27],[37,26,30,28],[37,27,30,29],[37,29,30,31,"b"],[37,30,30,32],[37,31,30,33],[37,34,30,36,"str"],[37,37,30,39],[37,38,30,40,"substring"],[37,47,30,49],[37,48,30,50,"b"],[37,49,30,51],[37,51,30,53,"e"],[37,52,30,54],[37,53,30,55],[37,54,30,56,"replace"],[37,61,30,63],[37,62,30,64],[37,66,30,68],[37,68,30,70],[37,71,30,73],[37,72,30,74],[37,75,30,77,"str"],[37,78,30,80],[37,79,30,81,"substring"],[37,88,30,90],[37,89,30,91,"e"],[37,90,30,92],[37,92,30,94,"str"],[37,95,30,97],[37,96,30,98,"length"],[37,102,30,104],[37,103,30,105],[38,4,31,4],[39,4,32,4],[39,8,32,8,"m"],[39,9,32,9],[39,12,32,12,"re"],[39,14,32,14],[39,15,32,15,"exec"],[39,19,32,19],[39,20,32,20,"str"],[39,23,32,23],[39,27,32,27],[39,29,32,29],[39,30,32,30],[40,6,32,32,"uri"],[40,9,32,35],[40,12,32,38],[40,13,32,39],[40,14,32,40],[41,6,32,42,"i"],[41,7,32,43],[41,10,32,46],[41,12,32,48],[42,4,33,4],[42,11,33,11,"i"],[42,12,33,12],[42,14,33,14],[42,16,33,16],[43,6,34,8,"uri"],[43,9,34,11],[43,10,34,12,"parts"],[43,15,34,17],[43,16,34,18,"i"],[43,17,34,19],[43,18,34,20],[43,19,34,21],[43,22,34,24,"m"],[43,23,34,25],[43,24,34,26,"i"],[43,25,34,27],[43,26,34,28],[43,30,34,32],[43,32,34,34],[44,4,35,4],[45,4,36,4],[45,8,36,8,"b"],[45,9,36,9],[45,13,36,13],[45,14,36,14],[45,15,36,15],[45,19,36,19,"e"],[45,20,36,20],[45,24,36,24],[45,25,36,25],[45,26,36,26],[45,28,36,28],[46,6,37,8,"uri"],[46,9,37,11],[46,10,37,12,"source"],[46,16,37,18],[46,19,37,21,"src"],[46,22,37,24],[47,6,38,8,"uri"],[47,9,38,11],[47,10,38,12,"host"],[47,14,38,16],[47,17,38,19,"uri"],[47,20,38,22],[47,21,38,23,"host"],[47,25,38,27],[47,26,38,28,"substring"],[47,35,38,37],[47,36,38,38],[47,37,38,39],[47,39,38,41,"uri"],[47,42,38,44],[47,43,38,45,"host"],[47,47,38,49],[47,48,38,50,"length"],[47,54,38,56],[47,57,38,59],[47,58,38,60],[47,59,38,61],[47,60,38,62,"replace"],[47,67,38,69],[47,68,38,70],[47,72,38,74],[47,74,38,76],[47,77,38,79],[47,78,38,80],[48,6,39,8,"uri"],[48,9,39,11],[48,10,39,12,"authority"],[48,19,39,21],[48,22,39,24,"uri"],[48,25,39,27],[48,26,39,28,"authority"],[48,35,39,37],[48,36,39,38,"replace"],[48,43,39,45],[48,44,39,46],[48,47,39,49],[48,49,39,51],[48,51,39,53],[48,52,39,54],[48,53,39,55,"replace"],[48,60,39,62],[48,61,39,63],[48,64,39,66],[48,66,39,68],[48,68,39,70],[48,69,39,71],[48,70,39,72,"replace"],[48,77,39,79],[48,78,39,80],[48,82,39,84],[48,84,39,86],[48,87,39,89],[48,88,39,90],[49,6,40,8,"uri"],[49,9,40,11],[49,10,40,12,"ipv6uri"],[49,17,40,19],[49,20,40,22],[49,24,40,26],[50,4,41,4],[51,4,42,4,"uri"],[51,7,42,7],[51,8,42,8,"pathNames"],[51,17,42,17],[51,20,42,20,"pathNames"],[51,29,42,29],[51,30,42,30,"uri"],[51,33,42,33],[51,35,42,35,"uri"],[51,38,42,38],[51,39,42,39],[51,45,42,45],[51,46,42,46],[51,47,42,47],[52,4,43,4,"uri"],[52,7,43,7],[52,8,43,8,"queryKey"],[52,16,43,16],[52,19,43,19,"queryKey"],[52,27,43,27],[52,28,43,28,"uri"],[52,31,43,31],[52,33,43,33,"uri"],[52,36,43,36],[52,37,43,37],[52,44,43,44],[52,45,43,45],[52,46,43,46],[53,4,44,4],[53,11,44,11,"uri"],[53,14,44,14],[54,2,45,0],[55,2,46,0],[55,11,46,9,"pathNames"],[55,20,46,18,"pathNames"],[55,21,46,19,"obj"],[55,24,46,22],[55,26,46,24,"path"],[55,30,46,28],[55,32,46,30],[56,4,47,4],[56,10,47,10,"regx"],[56,14,47,14],[56,17,47,17],[56,27,47,27],[57,6,47,29,"names"],[57,11,47,34],[57,14,47,37,"path"],[57,18,47,41],[57,19,47,42,"replace"],[57,26,47,49],[57,27,47,50,"regx"],[57,31,47,54],[57,33,47,56],[57,36,47,59],[57,37,47,60],[57,38,47,61,"split"],[57,43,47,66],[57,44,47,67],[57,47,47,70],[57,48,47,71],[58,4,48,4],[58,8,48,8,"path"],[58,12,48,12],[58,13,48,13,"slice"],[58,18,48,18],[58,19,48,19],[58,20,48,20],[58,22,48,22],[58,23,48,23],[58,24,48,24],[58,28,48,28],[58,31,48,31],[58,35,48,35,"path"],[58,39,48,39],[58,40,48,40,"length"],[58,46,48,46],[58,51,48,51],[58,52,48,52],[58,54,48,54],[59,6,49,8,"names"],[59,11,49,13],[59,12,49,14,"splice"],[59,18,49,20],[59,19,49,21],[59,20,49,22],[59,22,49,24],[59,23,49,25],[59,24,49,26],[60,4,50,4],[61,4,51,4],[61,8,51,8,"path"],[61,12,51,12],[61,13,51,13,"slice"],[61,18,51,18],[61,19,51,19],[61,20,51,20],[61,21,51,21],[61,22,51,22],[61,26,51,26],[61,29,51,29],[61,31,51,31],[62,6,52,8,"names"],[62,11,52,13],[62,12,52,14,"splice"],[62,18,52,20],[62,19,52,21,"names"],[62,24,52,26],[62,25,52,27,"length"],[62,31,52,33],[62,34,52,36],[62,35,52,37],[62,37,52,39],[62,38,52,40],[62,39,52,41],[63,4,53,4],[64,4,54,4],[64,11,54,11,"names"],[64,16,54,16],[65,2,55,0],[66,2,56,0],[66,11,56,9,"queryKey"],[66,19,56,17,"queryKey"],[66,20,56,18,"uri"],[66,23,56,21],[66,25,56,23,"query"],[66,30,56,28],[66,32,56,30],[67,4,57,4],[67,10,57,10,"data"],[67,14,57,14],[67,17,57,17],[67,18,57,18],[67,19,57,19],[68,4,58,4,"query"],[68,9,58,9],[68,10,58,10,"replace"],[68,17,58,17],[68,18,58,18],[68,45,58,45],[68,47,58,47],[68,57,58,57,"$0"],[68,59,58,59],[68,61,58,61,"$1"],[68,63,58,63],[68,65,58,65,"$2"],[68,67,58,67],[68,69,58,69],[69,6,59,8],[69,10,59,12,"$1"],[69,12,59,14],[69,14,59,16],[70,8,60,12,"data"],[70,12,60,16],[70,13,60,17,"$1"],[70,15,60,19],[70,16,60,20],[70,19,60,23,"$2"],[70,21,60,25],[71,6,61,8],[72,4,62,4],[72,5,62,5],[72,6,62,6],[73,4,63,4],[73,11,63,11,"data"],[73,15,63,15],[74,2,64,0],[75,0,64,1],[75,3]],"functionMap":{"names":["<global>","parse","pathNames","queryKey","query.replace$argument_1"],"mappings":"AAA;OCuB;CDqB;AEC;CFS;AGC;+CCE;KDI;CHE"},"hasCjsExports":false},"type":"js/module"}]}