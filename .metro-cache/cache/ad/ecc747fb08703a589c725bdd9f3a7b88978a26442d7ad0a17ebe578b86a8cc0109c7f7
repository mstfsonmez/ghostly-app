{"dependencies":[{"name":"./commons.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"glGFVKq6JnHqcEVNii1WndfU66Y=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.encodePacketToBinary = encodePacketToBinary;\n  Object.defineProperty(exports, \"encodePacket\", {\n    enumerable: true,\n    get: function () {\n      return encodePacket;\n    }\n  });\n  var _commonsJs = require(_dependencyMap[0], \"./commons.js\");\n  const withNativeBlob = typeof Blob === \"function\" || typeof Blob !== \"undefined\" && Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\";\n  const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n  // ArrayBuffer.isView method is not defined in IE10\n  const isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\" ? ArrayBuffer.isView(obj) : obj && obj.buffer instanceof ArrayBuffer;\n  };\n  const encodePacket = ({\n    type,\n    data\n  }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n      if (supportsBinary) {\n        return callback(data);\n      } else {\n        return encodeBlobAsBase64(data, callback);\n      }\n    } else if (withNativeArrayBuffer && (data instanceof ArrayBuffer || isView(data))) {\n      if (supportsBinary) {\n        return callback(data);\n      } else {\n        return encodeBlobAsBase64(new Blob([data]), callback);\n      }\n    }\n    // plain string\n    return callback(_commonsJs.PACKET_TYPES[type] + (data || \"\"));\n  };\n  const encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n      const content = fileReader.result.split(\",\")[1];\n      callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n  };\n  function toArray(data) {\n    if (data instanceof Uint8Array) {\n      return data;\n    } else if (data instanceof ArrayBuffer) {\n      return new Uint8Array(data);\n    } else {\n      return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n  }\n  let TEXT_ENCODER;\n  function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n      return packet.data.arrayBuffer().then(toArray).then(callback);\n    } else if (withNativeArrayBuffer && (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n      return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n      if (!TEXT_ENCODER) {\n        TEXT_ENCODER = new TextEncoder();\n      }\n      callback(TEXT_ENCODER.encode(encoded));\n    });\n  }\n});","lineCount":72,"map":[[7,2,53,0,"exports"],[7,9,53,0],[7,10,53,0,"encodePacketToBinary"],[7,30,53,0],[7,33,53,0,"encodePacketToBinary"],[7,53,53,0],[8,2,68,0,"Object"],[8,8,68,0],[8,9,68,0,"defineProperty"],[8,23,68,0],[8,24,68,0,"exports"],[8,31,68,0],[9,4,68,0,"enumerable"],[9,14,68,0],[10,4,68,0,"get"],[10,7,68,0],[10,18,68,0,"get"],[10,19,68,0],[11,6,68,0],[11,13,68,9,"encodePacket"],[11,25,68,21],[12,4,68,21],[13,2,68,21],[14,2,1,0],[14,6,1,0,"_commonsJs"],[14,16,1,0],[14,19,1,0,"require"],[14,26,1,0],[14,27,1,0,"_dependencyMap"],[14,41,1,0],[15,2,2,0],[15,8,2,6,"withNativeBlob"],[15,22,2,20],[15,25,2,23],[15,32,2,30,"Blob"],[15,36,2,34],[15,41,2,39],[15,51,2,49],[15,55,3,5],[15,62,3,12,"Blob"],[15,66,3,16],[15,71,3,21],[15,82,3,32],[15,86,4,8,"Object"],[15,92,4,14],[15,93,4,15,"prototype"],[15,102,4,24],[15,103,4,25,"toString"],[15,111,4,33],[15,112,4,34,"call"],[15,116,4,38],[15,117,4,39,"Blob"],[15,121,4,43],[15,122,4,44],[15,127,4,49],[15,153,4,76],[16,2,5,0],[16,8,5,6,"withNativeArrayBuffer"],[16,29,5,27],[16,32,5,30],[16,39,5,37,"ArrayBuffer"],[16,50,5,48],[16,55,5,53],[16,65,5,63],[17,2,6,0],[18,2,7,0],[18,8,7,6,"isView"],[18,14,7,12],[18,17,7,16,"obj"],[18,20,7,19],[18,24,7,24],[19,4,8,4],[19,11,8,11],[19,18,8,18,"ArrayBuffer"],[19,29,8,29],[19,30,8,30,"isView"],[19,36,8,36],[19,41,8,41],[19,51,8,51],[19,54,9,10,"ArrayBuffer"],[19,65,9,21],[19,66,9,22,"isView"],[19,72,9,28],[19,73,9,29,"obj"],[19,76,9,32],[19,77,9,33],[19,80,10,10,"obj"],[19,83,10,13],[19,87,10,17,"obj"],[19,90,10,20],[19,91,10,21,"buffer"],[19,97,10,27],[19,109,10,39,"ArrayBuffer"],[19,120,10,50],[20,2,11,0],[20,3,11,1],[21,2,12,0],[21,8,12,6,"encodePacket"],[21,20,12,18],[21,23,12,21,"encodePacket"],[21,24,12,22],[22,4,12,24,"type"],[22,8,12,28],[23,4,12,30,"data"],[24,2,12,35],[24,3,12,36],[24,5,12,38,"supportsBinary"],[24,19,12,52],[24,21,12,54,"callback"],[24,29,12,62],[24,34,12,67],[25,4,13,4],[25,8,13,8,"withNativeBlob"],[25,22,13,22],[25,26,13,26,"data"],[25,30,13,30],[25,42,13,42,"Blob"],[25,46,13,46],[25,48,13,48],[26,6,14,8],[26,10,14,12,"supportsBinary"],[26,24,14,26],[26,26,14,28],[27,8,15,12],[27,15,15,19,"callback"],[27,23,15,27],[27,24,15,28,"data"],[27,28,15,32],[27,29,15,33],[28,6,16,8],[28,7,16,9],[28,13,17,13],[29,8,18,12],[29,15,18,19,"encodeBlobAsBase64"],[29,33,18,37],[29,34,18,38,"data"],[29,38,18,42],[29,40,18,44,"callback"],[29,48,18,52],[29,49,18,53],[30,6,19,8],[31,4,20,4],[31,5,20,5],[31,11,21,9],[31,15,21,13,"withNativeArrayBuffer"],[31,36,21,34],[31,41,22,9,"data"],[31,45,22,13],[31,57,22,25,"ArrayBuffer"],[31,68,22,36],[31,72,22,40,"isView"],[31,78,22,46],[31,79,22,47,"data"],[31,83,22,51],[31,84,22,52],[31,85,22,53],[31,87,22,55],[32,6,23,8],[32,10,23,12,"supportsBinary"],[32,24,23,26],[32,26,23,28],[33,8,24,12],[33,15,24,19,"callback"],[33,23,24,27],[33,24,24,28,"data"],[33,28,24,32],[33,29,24,33],[34,6,25,8],[34,7,25,9],[34,13,26,13],[35,8,27,12],[35,15,27,19,"encodeBlobAsBase64"],[35,33,27,37],[35,34,27,38],[35,38,27,42,"Blob"],[35,42,27,46],[35,43,27,47],[35,44,27,48,"data"],[35,48,27,52],[35,49,27,53],[35,50,27,54],[35,52,27,56,"callback"],[35,60,27,64],[35,61,27,65],[36,6,28,8],[37,4,29,4],[38,4,30,4],[39,4,31,4],[39,11,31,11,"callback"],[39,19,31,19],[39,20,31,20,"PACKET_TYPES"],[39,30,31,32],[39,31,31,32,"PACKET_TYPES"],[39,43,31,32],[39,44,31,33,"type"],[39,48,31,37],[39,49,31,38],[39,53,31,42,"data"],[39,57,31,46],[39,61,31,50],[39,63,31,52],[39,64,31,53],[39,65,31,54],[40,2,32,0],[40,3,32,1],[41,2,33,0],[41,8,33,6,"encodeBlobAsBase64"],[41,26,33,24],[41,29,33,27,"encodeBlobAsBase64"],[41,30,33,28,"data"],[41,34,33,32],[41,36,33,34,"callback"],[41,44,33,42],[41,49,33,47],[42,4,34,4],[42,10,34,10,"fileReader"],[42,20,34,20],[42,23,34,23],[42,27,34,27,"FileReader"],[42,37,34,37],[42,38,34,38],[42,39,34,39],[43,4,35,4,"fileReader"],[43,14,35,14],[43,15,35,15,"onload"],[43,21,35,21],[43,24,35,24],[43,36,35,36],[44,6,36,8],[44,12,36,14,"content"],[44,19,36,21],[44,22,36,24,"fileReader"],[44,32,36,34],[44,33,36,35,"result"],[44,39,36,41],[44,40,36,42,"split"],[44,45,36,47],[44,46,36,48],[44,49,36,51],[44,50,36,52],[44,51,36,53],[44,52,36,54],[44,53,36,55],[45,6,37,8,"callback"],[45,14,37,16],[45,15,37,17],[45,18,37,20],[45,22,37,24,"content"],[45,29,37,31],[45,33,37,35],[45,35,37,37],[45,36,37,38],[45,37,37,39],[46,4,38,4],[46,5,38,5],[47,4,39,4],[47,11,39,11,"fileReader"],[47,21,39,21],[47,22,39,22,"readAsDataURL"],[47,35,39,35],[47,36,39,36,"data"],[47,40,39,40],[47,41,39,41],[48,2,40,0],[48,3,40,1],[49,2,41,0],[49,11,41,9,"toArray"],[49,18,41,16,"toArray"],[49,19,41,17,"data"],[49,23,41,21],[49,25,41,23],[50,4,42,4],[50,8,42,8,"data"],[50,12,42,12],[50,24,42,24,"Uint8Array"],[50,34,42,34],[50,36,42,36],[51,6,43,8],[51,13,43,15,"data"],[51,17,43,19],[52,4,44,4],[52,5,44,5],[52,11,45,9],[52,15,45,13,"data"],[52,19,45,17],[52,31,45,29,"ArrayBuffer"],[52,42,45,40],[52,44,45,42],[53,6,46,8],[53,13,46,15],[53,17,46,19,"Uint8Array"],[53,27,46,29],[53,28,46,30,"data"],[53,32,46,34],[53,33,46,35],[54,4,47,4],[54,5,47,5],[54,11,48,9],[55,6,49,8],[55,13,49,15],[55,17,49,19,"Uint8Array"],[55,27,49,29],[55,28,49,30,"data"],[55,32,49,34],[55,33,49,35,"buffer"],[55,39,49,41],[55,41,49,43,"data"],[55,45,49,47],[55,46,49,48,"byteOffset"],[55,56,49,58],[55,58,49,60,"data"],[55,62,49,64],[55,63,49,65,"byteLength"],[55,73,49,75],[55,74,49,76],[56,4,50,4],[57,2,51,0],[58,2,52,0],[58,6,52,4,"TEXT_ENCODER"],[58,18,52,16],[59,2,53,7],[59,11,53,16,"encodePacketToBinary"],[59,31,53,36,"encodePacketToBinary"],[59,32,53,37,"packet"],[59,38,53,43],[59,40,53,45,"callback"],[59,48,53,53],[59,50,53,55],[60,4,54,4],[60,8,54,8,"withNativeBlob"],[60,22,54,22],[60,26,54,26,"packet"],[60,32,54,32],[60,33,54,33,"data"],[60,37,54,37],[60,49,54,49,"Blob"],[60,53,54,53],[60,55,54,55],[61,6,55,8],[61,13,55,15,"packet"],[61,19,55,21],[61,20,55,22,"data"],[61,24,55,26],[61,25,55,27,"arrayBuffer"],[61,36,55,38],[61,37,55,39],[61,38,55,40],[61,39,55,41,"then"],[61,43,55,45],[61,44,55,46,"toArray"],[61,51,55,53],[61,52,55,54],[61,53,55,55,"then"],[61,57,55,59],[61,58,55,60,"callback"],[61,66,55,68],[61,67,55,69],[62,4,56,4],[62,5,56,5],[62,11,57,9],[62,15,57,13,"withNativeArrayBuffer"],[62,36,57,34],[62,41,58,9,"packet"],[62,47,58,15],[62,48,58,16,"data"],[62,52,58,20],[62,64,58,32,"ArrayBuffer"],[62,75,58,43],[62,79,58,47,"isView"],[62,85,58,53],[62,86,58,54,"packet"],[62,92,58,60],[62,93,58,61,"data"],[62,97,58,65],[62,98,58,66],[62,99,58,67],[62,101,58,69],[63,6,59,8],[63,13,59,15,"callback"],[63,21,59,23],[63,22,59,24,"toArray"],[63,29,59,31],[63,30,59,32,"packet"],[63,36,59,38],[63,37,59,39,"data"],[63,41,59,43],[63,42,59,44],[63,43,59,45],[64,4,60,4],[65,4,61,4,"encodePacket"],[65,16,61,16],[65,17,61,17,"packet"],[65,23,61,23],[65,25,61,25],[65,30,61,30],[65,32,61,33,"encoded"],[65,39,61,40],[65,43,61,45],[66,6,62,8],[66,10,62,12],[66,11,62,13,"TEXT_ENCODER"],[66,23,62,25],[66,25,62,27],[67,8,63,12,"TEXT_ENCODER"],[67,20,63,24],[67,23,63,27],[67,27,63,31,"TextEncoder"],[67,38,63,42],[67,39,63,43],[67,40,63,44],[68,6,64,8],[69,6,65,8,"callback"],[69,14,65,16],[69,15,65,17,"TEXT_ENCODER"],[69,27,65,29],[69,28,65,30,"encode"],[69,34,65,36],[69,35,65,37,"encoded"],[69,42,65,44],[69,43,65,45],[69,44,65,46],[70,4,66,4],[70,5,66,5],[70,6,66,6],[71,2,67,0],[72,0,67,1],[72,3]],"functionMap":{"names":["<global>","isView","encodePacket","encodeBlobAsBase64","fileReader.onload","toArray","encodePacketToBinary","encodePacket$argument_2"],"mappings":"AAA;eCM;CDI;qBEC;CFoB;2BGC;wBCE;KDG;CHE;AKC;CLU;OME;gCCQ;KDK;CNC"},"hasCjsExports":false},"type":"js/module"}]}