{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  const kDone = Symbol('kDone');\n  const kRun = Symbol('kRun');\n\n  /**\n   * A very simple job queue with adjustable concurrency. Adapted from\n   * https://github.com/STRML/async-limiter\n   */\n  class Limiter {\n    /**\n     * Creates a new `Limiter`.\n     *\n     * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n     *     to run concurrently\n     */\n    constructor(concurrency) {\n      this[kDone] = () => {\n        this.pending--;\n        this[kRun]();\n      };\n      this.concurrency = concurrency || Infinity;\n      this.jobs = [];\n      this.pending = 0;\n    }\n\n    /**\n     * Adds a job to the queue.\n     *\n     * @param {Function} job The job to run\n     * @public\n     */\n    add(job) {\n      this.jobs.push(job);\n      this[kRun]();\n    }\n\n    /**\n     * Removes a job from the queue and runs it if possible.\n     *\n     * @private\n     */\n    [kRun]() {\n      if (this.pending === this.concurrency) return;\n      if (this.jobs.length) {\n        const job = this.jobs.shift();\n        this.pending++;\n        job(this[kDone]);\n      }\n    }\n  }\n  module.exports = Limiter;\n});","lineCount":54,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,8,3,6,"kDone"],[4,13,3,11],[4,16,3,14,"Symbol"],[4,22,3,20],[4,23,3,21],[4,30,3,28],[4,31,3,29],[5,2,4,0],[5,8,4,6,"kRun"],[5,12,4,10],[5,15,4,13,"Symbol"],[5,21,4,19],[5,22,4,20],[5,28,4,26],[5,29,4,27],[7,2,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[11,2,10,0],[11,8,10,6,"Limiter"],[11,15,10,13],[11,16,10,14],[12,4,11,2],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,4,17,2,"constructor"],[18,15,17,13,"constructor"],[18,16,17,14,"concurrency"],[18,27,17,25],[18,29,17,27],[19,6,18,4],[19,10,18,8],[19,11,18,9,"kDone"],[19,16,18,14],[19,17,18,15],[19,20,18,18],[19,26,18,24],[20,8,19,6],[20,12,19,10],[20,13,19,11,"pending"],[20,20,19,18],[20,22,19,20],[21,8,20,6],[21,12,20,10],[21,13,20,11,"kRun"],[21,17,20,15],[21,18,20,16],[21,19,20,17],[21,20,20,18],[22,6,21,4],[22,7,21,5],[23,6,22,4],[23,10,22,8],[23,11,22,9,"concurrency"],[23,22,22,20],[23,25,22,23,"concurrency"],[23,36,22,34],[23,40,22,38,"Infinity"],[23,48,22,46],[24,6,23,4],[24,10,23,8],[24,11,23,9,"jobs"],[24,15,23,13],[24,18,23,16],[24,20,23,18],[25,6,24,4],[25,10,24,8],[25,11,24,9,"pending"],[25,18,24,16],[25,21,24,19],[25,22,24,20],[26,4,25,2],[28,4,27,2],[29,0,28,0],[30,0,29,0],[31,0,30,0],[32,0,31,0],[33,0,32,0],[34,4,33,2,"add"],[34,7,33,5,"add"],[34,8,33,6,"job"],[34,11,33,9],[34,13,33,11],[35,6,34,4],[35,10,34,8],[35,11,34,9,"jobs"],[35,15,34,13],[35,16,34,14,"push"],[35,20,34,18],[35,21,34,19,"job"],[35,24,34,22],[35,25,34,23],[36,6,35,4],[36,10,35,8],[36,11,35,9,"kRun"],[36,15,35,13],[36,16,35,14],[36,17,35,15],[36,18,35,16],[37,4,36,2],[39,4,38,2],[40,0,39,0],[41,0,40,0],[42,0,41,0],[43,0,42,0],[44,4,43,2],[44,5,43,3,"kRun"],[44,9,43,7],[44,13,43,11],[45,6,44,4],[45,10,44,8],[45,14,44,12],[45,15,44,13,"pending"],[45,22,44,20],[45,27,44,25],[45,31,44,29],[45,32,44,30,"concurrency"],[45,43,44,41],[45,45,44,43],[46,6,46,4],[46,10,46,8],[46,14,46,12],[46,15,46,13,"jobs"],[46,19,46,17],[46,20,46,18,"length"],[46,26,46,24],[46,28,46,26],[47,8,47,6],[47,14,47,12,"job"],[47,17,47,15],[47,20,47,18],[47,24,47,22],[47,25,47,23,"jobs"],[47,29,47,27],[47,30,47,28,"shift"],[47,35,47,33],[47,36,47,34],[47,37,47,35],[48,8,49,6],[48,12,49,10],[48,13,49,11,"pending"],[48,20,49,18],[48,22,49,20],[49,8,50,6,"job"],[49,11,50,9],[49,12,50,10],[49,16,50,14],[49,17,50,15,"kDone"],[49,22,50,20],[49,23,50,21],[49,24,50,22],[50,6,51,4],[51,4,52,2],[52,2,53,0],[53,2,55,0,"module"],[53,8,55,6],[53,9,55,7,"exports"],[53,16,55,14],[53,19,55,17,"Limiter"],[53,26,55,24],[54,0,55,25],[54,3]],"functionMap":{"names":["<global>","Limiter","Limiter#constructor","kDone","Limiter#add","Limiter#kRun"],"mappings":"AAA;ACS;ECO;kBCC;KDG;GDI;EGQ;GHG;EIO;GJS;CDC"},"hasCjsExports":true},"type":"js/module"}]}