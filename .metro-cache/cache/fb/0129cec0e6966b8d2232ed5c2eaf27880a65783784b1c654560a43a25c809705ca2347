{"dependencies":[{"name":"socket.io-client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"LVgCyxgUdze/lYG0kA6DdCAztfM=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":47},"end":{"line":2,"column":69,"index":116}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":117},"end":{"line":3,"column":39,"index":156}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _socketIoClient = require(_dependencyMap[0], \"socket.io-client\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[1], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[2], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  const API_URL = Constants.default.expoConfig?.extra?.EXPO_PUBLIC_BACKEND_URL || process.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  class SocketService {\n    socket = null;\n    isConnected = false;\n    connectionListeners = [];\n    async connect() {\n      try {\n        const token = await AsyncStorage.default.getItem('auth_token');\n        if (!token) {\n          console.log('No auth token found');\n          return false;\n        }\n        this.socket = (0, _socketIoClient.io)(API_URL, {\n          path: '/socket.io/',\n          transports: ['websocket', 'polling'],\n          auth: {\n            token: token\n          },\n          reconnection: true,\n          reconnectionDelay: 1000,\n          reconnectionAttempts: 5,\n          timeout: 10000\n        });\n        this.socket.on('connect', () => {\n          console.log('Socket connected:', this.socket?.id);\n          this.isConnected = true;\n          this.notifyConnectionListeners(true);\n        });\n        this.socket.on('disconnect', reason => {\n          console.log('Socket disconnected:', reason);\n          this.isConnected = false;\n          this.notifyConnectionListeners(false);\n        });\n        this.socket.on('connect_error', error => {\n          console.error('Connection error:', error.message);\n          this.isConnected = false;\n          this.notifyConnectionListeners(false);\n        });\n        return true;\n      } catch (error) {\n        console.error('Socket connection error:', error);\n        return false;\n      }\n    }\n    disconnect() {\n      if (this.socket) {\n        this.socket.disconnect();\n        this.socket = null;\n        this.isConnected = false;\n      }\n    }\n    emit(event, data) {\n      if (this.socket && this.isConnected) {\n        this.socket.emit(event, data);\n      } else {\n        console.warn('Socket not connected, cannot emit:', event);\n      }\n    }\n    on(event, callback) {\n      if (this.socket) {\n        this.socket.on(event, callback);\n      }\n    }\n    off(event, callback) {\n      if (this.socket) {\n        this.socket.off(event, callback);\n      }\n    }\n    addConnectionListener(callback) {\n      this.connectionListeners.push(callback);\n    }\n    removeConnectionListener(callback) {\n      this.connectionListeners = this.connectionListeners.filter(listener => listener !== callback);\n    }\n    notifyConnectionListeners(isConnected) {\n      this.connectionListeners.forEach(callback => {\n        callback(isConnected);\n      });\n    }\n  }\n  var _default = new SocketService();\n});","lineCount":104,"map":[[12,2,104,0,"Object"],[12,8,104,0],[12,9,104,0,"defineProperty"],[12,23,104,0],[12,24,104,0,"exports"],[12,31,104,0],[13,4,104,0,"enumerable"],[13,14,104,0],[14,4,104,0,"get"],[14,7,104,0],[14,18,104,0,"get"],[14,19,104,0],[15,6,104,0],[15,13,104,0,"_default"],[15,21,104,0],[16,4,104,0],[17,2,104,0],[18,2,1,0],[18,6,1,0,"_socketIoClient"],[18,21,1,0],[18,24,1,0,"require"],[18,31,1,0],[18,32,1,0,"_dependencyMap"],[18,46,1,0],[19,2,2,0],[19,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[19,42,2,0],[19,45,2,0,"require"],[19,52,2,0],[19,53,2,0,"_dependencyMap"],[19,67,2,0],[20,2,2,0],[20,6,2,0,"AsyncStorage"],[20,18,2,0],[20,21,2,0,"_interopDefault"],[20,36,2,0],[20,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[20,73,2,0],[21,2,3,0],[21,6,3,0,"_expoConstants"],[21,20,3,0],[21,23,3,0,"require"],[21,30,3,0],[21,31,3,0,"_dependencyMap"],[21,45,3,0],[22,2,3,0],[22,6,3,0,"Constants"],[22,15,3,0],[22,18,3,0,"_interopDefault"],[22,33,3,0],[22,34,3,0,"_expoConstants"],[22,48,3,0],[23,2,5,0],[23,8,5,6,"API_URL"],[23,15,5,13],[23,18,5,16,"Constants"],[23,27,5,25],[23,28,5,25,"default"],[23,35,5,25],[23,36,5,26,"expoConfig"],[23,46,5,36],[23,48,5,38,"extra"],[23,53,5,43],[23,55,5,45,"EXPO_PUBLIC_BACKEND_URL"],[23,78,5,68],[23,82,5,72,"process"],[23,89,5,79],[23,90,5,80,"env"],[23,93,5,83],[23,94,5,84,"EXPO_PUBLIC_BACKEND_URL"],[23,117,5,107],[23,121,5,111],[23,144,5,134],[24,2,7,0],[24,8,7,6,"SocketService"],[24,21,7,19],[24,22,7,20],[25,4,8,2,"socket"],[25,10,8,8],[25,13,8,26],[25,17,8,30],[26,4,9,2,"isConnected"],[26,15,9,13],[26,18,9,25],[26,23,9,30],[27,4,10,2,"connectionListeners"],[27,23,10,21],[27,26,10,60],[27,28,10,62],[28,4,12,2],[28,10,12,8,"connect"],[28,17,12,15,"connect"],[28,18,12,15],[28,20,12,18],[29,6,13,4],[29,10,13,8],[30,8,14,6],[30,14,14,12,"token"],[30,19,14,17],[30,22,14,20],[30,28,14,26,"AsyncStorage"],[30,40,14,38],[30,41,14,38,"default"],[30,48,14,38],[30,49,14,39,"getItem"],[30,56,14,46],[30,57,14,47],[30,69,14,59],[30,70,14,60],[31,8,16,6],[31,12,16,10],[31,13,16,11,"token"],[31,18,16,16],[31,20,16,18],[32,10,17,8,"console"],[32,17,17,15],[32,18,17,16,"log"],[32,21,17,19],[32,22,17,20],[32,43,17,41],[32,44,17,42],[33,10,18,8],[33,17,18,15],[33,22,18,20],[34,8,19,6],[35,8,21,6],[35,12,21,10],[35,13,21,11,"socket"],[35,19,21,17],[35,22,21,20],[35,26,21,20,"io"],[35,41,21,22],[35,42,21,22,"io"],[35,44,21,22],[35,46,21,23,"API_URL"],[35,53,21,30],[35,55,21,32],[36,10,22,8,"path"],[36,14,22,12],[36,16,22,14],[36,29,22,27],[37,10,23,8,"transports"],[37,20,23,18],[37,22,23,20],[37,23,23,21],[37,34,23,32],[37,36,23,34],[37,45,23,43],[37,46,23,44],[38,10,24,8,"auth"],[38,14,24,12],[38,16,24,14],[39,12,25,10,"token"],[39,17,25,15],[39,19,25,17,"token"],[40,10,26,8],[40,11,26,9],[41,10,27,8,"reconnection"],[41,22,27,20],[41,24,27,22],[41,28,27,26],[42,10,28,8,"reconnectionDelay"],[42,27,28,25],[42,29,28,27],[42,33,28,31],[43,10,29,8,"reconnectionAttempts"],[43,30,29,28],[43,32,29,30],[43,33,29,31],[44,10,30,8,"timeout"],[44,17,30,15],[44,19,30,17],[45,8,31,6],[45,9,31,7],[45,10,31,8],[46,8,33,6],[46,12,33,10],[46,13,33,11,"socket"],[46,19,33,17],[46,20,33,18,"on"],[46,22,33,20],[46,23,33,21],[46,32,33,30],[46,34,33,32],[46,40,33,38],[47,10,34,8,"console"],[47,17,34,15],[47,18,34,16,"log"],[47,21,34,19],[47,22,34,20],[47,41,34,39],[47,43,34,41],[47,47,34,45],[47,48,34,46,"socket"],[47,54,34,52],[47,56,34,54,"id"],[47,58,34,56],[47,59,34,57],[48,10,35,8],[48,14,35,12],[48,15,35,13,"isConnected"],[48,26,35,24],[48,29,35,27],[48,33,35,31],[49,10,36,8],[49,14,36,12],[49,15,36,13,"notifyConnectionListeners"],[49,40,36,38],[49,41,36,39],[49,45,36,43],[49,46,36,44],[50,8,37,6],[50,9,37,7],[50,10,37,8],[51,8,39,6],[51,12,39,10],[51,13,39,11,"socket"],[51,19,39,17],[51,20,39,18,"on"],[51,22,39,20],[51,23,39,21],[51,35,39,33],[51,37,39,36,"reason"],[51,43,39,50],[51,47,39,55],[52,10,40,8,"console"],[52,17,40,15],[52,18,40,16,"log"],[52,21,40,19],[52,22,40,20],[52,44,40,42],[52,46,40,44,"reason"],[52,52,40,50],[52,53,40,51],[53,10,41,8],[53,14,41,12],[53,15,41,13,"isConnected"],[53,26,41,24],[53,29,41,27],[53,34,41,32],[54,10,42,8],[54,14,42,12],[54,15,42,13,"notifyConnectionListeners"],[54,40,42,38],[54,41,42,39],[54,46,42,44],[54,47,42,45],[55,8,43,6],[55,9,43,7],[55,10,43,8],[56,8,45,6],[56,12,45,10],[56,13,45,11,"socket"],[56,19,45,17],[56,20,45,18,"on"],[56,22,45,20],[56,23,45,21],[56,38,45,36],[56,40,45,39,"error"],[56,45,45,51],[56,49,45,56],[57,10,46,8,"console"],[57,17,46,15],[57,18,46,16,"error"],[57,23,46,21],[57,24,46,22],[57,43,46,41],[57,45,46,43,"error"],[57,50,46,48],[57,51,46,49,"message"],[57,58,46,56],[57,59,46,57],[58,10,47,8],[58,14,47,12],[58,15,47,13,"isConnected"],[58,26,47,24],[58,29,47,27],[58,34,47,32],[59,10,48,8],[59,14,48,12],[59,15,48,13,"notifyConnectionListeners"],[59,40,48,38],[59,41,48,39],[59,46,48,44],[59,47,48,45],[60,8,49,6],[60,9,49,7],[60,10,49,8],[61,8,51,6],[61,15,51,13],[61,19,51,17],[62,6,53,4],[62,7,53,5],[62,8,53,6],[62,15,53,13,"error"],[62,20,53,18],[62,22,53,20],[63,8,54,6,"console"],[63,15,54,13],[63,16,54,14,"error"],[63,21,54,19],[63,22,54,20],[63,48,54,46],[63,50,54,48,"error"],[63,55,54,53],[63,56,54,54],[64,8,55,6],[64,15,55,13],[64,20,55,18],[65,6,56,4],[66,4,57,2],[67,4,59,2,"disconnect"],[67,14,59,12,"disconnect"],[67,15,59,12],[67,17,59,15],[68,6,60,4],[68,10,60,8],[68,14,60,12],[68,15,60,13,"socket"],[68,21,60,19],[68,23,60,21],[69,8,61,6],[69,12,61,10],[69,13,61,11,"socket"],[69,19,61,17],[69,20,61,18,"disconnect"],[69,30,61,28],[69,31,61,29],[69,32,61,30],[70,8,62,6],[70,12,62,10],[70,13,62,11,"socket"],[70,19,62,17],[70,22,62,20],[70,26,62,24],[71,8,63,6],[71,12,63,10],[71,13,63,11,"isConnected"],[71,24,63,22],[71,27,63,25],[71,32,63,30],[72,6,64,4],[73,4,65,2],[74,4,67,2,"emit"],[74,8,67,6,"emit"],[74,9,67,7,"event"],[74,14,67,20],[74,16,67,22,"data"],[74,20,67,31],[74,22,67,33],[75,6,68,4],[75,10,68,8],[75,14,68,12],[75,15,68,13,"socket"],[75,21,68,19],[75,25,68,23],[75,29,68,27],[75,30,68,28,"isConnected"],[75,41,68,39],[75,43,68,41],[76,8,69,6],[76,12,69,10],[76,13,69,11,"socket"],[76,19,69,17],[76,20,69,18,"emit"],[76,24,69,22],[76,25,69,23,"event"],[76,30,69,28],[76,32,69,30,"data"],[76,36,69,34],[76,37,69,35],[77,6,70,4],[77,7,70,5],[77,13,70,11],[78,8,71,6,"console"],[78,15,71,13],[78,16,71,14,"warn"],[78,20,71,18],[78,21,71,19],[78,57,71,55],[78,59,71,57,"event"],[78,64,71,62],[78,65,71,63],[79,6,72,4],[80,4,73,2],[81,4,75,2,"on"],[81,6,75,4,"on"],[81,7,75,5,"event"],[81,12,75,18],[81,14,75,20,"callback"],[81,22,75,49],[81,24,75,51],[82,6,76,4],[82,10,76,8],[82,14,76,12],[82,15,76,13,"socket"],[82,21,76,19],[82,23,76,21],[83,8,77,6],[83,12,77,10],[83,13,77,11,"socket"],[83,19,77,17],[83,20,77,18,"on"],[83,22,77,20],[83,23,77,21,"event"],[83,28,77,26],[83,30,77,28,"callback"],[83,38,77,36],[83,39,77,37],[84,6,78,4],[85,4,79,2],[86,4,81,2,"off"],[86,7,81,5,"off"],[86,8,81,6,"event"],[86,13,81,19],[86,15,81,21,"callback"],[86,23,81,51],[86,25,81,53],[87,6,82,4],[87,10,82,8],[87,14,82,12],[87,15,82,13,"socket"],[87,21,82,19],[87,23,82,21],[88,8,83,6],[88,12,83,10],[88,13,83,11,"socket"],[88,19,83,17],[88,20,83,18,"off"],[88,23,83,21],[88,24,83,22,"event"],[88,29,83,27],[88,31,83,29,"callback"],[88,39,83,37],[88,40,83,38],[89,6,84,4],[90,4,85,2],[91,4,87,2,"addConnectionListener"],[91,25,87,23,"addConnectionListener"],[91,26,87,24,"callback"],[91,34,87,64],[91,36,87,66],[92,6,88,4],[92,10,88,8],[92,11,88,9,"connectionListeners"],[92,30,88,28],[92,31,88,29,"push"],[92,35,88,33],[92,36,88,34,"callback"],[92,44,88,42],[92,45,88,43],[93,4,89,2],[94,4,91,2,"removeConnectionListener"],[94,28,91,26,"removeConnectionListener"],[94,29,91,27,"callback"],[94,37,91,67],[94,39,91,69],[95,6,92,4],[95,10,92,8],[95,11,92,9,"connectionListeners"],[95,30,92,28],[95,33,92,31],[95,37,92,35],[95,38,92,36,"connectionListeners"],[95,57,92,55],[95,58,92,56,"filter"],[95,64,92,62],[95,65,93,6,"listener"],[95,73,93,14],[95,77,93,18,"listener"],[95,85,93,26],[95,90,93,31,"callback"],[95,98,94,4],[95,99,94,5],[96,4,95,2],[97,4,97,2,"notifyConnectionListeners"],[97,29,97,27,"notifyConnectionListeners"],[97,30,97,28,"isConnected"],[97,41,97,48],[97,43,97,50],[98,6,98,4],[98,10,98,8],[98,11,98,9,"connectionListeners"],[98,30,98,28],[98,31,98,29,"forEach"],[98,38,98,36],[98,39,98,37,"callback"],[98,47,98,45],[98,51,98,49],[99,8,99,6,"callback"],[99,16,99,14],[99,17,99,15,"isConnected"],[99,28,99,26],[99,29,99,27],[100,6,100,4],[100,7,100,5],[100,8,100,6],[101,4,101,2],[102,2,102,0],[103,2,104,0],[103,6,104,0,"_default"],[103,14,104,0],[103,17,104,15],[103,21,104,19,"SocketService"],[103,34,104,32],[103,35,104,33],[103,36,104,34],[104,0,104,35],[104,3]],"functionMap":{"names":["<global>","SocketService","SocketService#connect","on$argument_1","SocketService#disconnect","SocketService#emit","SocketService#on","SocketService#off","SocketService#addConnectionListener","SocketService#removeConnectionListener","connectionListeners.filter$argument_0","SocketService#notifyConnectionListeners","connectionListeners.forEach$argument_0"],"mappings":"AAA;ACM;ECK;gCCqB;ODI;mCCE;ODI;sCCE;ODI;GDQ;EGE;GHM;EIE;GJM;EKE;GLI;EME;GNI;EOE;GPE;EQE;MCE,iCD;GRE;EUE;qCCC;KDE;GVC;CDC"},"hasCjsExports":false},"type":"js/module"}]}