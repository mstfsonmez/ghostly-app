{"dependencies":[{"name":"socket.io-client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"LVgCyxgUdze/lYG0kA6DdCAztfM=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":117},"end":{"line":3,"column":39,"index":156}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _socketIoClient = require(_dependencyMap[0], \"socket.io-client\");\n  var _expoConstants = require(_dependencyMap[1], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  const API_URL = Constants.default.expoConfig?.extra?.EXPO_PUBLIC_BACKEND_URL || process.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  class SocketService {\n    socket = null;\n    isConnected = false;\n    connectionListeners = [];\n    pendingListeners = [];\n    async connect() {\n      try {\n        console.log('🔵 Connecting to Socket.IO server:', API_URL);\n\n        // Anonymous system - no auth token required\n        this.socket = (0, _socketIoClient.io)(API_URL, {\n          path: '/socket.io/',\n          transports: ['websocket', 'polling'],\n          reconnection: true,\n          reconnectionDelay: 1000,\n          reconnectionAttempts: 5,\n          timeout: 10000\n        });\n        this.socket.on('connect', () => {\n          console.log('✅ Socket connected:', this.socket?.id);\n          this.isConnected = true;\n          this.notifyConnectionListeners(true);\n\n          // Register all pending listeners now that socket is connected\n          console.log(`📝 Registering ${this.pendingListeners.length} pending listeners`);\n          this.pendingListeners.forEach(({\n            event,\n            callback\n          }) => {\n            if (this.socket) {\n              this.socket.on(event, callback);\n              console.log(`✅ Registered listener for: ${event}`);\n            }\n          });\n          this.pendingListeners = [];\n        });\n        this.socket.on('disconnect', reason => {\n          console.log('❌ Socket disconnected:', reason);\n          this.isConnected = false;\n          this.notifyConnectionListeners(false);\n        });\n        this.socket.on('connect_error', error => {\n          console.error('❌ Connection error:', error.message);\n          this.isConnected = false;\n          this.notifyConnectionListeners(false);\n        });\n        return true;\n      } catch (error) {\n        console.error('Socket connection error:', error);\n        return false;\n      }\n    }\n    disconnect() {\n      if (this.socket) {\n        this.socket.disconnect();\n        this.socket = null;\n        this.isConnected = false;\n      }\n    }\n    emit(event, data) {\n      if (this.socket && this.isConnected) {\n        console.log(`📤 Emitting: ${event}`, data);\n        this.socket.emit(event, data);\n      } else {\n        console.warn('⚠️ Socket not connected, cannot emit:', event);\n      }\n    }\n    on(event, callback) {\n      if (this.socket && this.isConnected) {\n        // Socket is already connected, register immediately\n        console.log(`✅ Registering listener immediately for: ${event}`);\n        this.socket.on(event, callback);\n      } else {\n        // Socket not connected yet, queue the listener\n        console.log(`⏳ Queuing listener for: ${event}`);\n        this.pendingListeners.push({\n          event,\n          callback\n        });\n      }\n    }\n    off(event, callback) {\n      if (this.socket) {\n        this.socket.off(event, callback);\n      }\n      // Also remove from pending listeners\n      this.pendingListeners = this.pendingListeners.filter(listener => listener.event !== event || callback && listener.callback !== callback);\n    }\n    addConnectionListener(callback) {\n      this.connectionListeners.push(callback);\n    }\n    removeConnectionListener(callback) {\n      this.connectionListeners = this.connectionListeners.filter(listener => listener !== callback);\n    }\n    notifyConnectionListeners(isConnected) {\n      this.connectionListeners.forEach(callback => {\n        callback(isConnected);\n      });\n    }\n  }\n  var _default = new SocketService();\n});","lineCount":123,"map":[[12,2,119,0,"Object"],[12,8,119,0],[12,9,119,0,"defineProperty"],[12,23,119,0],[12,24,119,0,"exports"],[12,31,119,0],[13,4,119,0,"enumerable"],[13,14,119,0],[14,4,119,0,"get"],[14,7,119,0],[14,18,119,0,"get"],[14,19,119,0],[15,6,119,0],[15,13,119,0,"_default"],[15,21,119,0],[16,4,119,0],[17,2,119,0],[18,2,1,0],[18,6,1,0,"_socketIoClient"],[18,21,1,0],[18,24,1,0,"require"],[18,31,1,0],[18,32,1,0,"_dependencyMap"],[18,46,1,0],[19,2,3,0],[19,6,3,0,"_expoConstants"],[19,20,3,0],[19,23,3,0,"require"],[19,30,3,0],[19,31,3,0,"_dependencyMap"],[19,45,3,0],[20,2,3,0],[20,6,3,0,"Constants"],[20,15,3,0],[20,18,3,0,"_interopDefault"],[20,33,3,0],[20,34,3,0,"_expoConstants"],[20,48,3,0],[21,2,5,0],[21,8,5,6,"API_URL"],[21,15,5,13],[21,18,5,16,"Constants"],[21,27,5,25],[21,28,5,25,"default"],[21,35,5,25],[21,36,5,26,"expoConfig"],[21,46,5,36],[21,48,5,38,"extra"],[21,53,5,43],[21,55,5,45,"EXPO_PUBLIC_BACKEND_URL"],[21,78,5,68],[21,82,5,72,"process"],[21,89,5,79],[21,90,5,80,"env"],[21,93,5,83],[21,94,5,84,"EXPO_PUBLIC_BACKEND_URL"],[21,117,5,107],[21,121,5,111],[21,144,5,134],[22,2,7,0],[22,8,7,6,"SocketService"],[22,21,7,19],[22,22,7,20],[23,4,8,2,"socket"],[23,10,8,8],[23,13,8,26],[23,17,8,30],[24,4,9,2,"isConnected"],[24,15,9,13],[24,18,9,25],[24,23,9,30],[25,4,10,2,"connectionListeners"],[25,23,10,21],[25,26,10,60],[25,28,10,62],[26,4,11,2,"pendingListeners"],[26,20,11,18],[26,23,11,73],[26,25,11,75],[27,4,13,2],[27,10,13,8,"connect"],[27,17,13,15,"connect"],[27,18,13,15],[27,20,13,18],[28,6,14,4],[28,10,14,8],[29,8,15,6,"console"],[29,15,15,13],[29,16,15,14,"log"],[29,19,15,17],[29,20,15,18],[29,56,15,54],[29,58,15,56,"API_URL"],[29,65,15,63],[29,66,15,64],[31,8,17,6],[32,8,18,6],[32,12,18,10],[32,13,18,11,"socket"],[32,19,18,17],[32,22,18,20],[32,26,18,20,"io"],[32,41,18,22],[32,42,18,22,"io"],[32,44,18,22],[32,46,18,23,"API_URL"],[32,53,18,30],[32,55,18,32],[33,10,19,8,"path"],[33,14,19,12],[33,16,19,14],[33,29,19,27],[34,10,20,8,"transports"],[34,20,20,18],[34,22,20,20],[34,23,20,21],[34,34,20,32],[34,36,20,34],[34,45,20,43],[34,46,20,44],[35,10,21,8,"reconnection"],[35,22,21,20],[35,24,21,22],[35,28,21,26],[36,10,22,8,"reconnectionDelay"],[36,27,22,25],[36,29,22,27],[36,33,22,31],[37,10,23,8,"reconnectionAttempts"],[37,30,23,28],[37,32,23,30],[37,33,23,31],[38,10,24,8,"timeout"],[38,17,24,15],[38,19,24,17],[39,8,25,6],[39,9,25,7],[39,10,25,8],[40,8,27,6],[40,12,27,10],[40,13,27,11,"socket"],[40,19,27,17],[40,20,27,18,"on"],[40,22,27,20],[40,23,27,21],[40,32,27,30],[40,34,27,32],[40,40,27,38],[41,10,28,8,"console"],[41,17,28,15],[41,18,28,16,"log"],[41,21,28,19],[41,22,28,20],[41,43,28,41],[41,45,28,43],[41,49,28,47],[41,50,28,48,"socket"],[41,56,28,54],[41,58,28,56,"id"],[41,60,28,58],[41,61,28,59],[42,10,29,8],[42,14,29,12],[42,15,29,13,"isConnected"],[42,26,29,24],[42,29,29,27],[42,33,29,31],[43,10,30,8],[43,14,30,12],[43,15,30,13,"notifyConnectionListeners"],[43,40,30,38],[43,41,30,39],[43,45,30,43],[43,46,30,44],[45,10,32,8],[46,10,33,8,"console"],[46,17,33,15],[46,18,33,16,"log"],[46,21,33,19],[46,22,33,20],[46,40,33,38],[46,44,33,42],[46,45,33,43,"pendingListeners"],[46,61,33,59],[46,62,33,60,"length"],[46,68,33,66],[46,88,33,86],[46,89,33,87],[47,10,34,8],[47,14,34,12],[47,15,34,13,"pendingListeners"],[47,31,34,29],[47,32,34,30,"forEach"],[47,39,34,37],[47,40,34,38],[47,41,34,39],[48,12,34,41,"event"],[48,17,34,46],[49,12,34,48,"callback"],[50,10,34,57],[50,11,34,58],[50,16,34,63],[51,12,35,10],[51,16,35,14],[51,20,35,18],[51,21,35,19,"socket"],[51,27,35,25],[51,29,35,27],[52,14,36,12],[52,18,36,16],[52,19,36,17,"socket"],[52,25,36,23],[52,26,36,24,"on"],[52,28,36,26],[52,29,36,27,"event"],[52,34,36,32],[52,36,36,34,"callback"],[52,44,36,42],[52,45,36,43],[53,14,37,12,"console"],[53,21,37,19],[53,22,37,20,"log"],[53,25,37,23],[53,26,37,24],[53,56,37,54,"event"],[53,61,37,59],[53,63,37,61],[53,64,37,62],[54,12,38,10],[55,10,39,8],[55,11,39,9],[55,12,39,10],[56,10,40,8],[56,14,40,12],[56,15,40,13,"pendingListeners"],[56,31,40,29],[56,34,40,32],[56,36,40,34],[57,8,41,6],[57,9,41,7],[57,10,41,8],[58,8,43,6],[58,12,43,10],[58,13,43,11,"socket"],[58,19,43,17],[58,20,43,18,"on"],[58,22,43,20],[58,23,43,21],[58,35,43,33],[58,37,43,36,"reason"],[58,43,43,50],[58,47,43,55],[59,10,44,8,"console"],[59,17,44,15],[59,18,44,16,"log"],[59,21,44,19],[59,22,44,20],[59,46,44,44],[59,48,44,46,"reason"],[59,54,44,52],[59,55,44,53],[60,10,45,8],[60,14,45,12],[60,15,45,13,"isConnected"],[60,26,45,24],[60,29,45,27],[60,34,45,32],[61,10,46,8],[61,14,46,12],[61,15,46,13,"notifyConnectionListeners"],[61,40,46,38],[61,41,46,39],[61,46,46,44],[61,47,46,45],[62,8,47,6],[62,9,47,7],[62,10,47,8],[63,8,49,6],[63,12,49,10],[63,13,49,11,"socket"],[63,19,49,17],[63,20,49,18,"on"],[63,22,49,20],[63,23,49,21],[63,38,49,36],[63,40,49,39,"error"],[63,45,49,51],[63,49,49,56],[64,10,50,8,"console"],[64,17,50,15],[64,18,50,16,"error"],[64,23,50,21],[64,24,50,22],[64,45,50,43],[64,47,50,45,"error"],[64,52,50,50],[64,53,50,51,"message"],[64,60,50,58],[64,61,50,59],[65,10,51,8],[65,14,51,12],[65,15,51,13,"isConnected"],[65,26,51,24],[65,29,51,27],[65,34,51,32],[66,10,52,8],[66,14,52,12],[66,15,52,13,"notifyConnectionListeners"],[66,40,52,38],[66,41,52,39],[66,46,52,44],[66,47,52,45],[67,8,53,6],[67,9,53,7],[67,10,53,8],[68,8,55,6],[68,15,55,13],[68,19,55,17],[69,6,57,4],[69,7,57,5],[69,8,57,6],[69,15,57,13,"error"],[69,20,57,18],[69,22,57,20],[70,8,58,6,"console"],[70,15,58,13],[70,16,58,14,"error"],[70,21,58,19],[70,22,58,20],[70,48,58,46],[70,50,58,48,"error"],[70,55,58,53],[70,56,58,54],[71,8,59,6],[71,15,59,13],[71,20,59,18],[72,6,60,4],[73,4,61,2],[74,4,63,2,"disconnect"],[74,14,63,12,"disconnect"],[74,15,63,12],[74,17,63,15],[75,6,64,4],[75,10,64,8],[75,14,64,12],[75,15,64,13,"socket"],[75,21,64,19],[75,23,64,21],[76,8,65,6],[76,12,65,10],[76,13,65,11,"socket"],[76,19,65,17],[76,20,65,18,"disconnect"],[76,30,65,28],[76,31,65,29],[76,32,65,30],[77,8,66,6],[77,12,66,10],[77,13,66,11,"socket"],[77,19,66,17],[77,22,66,20],[77,26,66,24],[78,8,67,6],[78,12,67,10],[78,13,67,11,"isConnected"],[78,24,67,22],[78,27,67,25],[78,32,67,30],[79,6,68,4],[80,4,69,2],[81,4,71,2,"emit"],[81,8,71,6,"emit"],[81,9,71,7,"event"],[81,14,71,20],[81,16,71,22,"data"],[81,20,71,31],[81,22,71,33],[82,6,72,4],[82,10,72,8],[82,14,72,12],[82,15,72,13,"socket"],[82,21,72,19],[82,25,72,23],[82,29,72,27],[82,30,72,28,"isConnected"],[82,41,72,39],[82,43,72,41],[83,8,73,6,"console"],[83,15,73,13],[83,16,73,14,"log"],[83,19,73,17],[83,20,73,18],[83,36,73,34,"event"],[83,41,73,39],[83,43,73,41],[83,45,73,43,"data"],[83,49,73,47],[83,50,73,48],[84,8,74,6],[84,12,74,10],[84,13,74,11,"socket"],[84,19,74,17],[84,20,74,18,"emit"],[84,24,74,22],[84,25,74,23,"event"],[84,30,74,28],[84,32,74,30,"data"],[84,36,74,34],[84,37,74,35],[85,6,75,4],[85,7,75,5],[85,13,75,11],[86,8,76,6,"console"],[86,15,76,13],[86,16,76,14,"warn"],[86,20,76,18],[86,21,76,19],[86,60,76,58],[86,62,76,60,"event"],[86,67,76,65],[86,68,76,66],[87,6,77,4],[88,4,78,2],[89,4,80,2,"on"],[89,6,80,4,"on"],[89,7,80,5,"event"],[89,12,80,18],[89,14,80,20,"callback"],[89,22,80,49],[89,24,80,51],[90,6,81,4],[90,10,81,8],[90,14,81,12],[90,15,81,13,"socket"],[90,21,81,19],[90,25,81,23],[90,29,81,27],[90,30,81,28,"isConnected"],[90,41,81,39],[90,43,81,41],[91,8,82,6],[92,8,83,6,"console"],[92,15,83,13],[92,16,83,14,"log"],[92,19,83,17],[92,20,83,18],[92,63,83,61,"event"],[92,68,83,66],[92,70,83,68],[92,71,83,69],[93,8,84,6],[93,12,84,10],[93,13,84,11,"socket"],[93,19,84,17],[93,20,84,18,"on"],[93,22,84,20],[93,23,84,21,"event"],[93,28,84,26],[93,30,84,28,"callback"],[93,38,84,36],[93,39,84,37],[94,6,85,4],[94,7,85,5],[94,13,85,11],[95,8,86,6],[96,8,87,6,"console"],[96,15,87,13],[96,16,87,14,"log"],[96,19,87,17],[96,20,87,18],[96,47,87,45,"event"],[96,52,87,50],[96,54,87,52],[96,55,87,53],[97,8,88,6],[97,12,88,10],[97,13,88,11,"pendingListeners"],[97,29,88,27],[97,30,88,28,"push"],[97,34,88,32],[97,35,88,33],[98,10,88,35,"event"],[98,15,88,40],[99,10,88,42,"callback"],[100,8,88,51],[100,9,88,52],[100,10,88,53],[101,6,89,4],[102,4,90,2],[103,4,92,2,"off"],[103,7,92,5,"off"],[103,8,92,6,"event"],[103,13,92,19],[103,15,92,21,"callback"],[103,23,92,51],[103,25,92,53],[104,6,93,4],[104,10,93,8],[104,14,93,12],[104,15,93,13,"socket"],[104,21,93,19],[104,23,93,21],[105,8,94,6],[105,12,94,10],[105,13,94,11,"socket"],[105,19,94,17],[105,20,94,18,"off"],[105,23,94,21],[105,24,94,22,"event"],[105,29,94,27],[105,31,94,29,"callback"],[105,39,94,37],[105,40,94,38],[106,6,95,4],[107,6,96,4],[108,6,97,4],[108,10,97,8],[108,11,97,9,"pendingListeners"],[108,27,97,25],[108,30,97,28],[108,34,97,32],[108,35,97,33,"pendingListeners"],[108,51,97,49],[108,52,97,50,"filter"],[108,58,97,56],[108,59,98,6,"listener"],[108,67,98,14],[108,71,98,18,"listener"],[108,79,98,26],[108,80,98,27,"event"],[108,85,98,32],[108,90,98,37,"event"],[108,95,98,42],[108,99,98,47,"callback"],[108,107,98,55],[108,111,98,59,"listener"],[108,119,98,67],[108,120,98,68,"callback"],[108,128,98,76],[108,133,98,81,"callback"],[108,141,99,4],[108,142,99,5],[109,4,100,2],[110,4,102,2,"addConnectionListener"],[110,25,102,23,"addConnectionListener"],[110,26,102,24,"callback"],[110,34,102,64],[110,36,102,66],[111,6,103,4],[111,10,103,8],[111,11,103,9,"connectionListeners"],[111,30,103,28],[111,31,103,29,"push"],[111,35,103,33],[111,36,103,34,"callback"],[111,44,103,42],[111,45,103,43],[112,4,104,2],[113,4,106,2,"removeConnectionListener"],[113,28,106,26,"removeConnectionListener"],[113,29,106,27,"callback"],[113,37,106,67],[113,39,106,69],[114,6,107,4],[114,10,107,8],[114,11,107,9,"connectionListeners"],[114,30,107,28],[114,33,107,31],[114,37,107,35],[114,38,107,36,"connectionListeners"],[114,57,107,55],[114,58,107,56,"filter"],[114,64,107,62],[114,65,108,6,"listener"],[114,73,108,14],[114,77,108,18,"listener"],[114,85,108,26],[114,90,108,31,"callback"],[114,98,109,4],[114,99,109,5],[115,4,110,2],[116,4,112,2,"notifyConnectionListeners"],[116,29,112,27,"notifyConnectionListeners"],[116,30,112,28,"isConnected"],[116,41,112,48],[116,43,112,50],[117,6,113,4],[117,10,113,8],[117,11,113,9,"connectionListeners"],[117,30,113,28],[117,31,113,29,"forEach"],[117,38,113,36],[117,39,113,37,"callback"],[117,47,113,45],[117,51,113,49],[118,8,114,6,"callback"],[118,16,114,14],[118,17,114,15,"isConnected"],[118,28,114,26],[118,29,114,27],[119,6,115,4],[119,7,115,5],[119,8,115,6],[120,4,116,2],[121,2,117,0],[122,2,119,0],[122,6,119,0,"_default"],[122,14,119,0],[122,17,119,15],[122,21,119,19,"SocketService"],[122,34,119,32],[122,35,119,33],[122,36,119,34],[123,0,119,35],[123,3]],"functionMap":{"names":["<global>","SocketService","SocketService#connect","on$argument_1","pendingListeners.forEach$argument_0","SocketService#disconnect","SocketService#emit","SocketService#on","SocketService#off","pendingListeners.filter$argument_0","SocketService#addConnectionListener","SocketService#removeConnectionListener","connectionListeners.filter$argument_0","SocketService#notifyConnectionListeners","connectionListeners.forEach$argument_0"],"mappings":"AAA;ACM;ECM;gCCc;sCCO;SDK;ODE;mCCE;ODI;sCCE;ODI;GDQ;EIE;GJM;EKE;GLO;EME;GNU;EOE;MCM,oFD;GPE;ESE;GTE;EUE;MCE,iCD;GVE;EYE;qCCC;KDE;GZC;CDC"},"hasCjsExports":false},"type":"js/module"}]}