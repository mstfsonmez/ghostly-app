{"dependencies":[{"name":"socket.io-client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"LVgCyxgUdze/lYG0kA6DdCAztfM=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":117},"end":{"line":3,"column":39,"index":156}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _socketIoClient = require(_dependencyMap[0], \"socket.io-client\");\n  var _expoConstants = require(_dependencyMap[1], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  const API_URL = Constants.default.expoConfig?.extra?.EXPO_PUBLIC_BACKEND_URL || process.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  class SocketService {\n    socket = null;\n    isConnected = false;\n    connectionListeners = [];\n    pendingListeners = [];\n    async connect() {\n      try {\n        console.log('🔵 Connecting to Socket.IO server:', API_URL);\n\n        // Force polling transport only (WebSocket blocked by Kubernetes proxy)\n        // Socket.IO path must be under /api/ to work with Kubernetes ingress\n        this.socket = (0, _socketIoClient.io)(API_URL, {\n          path: '/api/socket.io/',\n          transports: ['polling'],\n          // Only use polling, not websocket\n          reconnection: true,\n          reconnectionDelay: 1000,\n          reconnectionAttempts: 5,\n          timeout: 10000\n        });\n        this.socket.on('connect', () => {\n          console.log('✅ Socket connected:', this.socket?.id);\n          this.isConnected = true;\n          this.notifyConnectionListeners(true);\n\n          // Register all pending listeners now that socket is connected\n          console.log(`📝 Registering ${this.pendingListeners.length} pending listeners`);\n          this.pendingListeners.forEach(({\n            event,\n            callback\n          }) => {\n            if (this.socket) {\n              this.socket.on(event, callback);\n              console.log(`✅ Registered listener for: ${event}`);\n            }\n          });\n          this.pendingListeners = [];\n        });\n        this.socket.on('disconnect', reason => {\n          console.log('❌ Socket disconnected:', reason);\n          this.isConnected = false;\n          this.notifyConnectionListeners(false);\n        });\n        this.socket.on('connect_error', error => {\n          console.error('❌ Connection error:', error.message);\n          this.isConnected = false;\n          this.notifyConnectionListeners(false);\n        });\n        return true;\n      } catch (error) {\n        console.error('Socket connection error:', error);\n        return false;\n      }\n    }\n    disconnect() {\n      if (this.socket) {\n        this.socket.disconnect();\n        this.socket = null;\n        this.isConnected = false;\n      }\n    }\n    emit(event, data) {\n      if (this.socket && this.isConnected) {\n        console.log(`📤 Emitting: ${event}`, data);\n        this.socket.emit(event, data);\n      } else {\n        console.warn('⚠️ Socket not connected, cannot emit:', event);\n      }\n    }\n    on(event, callback) {\n      if (this.socket && this.isConnected) {\n        // Socket is already connected, register immediately\n        console.log(`✅ Registering listener immediately for: ${event}`);\n        this.socket.on(event, callback);\n      } else {\n        // Socket not connected yet, queue the listener\n        console.log(`⏳ Queuing listener for: ${event}`);\n        this.pendingListeners.push({\n          event,\n          callback\n        });\n      }\n    }\n    off(event, callback) {\n      if (this.socket) {\n        this.socket.off(event, callback);\n      }\n      // Also remove from pending listeners\n      this.pendingListeners = this.pendingListeners.filter(listener => listener.event !== event || callback && listener.callback !== callback);\n    }\n    addConnectionListener(callback) {\n      this.connectionListeners.push(callback);\n    }\n    removeConnectionListener(callback) {\n      this.connectionListeners = this.connectionListeners.filter(listener => listener !== callback);\n    }\n    notifyConnectionListeners(isConnected) {\n      this.connectionListeners.forEach(callback => {\n        callback(isConnected);\n      });\n    }\n  }\n  var _default = new SocketService();\n});","lineCount":125,"map":[[12,2,120,0,"Object"],[12,8,120,0],[12,9,120,0,"defineProperty"],[12,23,120,0],[12,24,120,0,"exports"],[12,31,120,0],[13,4,120,0,"enumerable"],[13,14,120,0],[14,4,120,0,"get"],[14,7,120,0],[14,18,120,0,"get"],[14,19,120,0],[15,6,120,0],[15,13,120,0,"_default"],[15,21,120,0],[16,4,120,0],[17,2,120,0],[18,2,1,0],[18,6,1,0,"_socketIoClient"],[18,21,1,0],[18,24,1,0,"require"],[18,31,1,0],[18,32,1,0,"_dependencyMap"],[18,46,1,0],[19,2,3,0],[19,6,3,0,"_expoConstants"],[19,20,3,0],[19,23,3,0,"require"],[19,30,3,0],[19,31,3,0,"_dependencyMap"],[19,45,3,0],[20,2,3,0],[20,6,3,0,"Constants"],[20,15,3,0],[20,18,3,0,"_interopDefault"],[20,33,3,0],[20,34,3,0,"_expoConstants"],[20,48,3,0],[21,2,5,0],[21,8,5,6,"API_URL"],[21,15,5,13],[21,18,5,16,"Constants"],[21,27,5,25],[21,28,5,25,"default"],[21,35,5,25],[21,36,5,26,"expoConfig"],[21,46,5,36],[21,48,5,38,"extra"],[21,53,5,43],[21,55,5,45,"EXPO_PUBLIC_BACKEND_URL"],[21,78,5,68],[21,82,5,72,"process"],[21,89,5,79],[21,90,5,80,"env"],[21,93,5,83],[21,94,5,84,"EXPO_PUBLIC_BACKEND_URL"],[21,117,5,107],[21,121,5,111],[21,144,5,134],[22,2,7,0],[22,8,7,6,"SocketService"],[22,21,7,19],[22,22,7,20],[23,4,8,2,"socket"],[23,10,8,8],[23,13,8,26],[23,17,8,30],[24,4,9,2,"isConnected"],[24,15,9,13],[24,18,9,25],[24,23,9,30],[25,4,10,2,"connectionListeners"],[25,23,10,21],[25,26,10,60],[25,28,10,62],[26,4,11,2,"pendingListeners"],[26,20,11,18],[26,23,11,73],[26,25,11,75],[27,4,13,2],[27,10,13,8,"connect"],[27,17,13,15,"connect"],[27,18,13,15],[27,20,13,18],[28,6,14,4],[28,10,14,8],[29,8,15,6,"console"],[29,15,15,13],[29,16,15,14,"log"],[29,19,15,17],[29,20,15,18],[29,56,15,54],[29,58,15,56,"API_URL"],[29,65,15,63],[29,66,15,64],[31,8,17,6],[32,8,18,6],[33,8,19,6],[33,12,19,10],[33,13,19,11,"socket"],[33,19,19,17],[33,22,19,20],[33,26,19,20,"io"],[33,41,19,22],[33,42,19,22,"io"],[33,44,19,22],[33,46,19,23,"API_URL"],[33,53,19,30],[33,55,19,32],[34,10,20,8,"path"],[34,14,20,12],[34,16,20,14],[34,33,20,31],[35,10,21,8,"transports"],[35,20,21,18],[35,22,21,20],[35,23,21,21],[35,32,21,30],[35,33,21,31],[36,10,21,33],[37,10,22,8,"reconnection"],[37,22,22,20],[37,24,22,22],[37,28,22,26],[38,10,23,8,"reconnectionDelay"],[38,27,23,25],[38,29,23,27],[38,33,23,31],[39,10,24,8,"reconnectionAttempts"],[39,30,24,28],[39,32,24,30],[39,33,24,31],[40,10,25,8,"timeout"],[40,17,25,15],[40,19,25,17],[41,8,26,6],[41,9,26,7],[41,10,26,8],[42,8,28,6],[42,12,28,10],[42,13,28,11,"socket"],[42,19,28,17],[42,20,28,18,"on"],[42,22,28,20],[42,23,28,21],[42,32,28,30],[42,34,28,32],[42,40,28,38],[43,10,29,8,"console"],[43,17,29,15],[43,18,29,16,"log"],[43,21,29,19],[43,22,29,20],[43,43,29,41],[43,45,29,43],[43,49,29,47],[43,50,29,48,"socket"],[43,56,29,54],[43,58,29,56,"id"],[43,60,29,58],[43,61,29,59],[44,10,30,8],[44,14,30,12],[44,15,30,13,"isConnected"],[44,26,30,24],[44,29,30,27],[44,33,30,31],[45,10,31,8],[45,14,31,12],[45,15,31,13,"notifyConnectionListeners"],[45,40,31,38],[45,41,31,39],[45,45,31,43],[45,46,31,44],[47,10,33,8],[48,10,34,8,"console"],[48,17,34,15],[48,18,34,16,"log"],[48,21,34,19],[48,22,34,20],[48,40,34,38],[48,44,34,42],[48,45,34,43,"pendingListeners"],[48,61,34,59],[48,62,34,60,"length"],[48,68,34,66],[48,88,34,86],[48,89,34,87],[49,10,35,8],[49,14,35,12],[49,15,35,13,"pendingListeners"],[49,31,35,29],[49,32,35,30,"forEach"],[49,39,35,37],[49,40,35,38],[49,41,35,39],[50,12,35,41,"event"],[50,17,35,46],[51,12,35,48,"callback"],[52,10,35,57],[52,11,35,58],[52,16,35,63],[53,12,36,10],[53,16,36,14],[53,20,36,18],[53,21,36,19,"socket"],[53,27,36,25],[53,29,36,27],[54,14,37,12],[54,18,37,16],[54,19,37,17,"socket"],[54,25,37,23],[54,26,37,24,"on"],[54,28,37,26],[54,29,37,27,"event"],[54,34,37,32],[54,36,37,34,"callback"],[54,44,37,42],[54,45,37,43],[55,14,38,12,"console"],[55,21,38,19],[55,22,38,20,"log"],[55,25,38,23],[55,26,38,24],[55,56,38,54,"event"],[55,61,38,59],[55,63,38,61],[55,64,38,62],[56,12,39,10],[57,10,40,8],[57,11,40,9],[57,12,40,10],[58,10,41,8],[58,14,41,12],[58,15,41,13,"pendingListeners"],[58,31,41,29],[58,34,41,32],[58,36,41,34],[59,8,42,6],[59,9,42,7],[59,10,42,8],[60,8,44,6],[60,12,44,10],[60,13,44,11,"socket"],[60,19,44,17],[60,20,44,18,"on"],[60,22,44,20],[60,23,44,21],[60,35,44,33],[60,37,44,36,"reason"],[60,43,44,50],[60,47,44,55],[61,10,45,8,"console"],[61,17,45,15],[61,18,45,16,"log"],[61,21,45,19],[61,22,45,20],[61,46,45,44],[61,48,45,46,"reason"],[61,54,45,52],[61,55,45,53],[62,10,46,8],[62,14,46,12],[62,15,46,13,"isConnected"],[62,26,46,24],[62,29,46,27],[62,34,46,32],[63,10,47,8],[63,14,47,12],[63,15,47,13,"notifyConnectionListeners"],[63,40,47,38],[63,41,47,39],[63,46,47,44],[63,47,47,45],[64,8,48,6],[64,9,48,7],[64,10,48,8],[65,8,50,6],[65,12,50,10],[65,13,50,11,"socket"],[65,19,50,17],[65,20,50,18,"on"],[65,22,50,20],[65,23,50,21],[65,38,50,36],[65,40,50,39,"error"],[65,45,50,51],[65,49,50,56],[66,10,51,8,"console"],[66,17,51,15],[66,18,51,16,"error"],[66,23,51,21],[66,24,51,22],[66,45,51,43],[66,47,51,45,"error"],[66,52,51,50],[66,53,51,51,"message"],[66,60,51,58],[66,61,51,59],[67,10,52,8],[67,14,52,12],[67,15,52,13,"isConnected"],[67,26,52,24],[67,29,52,27],[67,34,52,32],[68,10,53,8],[68,14,53,12],[68,15,53,13,"notifyConnectionListeners"],[68,40,53,38],[68,41,53,39],[68,46,53,44],[68,47,53,45],[69,8,54,6],[69,9,54,7],[69,10,54,8],[70,8,56,6],[70,15,56,13],[70,19,56,17],[71,6,58,4],[71,7,58,5],[71,8,58,6],[71,15,58,13,"error"],[71,20,58,18],[71,22,58,20],[72,8,59,6,"console"],[72,15,59,13],[72,16,59,14,"error"],[72,21,59,19],[72,22,59,20],[72,48,59,46],[72,50,59,48,"error"],[72,55,59,53],[72,56,59,54],[73,8,60,6],[73,15,60,13],[73,20,60,18],[74,6,61,4],[75,4,62,2],[76,4,64,2,"disconnect"],[76,14,64,12,"disconnect"],[76,15,64,12],[76,17,64,15],[77,6,65,4],[77,10,65,8],[77,14,65,12],[77,15,65,13,"socket"],[77,21,65,19],[77,23,65,21],[78,8,66,6],[78,12,66,10],[78,13,66,11,"socket"],[78,19,66,17],[78,20,66,18,"disconnect"],[78,30,66,28],[78,31,66,29],[78,32,66,30],[79,8,67,6],[79,12,67,10],[79,13,67,11,"socket"],[79,19,67,17],[79,22,67,20],[79,26,67,24],[80,8,68,6],[80,12,68,10],[80,13,68,11,"isConnected"],[80,24,68,22],[80,27,68,25],[80,32,68,30],[81,6,69,4],[82,4,70,2],[83,4,72,2,"emit"],[83,8,72,6,"emit"],[83,9,72,7,"event"],[83,14,72,20],[83,16,72,22,"data"],[83,20,72,31],[83,22,72,33],[84,6,73,4],[84,10,73,8],[84,14,73,12],[84,15,73,13,"socket"],[84,21,73,19],[84,25,73,23],[84,29,73,27],[84,30,73,28,"isConnected"],[84,41,73,39],[84,43,73,41],[85,8,74,6,"console"],[85,15,74,13],[85,16,74,14,"log"],[85,19,74,17],[85,20,74,18],[85,36,74,34,"event"],[85,41,74,39],[85,43,74,41],[85,45,74,43,"data"],[85,49,74,47],[85,50,74,48],[86,8,75,6],[86,12,75,10],[86,13,75,11,"socket"],[86,19,75,17],[86,20,75,18,"emit"],[86,24,75,22],[86,25,75,23,"event"],[86,30,75,28],[86,32,75,30,"data"],[86,36,75,34],[86,37,75,35],[87,6,76,4],[87,7,76,5],[87,13,76,11],[88,8,77,6,"console"],[88,15,77,13],[88,16,77,14,"warn"],[88,20,77,18],[88,21,77,19],[88,60,77,58],[88,62,77,60,"event"],[88,67,77,65],[88,68,77,66],[89,6,78,4],[90,4,79,2],[91,4,81,2,"on"],[91,6,81,4,"on"],[91,7,81,5,"event"],[91,12,81,18],[91,14,81,20,"callback"],[91,22,81,49],[91,24,81,51],[92,6,82,4],[92,10,82,8],[92,14,82,12],[92,15,82,13,"socket"],[92,21,82,19],[92,25,82,23],[92,29,82,27],[92,30,82,28,"isConnected"],[92,41,82,39],[92,43,82,41],[93,8,83,6],[94,8,84,6,"console"],[94,15,84,13],[94,16,84,14,"log"],[94,19,84,17],[94,20,84,18],[94,63,84,61,"event"],[94,68,84,66],[94,70,84,68],[94,71,84,69],[95,8,85,6],[95,12,85,10],[95,13,85,11,"socket"],[95,19,85,17],[95,20,85,18,"on"],[95,22,85,20],[95,23,85,21,"event"],[95,28,85,26],[95,30,85,28,"callback"],[95,38,85,36],[95,39,85,37],[96,6,86,4],[96,7,86,5],[96,13,86,11],[97,8,87,6],[98,8,88,6,"console"],[98,15,88,13],[98,16,88,14,"log"],[98,19,88,17],[98,20,88,18],[98,47,88,45,"event"],[98,52,88,50],[98,54,88,52],[98,55,88,53],[99,8,89,6],[99,12,89,10],[99,13,89,11,"pendingListeners"],[99,29,89,27],[99,30,89,28,"push"],[99,34,89,32],[99,35,89,33],[100,10,89,35,"event"],[100,15,89,40],[101,10,89,42,"callback"],[102,8,89,51],[102,9,89,52],[102,10,89,53],[103,6,90,4],[104,4,91,2],[105,4,93,2,"off"],[105,7,93,5,"off"],[105,8,93,6,"event"],[105,13,93,19],[105,15,93,21,"callback"],[105,23,93,51],[105,25,93,53],[106,6,94,4],[106,10,94,8],[106,14,94,12],[106,15,94,13,"socket"],[106,21,94,19],[106,23,94,21],[107,8,95,6],[107,12,95,10],[107,13,95,11,"socket"],[107,19,95,17],[107,20,95,18,"off"],[107,23,95,21],[107,24,95,22,"event"],[107,29,95,27],[107,31,95,29,"callback"],[107,39,95,37],[107,40,95,38],[108,6,96,4],[109,6,97,4],[110,6,98,4],[110,10,98,8],[110,11,98,9,"pendingListeners"],[110,27,98,25],[110,30,98,28],[110,34,98,32],[110,35,98,33,"pendingListeners"],[110,51,98,49],[110,52,98,50,"filter"],[110,58,98,56],[110,59,99,6,"listener"],[110,67,99,14],[110,71,99,18,"listener"],[110,79,99,26],[110,80,99,27,"event"],[110,85,99,32],[110,90,99,37,"event"],[110,95,99,42],[110,99,99,47,"callback"],[110,107,99,55],[110,111,99,59,"listener"],[110,119,99,67],[110,120,99,68,"callback"],[110,128,99,76],[110,133,99,81,"callback"],[110,141,100,4],[110,142,100,5],[111,4,101,2],[112,4,103,2,"addConnectionListener"],[112,25,103,23,"addConnectionListener"],[112,26,103,24,"callback"],[112,34,103,64],[112,36,103,66],[113,6,104,4],[113,10,104,8],[113,11,104,9,"connectionListeners"],[113,30,104,28],[113,31,104,29,"push"],[113,35,104,33],[113,36,104,34,"callback"],[113,44,104,42],[113,45,104,43],[114,4,105,2],[115,4,107,2,"removeConnectionListener"],[115,28,107,26,"removeConnectionListener"],[115,29,107,27,"callback"],[115,37,107,67],[115,39,107,69],[116,6,108,4],[116,10,108,8],[116,11,108,9,"connectionListeners"],[116,30,108,28],[116,33,108,31],[116,37,108,35],[116,38,108,36,"connectionListeners"],[116,57,108,55],[116,58,108,56,"filter"],[116,64,108,62],[116,65,109,6,"listener"],[116,73,109,14],[116,77,109,18,"listener"],[116,85,109,26],[116,90,109,31,"callback"],[116,98,110,4],[116,99,110,5],[117,4,111,2],[118,4,113,2,"notifyConnectionListeners"],[118,29,113,27,"notifyConnectionListeners"],[118,30,113,28,"isConnected"],[118,41,113,48],[118,43,113,50],[119,6,114,4],[119,10,114,8],[119,11,114,9,"connectionListeners"],[119,30,114,28],[119,31,114,29,"forEach"],[119,38,114,36],[119,39,114,37,"callback"],[119,47,114,45],[119,51,114,49],[120,8,115,6,"callback"],[120,16,115,14],[120,17,115,15,"isConnected"],[120,28,115,26],[120,29,115,27],[121,6,116,4],[121,7,116,5],[121,8,116,6],[122,4,117,2],[123,2,118,0],[124,2,120,0],[124,6,120,0,"_default"],[124,14,120,0],[124,17,120,15],[124,21,120,19,"SocketService"],[124,34,120,32],[124,35,120,33],[124,36,120,34],[125,0,120,35],[125,3]],"functionMap":{"names":["<global>","SocketService","SocketService#connect","on$argument_1","pendingListeners.forEach$argument_0","SocketService#disconnect","SocketService#emit","SocketService#on","SocketService#off","pendingListeners.filter$argument_0","SocketService#addConnectionListener","SocketService#removeConnectionListener","connectionListeners.filter$argument_0","SocketService#notifyConnectionListeners","connectionListeners.forEach$argument_0"],"mappings":"AAA;ACM;ECM;gCCe;sCCO;SDK;ODE;mCCE;ODI;sCCE;ODI;GDQ;EIE;GJM;EKE;GLO;EME;GNU;EOE;MCM,oFD;GPE;ESE;GTE;EUE;MCE,iCD;GVE;EYE;qCCC;KDE;GZC;CDC"},"hasCjsExports":false},"type":"js/module"}]}