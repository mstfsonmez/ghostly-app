{"dependencies":[{"name":"engine.io-client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":41,"index":41}}],"key":"47uBFHNKf+pJCWjWFCflLVQYGvc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.url = url;\n  var _engineIoClient = require(_dependencyMap[0], \"engine.io-client\");\n  /**\n   * URL parser.\n   *\n   * @param uri - url\n   * @param path - the request path of the connection\n   * @param loc - An object meant to mimic window.location.\n   *        Defaults to window.location.\n   * @public\n   */\n  function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || typeof location !== \"undefined\" && location;\n    if (null == uri) uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n      if (\"/\" === uri.charAt(0)) {\n        if (\"/\" === uri.charAt(1)) {\n          uri = loc.protocol + uri;\n        } else {\n          uri = loc.host + uri;\n        }\n      }\n      if (!/^(https?|wss?):\\/\\//.test(uri)) {\n        if (\"undefined\" !== typeof loc) {\n          uri = loc.protocol + \"//\" + uri;\n        } else {\n          uri = \"https://\" + uri;\n        }\n      }\n      // parse\n      obj = (0, _engineIoClient.parse)(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n      if (/^(http|ws)$/.test(obj.protocol)) {\n        obj.port = \"80\";\n      } else if (/^(http|ws)s$/.test(obj.protocol)) {\n        obj.port = \"443\";\n      }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href = obj.protocol + \"://\" + host + (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n  }\n});","lineCount":59,"map":[[7,2,11,0,"exports"],[7,9,11,0],[7,10,11,0,"url"],[7,13,11,0],[7,16,11,0,"url"],[7,19,11,0],[8,2,1,0],[8,6,1,0,"_engineIoClient"],[8,21,1,0],[8,24,1,0,"require"],[8,31,1,0],[8,32,1,0,"_dependencyMap"],[8,46,1,0],[9,2,2,0],[10,0,3,0],[11,0,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[18,2,11,7],[18,11,11,16,"url"],[18,14,11,19,"url"],[18,15,11,20,"uri"],[18,18,11,23],[18,20,11,25,"path"],[18,24,11,29],[18,27,11,32],[18,29,11,34],[18,31,11,36,"loc"],[18,34,11,39],[18,36,11,41],[19,4,12,4],[19,8,12,8,"obj"],[19,11,12,11],[19,14,12,14,"uri"],[19,17,12,17],[20,4,13,4],[21,4,14,4,"loc"],[21,7,14,7],[21,10,14,10,"loc"],[21,13,14,13],[21,17,14,18],[21,24,14,25,"location"],[21,32,14,33],[21,37,14,38],[21,48,14,49],[21,52,14,53,"location"],[21,60,14,62],[22,4,15,4],[22,8,15,8],[22,12,15,12],[22,16,15,16,"uri"],[22,19,15,19],[22,21,16,8,"uri"],[22,24,16,11],[22,27,16,14,"loc"],[22,30,16,17],[22,31,16,18,"protocol"],[22,39,16,26],[22,42,16,29],[22,46,16,33],[22,49,16,36,"loc"],[22,52,16,39],[22,53,16,40,"host"],[22,57,16,44],[23,4,17,4],[24,4,18,4],[24,8,18,8],[24,15,18,15,"uri"],[24,18,18,18],[24,23,18,23],[24,31,18,31],[24,33,18,33],[25,6,19,8],[25,10,19,12],[25,13,19,15],[25,18,19,20,"uri"],[25,21,19,23],[25,22,19,24,"charAt"],[25,28,19,30],[25,29,19,31],[25,30,19,32],[25,31,19,33],[25,33,19,35],[26,8,20,12],[26,12,20,16],[26,15,20,19],[26,20,20,24,"uri"],[26,23,20,27],[26,24,20,28,"charAt"],[26,30,20,34],[26,31,20,35],[26,32,20,36],[26,33,20,37],[26,35,20,39],[27,10,21,16,"uri"],[27,13,21,19],[27,16,21,22,"loc"],[27,19,21,25],[27,20,21,26,"protocol"],[27,28,21,34],[27,31,21,37,"uri"],[27,34,21,40],[28,8,22,12],[28,9,22,13],[28,15,23,17],[29,10,24,16,"uri"],[29,13,24,19],[29,16,24,22,"loc"],[29,19,24,25],[29,20,24,26,"host"],[29,24,24,30],[29,27,24,33,"uri"],[29,30,24,36],[30,8,25,12],[31,6,26,8],[32,6,27,8],[32,10,27,12],[32,11,27,13],[32,32,27,34],[32,33,27,35,"test"],[32,37,27,39],[32,38,27,40,"uri"],[32,41,27,43],[32,42,27,44],[32,44,27,46],[33,8,28,12],[33,12,28,16],[33,23,28,27],[33,28,28,32],[33,35,28,39,"loc"],[33,38,28,42],[33,40,28,44],[34,10,29,16,"uri"],[34,13,29,19],[34,16,29,22,"loc"],[34,19,29,25],[34,20,29,26,"protocol"],[34,28,29,34],[34,31,29,37],[34,35,29,41],[34,38,29,44,"uri"],[34,41,29,47],[35,8,30,12],[35,9,30,13],[35,15,31,17],[36,10,32,16,"uri"],[36,13,32,19],[36,16,32,22],[36,26,32,32],[36,29,32,35,"uri"],[36,32,32,38],[37,8,33,12],[38,6,34,8],[39,6,35,8],[40,6,36,8,"obj"],[40,9,36,11],[40,12,36,14],[40,16,36,14,"parse"],[40,31,36,19],[40,32,36,19,"parse"],[40,37,36,19],[40,39,36,20,"uri"],[40,42,36,23],[40,43,36,24],[41,4,37,4],[42,4,38,4],[43,4,39,4],[43,8,39,8],[43,9,39,9,"obj"],[43,12,39,12],[43,13,39,13,"port"],[43,17,39,17],[43,19,39,19],[44,6,40,8],[44,10,40,12],[44,23,40,25],[44,24,40,26,"test"],[44,28,40,30],[44,29,40,31,"obj"],[44,32,40,34],[44,33,40,35,"protocol"],[44,41,40,43],[44,42,40,44],[44,44,40,46],[45,8,41,12,"obj"],[45,11,41,15],[45,12,41,16,"port"],[45,16,41,20],[45,19,41,23],[45,23,41,27],[46,6,42,8],[46,7,42,9],[46,13,43,13],[46,17,43,17],[46,31,43,31],[46,32,43,32,"test"],[46,36,43,36],[46,37,43,37,"obj"],[46,40,43,40],[46,41,43,41,"protocol"],[46,49,43,49],[46,50,43,50],[46,52,43,52],[47,8,44,12,"obj"],[47,11,44,15],[47,12,44,16,"port"],[47,16,44,20],[47,19,44,23],[47,24,44,28],[48,6,45,8],[49,4,46,4],[50,4,47,4,"obj"],[50,7,47,7],[50,8,47,8,"path"],[50,12,47,12],[50,15,47,15,"obj"],[50,18,47,18],[50,19,47,19,"path"],[50,23,47,23],[50,27,47,27],[50,30,47,30],[51,4,48,4],[51,10,48,10,"ipv6"],[51,14,48,14],[51,17,48,17,"obj"],[51,20,48,20],[51,21,48,21,"host"],[51,25,48,25],[51,26,48,26,"indexOf"],[51,33,48,33],[51,34,48,34],[51,37,48,37],[51,38,48,38],[51,43,48,43],[51,44,48,44],[51,45,48,45],[52,4,49,4],[52,10,49,10,"host"],[52,14,49,14],[52,17,49,17,"ipv6"],[52,21,49,21],[52,24,49,24],[52,27,49,27],[52,30,49,30,"obj"],[52,33,49,33],[52,34,49,34,"host"],[52,38,49,38],[52,41,49,41],[52,44,49,44],[52,47,49,47,"obj"],[52,50,49,50],[52,51,49,51,"host"],[52,55,49,55],[53,4,50,4],[54,4,51,4,"obj"],[54,7,51,7],[54,8,51,8,"id"],[54,10,51,10],[54,13,51,13,"obj"],[54,16,51,16],[54,17,51,17,"protocol"],[54,25,51,25],[54,28,51,28],[54,33,51,33],[54,36,51,36,"host"],[54,40,51,40],[54,43,51,43],[54,46,51,46],[54,49,51,49,"obj"],[54,52,51,52],[54,53,51,53,"port"],[54,57,51,57],[54,60,51,60,"path"],[54,64,51,64],[55,4,52,4],[56,4,53,4,"obj"],[56,7,53,7],[56,8,53,8,"href"],[56,12,53,12],[56,15,54,8,"obj"],[56,18,54,11],[56,19,54,12,"protocol"],[56,27,54,20],[56,30,55,12],[56,35,55,17],[56,38,56,12,"host"],[56,42,56,16],[56,46,57,13,"loc"],[56,49,57,16],[56,53,57,20,"loc"],[56,56,57,23],[56,57,57,24,"port"],[56,61,57,28],[56,66,57,33,"obj"],[56,69,57,36],[56,70,57,37,"port"],[56,74,57,41],[56,77,57,44],[56,79,57,46],[56,82,57,49],[56,85,57,52],[56,88,57,55,"obj"],[56,91,57,58],[56,92,57,59,"port"],[56,96,57,63],[56,97,57,64],[57,4,58,4],[57,11,58,11,"obj"],[57,14,58,14],[58,2,59,0],[59,0,59,1],[59,3]],"functionMap":{"names":["<global>","url"],"mappings":"AAA;OCU;CDgD"},"hasCjsExports":false},"type":"js/module"}]}