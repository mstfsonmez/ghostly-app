{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.Emitter = Emitter;\n  /**\n   * Initialize a new `Emitter`.\n   *\n   * @api public\n   */\n\n  function Emitter(obj) {\n    if (obj) return mixin(obj);\n  }\n\n  /**\n   * Mixin the emitter properties.\n   *\n   * @param {Object} obj\n   * @return {Object}\n   * @api private\n   */\n\n  function mixin(obj) {\n    for (var key in Emitter.prototype) {\n      obj[key] = Emitter.prototype[key];\n    }\n    return obj;\n  }\n\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   * @return {Emitter}\n   * @api public\n   */\n\n  Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n    this._callbacks = this._callbacks || {};\n    (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   * @return {Emitter}\n   * @api public\n   */\n\n  Emitter.prototype.once = function (event, fn) {\n    function on() {\n      this.off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   * @return {Emitter}\n   * @api public\n   */\n\n  Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n    this._callbacks = this._callbacks || {};\n\n    // all\n    if (0 == arguments.length) {\n      this._callbacks = {};\n      return this;\n    }\n\n    // specific event\n    var callbacks = this._callbacks['$' + event];\n    if (!callbacks) return this;\n\n    // remove all handlers\n    if (1 == arguments.length) {\n      delete this._callbacks['$' + event];\n      return this;\n    }\n\n    // remove specific handler\n    var cb;\n    for (var i = 0; i < callbacks.length; i++) {\n      cb = callbacks[i];\n      if (cb === fn || cb.fn === fn) {\n        callbacks.splice(i, 1);\n        break;\n      }\n    }\n\n    // Remove event specific arrays for event types that no\n    // one is subscribed for to avoid memory leak.\n    if (callbacks.length === 0) {\n      delete this._callbacks['$' + event];\n    }\n    return this;\n  };\n\n  /**\n   * Emit `event` with the given args.\n   *\n   * @param {String} event\n   * @param {Mixed} ...\n   * @return {Emitter}\n   */\n\n  Emitter.prototype.emit = function (event) {\n    this._callbacks = this._callbacks || {};\n    var args = new Array(arguments.length - 1),\n      callbacks = this._callbacks['$' + event];\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n    if (callbacks) {\n      callbacks = callbacks.slice(0);\n      for (var i = 0, len = callbacks.length; i < len; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n    return this;\n  };\n\n  // alias used for reserved events (protected method)\n  Emitter.prototype.emitReserved = Emitter.prototype.emit;\n\n  /**\n   * Return array of callbacks for `event`.\n   *\n   * @param {String} event\n   * @return {Array}\n   * @api public\n   */\n\n  Emitter.prototype.listeners = function (event) {\n    this._callbacks = this._callbacks || {};\n    return this._callbacks['$' + event] || [];\n  };\n\n  /**\n   * Check if this emitter has `event` handlers.\n   *\n   * @param {String} event\n   * @return {Boolean}\n   * @api public\n   */\n\n  Emitter.prototype.hasListeners = function (event) {\n    return !!this.listeners(event).length;\n  };\n});","lineCount":166,"map":[[7,2,7,0,"exports"],[7,9,7,0],[7,10,7,0,"Emitter"],[7,17,7,0],[7,20,7,0,"Emitter"],[7,27,7,0],[8,2,1,0],[9,0,2,0],[10,0,3,0],[11,0,4,0],[12,0,5,0],[14,2,7,7],[14,11,7,16,"Emitter"],[14,18,7,23,"Emitter"],[14,19,7,24,"obj"],[14,22,7,27],[14,24,7,29],[15,4,8,2],[15,8,8,6,"obj"],[15,11,8,9],[15,13,8,11],[15,20,8,18,"mixin"],[15,25,8,23],[15,26,8,24,"obj"],[15,29,8,27],[15,30,8,28],[16,2,9,0],[18,2,11,0],[19,0,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[23,0,16,0],[24,0,17,0],[26,2,19,0],[26,11,19,9,"mixin"],[26,16,19,14,"mixin"],[26,17,19,15,"obj"],[26,20,19,18],[26,22,19,20],[27,4,20,2],[27,9,20,7],[27,13,20,11,"key"],[27,16,20,14],[27,20,20,18,"Emitter"],[27,27,20,25],[27,28,20,26,"prototype"],[27,37,20,35],[27,39,20,37],[28,6,21,4,"obj"],[28,9,21,7],[28,10,21,8,"key"],[28,13,21,11],[28,14,21,12],[28,17,21,15,"Emitter"],[28,24,21,22],[28,25,21,23,"prototype"],[28,34,21,32],[28,35,21,33,"key"],[28,38,21,36],[28,39,21,37],[29,4,22,2],[30,4,23,2],[30,11,23,9,"obj"],[30,14,23,12],[31,2,24,0],[33,2,26,0],[34,0,27,0],[35,0,28,0],[36,0,29,0],[37,0,30,0],[38,0,31,0],[39,0,32,0],[40,0,33,0],[42,2,35,0,"Emitter"],[42,9,35,7],[42,10,35,8,"prototype"],[42,19,35,17],[42,20,35,18,"on"],[42,22,35,20],[42,25,36,0,"Emitter"],[42,32,36,7],[42,33,36,8,"prototype"],[42,42,36,17],[42,43,36,18,"addEventListener"],[42,59,36,34],[42,62,36,37],[42,72,36,46,"event"],[42,77,36,51],[42,79,36,53,"fn"],[42,81,36,55],[42,83,36,56],[43,4,37,2],[43,8,37,6],[43,9,37,7,"_callbacks"],[43,19,37,17],[43,22,37,20],[43,26,37,24],[43,27,37,25,"_callbacks"],[43,37,37,35],[43,41,37,39],[43,42,37,40],[43,43,37,41],[44,4,38,2],[44,5,38,3],[44,9,38,7],[44,10,38,8,"_callbacks"],[44,20,38,18],[44,21,38,19],[44,24,38,22],[44,27,38,25,"event"],[44,32,38,30],[44,33,38,31],[44,36,38,34],[44,40,38,38],[44,41,38,39,"_callbacks"],[44,51,38,49],[44,52,38,50],[44,55,38,53],[44,58,38,56,"event"],[44,63,38,61],[44,64,38,62],[44,68,38,66],[44,70,38,68],[44,72,39,5,"push"],[44,76,39,9],[44,77,39,10,"fn"],[44,79,39,12],[44,80,39,13],[45,4,40,2],[45,11,40,9],[45,15,40,13],[46,2,41,0],[46,3,41,1],[48,2,43,0],[49,0,44,0],[50,0,45,0],[51,0,46,0],[52,0,47,0],[53,0,48,0],[54,0,49,0],[55,0,50,0],[56,0,51,0],[58,2,53,0,"Emitter"],[58,9,53,7],[58,10,53,8,"prototype"],[58,19,53,17],[58,20,53,18,"once"],[58,24,53,22],[58,27,53,25],[58,37,53,34,"event"],[58,42,53,39],[58,44,53,41,"fn"],[58,46,53,43],[58,48,53,44],[59,4,54,2],[59,13,54,11,"on"],[59,15,54,13,"on"],[59,16,54,13],[59,18,54,16],[60,6,55,4],[60,10,55,8],[60,11,55,9,"off"],[60,14,55,12],[60,15,55,13,"event"],[60,20,55,18],[60,22,55,20,"on"],[60,24,55,22],[60,25,55,23],[61,6,56,4,"fn"],[61,8,56,6],[61,9,56,7,"apply"],[61,14,56,12],[61,15,56,13],[61,19,56,17],[61,21,56,19,"arguments"],[61,30,56,28],[61,31,56,29],[62,4,57,2],[63,4,59,2,"on"],[63,6,59,4],[63,7,59,5,"fn"],[63,9,59,7],[63,12,59,10,"fn"],[63,14,59,12],[64,4,60,2],[64,8,60,6],[64,9,60,7,"on"],[64,11,60,9],[64,12,60,10,"event"],[64,17,60,15],[64,19,60,17,"on"],[64,21,60,19],[64,22,60,20],[65,4,61,2],[65,11,61,9],[65,15,61,13],[66,2,62,0],[66,3,62,1],[68,2,64,0],[69,0,65,0],[70,0,66,0],[71,0,67,0],[72,0,68,0],[73,0,69,0],[74,0,70,0],[75,0,71,0],[76,0,72,0],[78,2,74,0,"Emitter"],[78,9,74,7],[78,10,74,8,"prototype"],[78,19,74,17],[78,20,74,18,"off"],[78,23,74,21],[78,26,75,0,"Emitter"],[78,33,75,7],[78,34,75,8,"prototype"],[78,43,75,17],[78,44,75,18,"removeListener"],[78,58,75,32],[78,61,76,0,"Emitter"],[78,68,76,7],[78,69,76,8,"prototype"],[78,78,76,17],[78,79,76,18,"removeAllListeners"],[78,97,76,36],[78,100,77,0,"Emitter"],[78,107,77,7],[78,108,77,8,"prototype"],[78,117,77,17],[78,118,77,18,"removeEventListener"],[78,137,77,37],[78,140,77,40],[78,150,77,49,"event"],[78,155,77,54],[78,157,77,56,"fn"],[78,159,77,58],[78,161,77,59],[79,4,78,2],[79,8,78,6],[79,9,78,7,"_callbacks"],[79,19,78,17],[79,22,78,20],[79,26,78,24],[79,27,78,25,"_callbacks"],[79,37,78,35],[79,41,78,39],[79,42,78,40],[79,43,78,41],[81,4,80,2],[82,4,81,2],[82,8,81,6],[82,9,81,7],[82,13,81,11,"arguments"],[82,22,81,20],[82,23,81,21,"length"],[82,29,81,27],[82,31,81,29],[83,6,82,4],[83,10,82,8],[83,11,82,9,"_callbacks"],[83,21,82,19],[83,24,82,22],[83,25,82,23],[83,26,82,24],[84,6,83,4],[84,13,83,11],[84,17,83,15],[85,4,84,2],[87,4,86,2],[88,4,87,2],[88,8,87,6,"callbacks"],[88,17,87,15],[88,20,87,18],[88,24,87,22],[88,25,87,23,"_callbacks"],[88,35,87,33],[88,36,87,34],[88,39,87,37],[88,42,87,40,"event"],[88,47,87,45],[88,48,87,46],[89,4,88,2],[89,8,88,6],[89,9,88,7,"callbacks"],[89,18,88,16],[89,20,88,18],[89,27,88,25],[89,31,88,29],[91,4,90,2],[92,4,91,2],[92,8,91,6],[92,9,91,7],[92,13,91,11,"arguments"],[92,22,91,20],[92,23,91,21,"length"],[92,29,91,27],[92,31,91,29],[93,6,92,4],[93,13,92,11],[93,17,92,15],[93,18,92,16,"_callbacks"],[93,28,92,26],[93,29,92,27],[93,32,92,30],[93,35,92,33,"event"],[93,40,92,38],[93,41,92,39],[94,6,93,4],[94,13,93,11],[94,17,93,15],[95,4,94,2],[97,4,96,2],[98,4,97,2],[98,8,97,6,"cb"],[98,10,97,8],[99,4,98,2],[99,9,98,7],[99,13,98,11,"i"],[99,14,98,12],[99,17,98,15],[99,18,98,16],[99,20,98,18,"i"],[99,21,98,19],[99,24,98,22,"callbacks"],[99,33,98,31],[99,34,98,32,"length"],[99,40,98,38],[99,42,98,40,"i"],[99,43,98,41],[99,45,98,43],[99,47,98,45],[100,6,99,4,"cb"],[100,8,99,6],[100,11,99,9,"callbacks"],[100,20,99,18],[100,21,99,19,"i"],[100,22,99,20],[100,23,99,21],[101,6,100,4],[101,10,100,8,"cb"],[101,12,100,10],[101,17,100,15,"fn"],[101,19,100,17],[101,23,100,21,"cb"],[101,25,100,23],[101,26,100,24,"fn"],[101,28,100,26],[101,33,100,31,"fn"],[101,35,100,33],[101,37,100,35],[102,8,101,6,"callbacks"],[102,17,101,15],[102,18,101,16,"splice"],[102,24,101,22],[102,25,101,23,"i"],[102,26,101,24],[102,28,101,26],[102,29,101,27],[102,30,101,28],[103,8,102,6],[104,6,103,4],[105,4,104,2],[107,4,106,2],[108,4,107,2],[109,4,108,2],[109,8,108,6,"callbacks"],[109,17,108,15],[109,18,108,16,"length"],[109,24,108,22],[109,29,108,27],[109,30,108,28],[109,32,108,30],[110,6,109,4],[110,13,109,11],[110,17,109,15],[110,18,109,16,"_callbacks"],[110,28,109,26],[110,29,109,27],[110,32,109,30],[110,35,109,33,"event"],[110,40,109,38],[110,41,109,39],[111,4,110,2],[112,4,112,2],[112,11,112,9],[112,15,112,13],[113,2,113,0],[113,3,113,1],[115,2,115,0],[116,0,116,0],[117,0,117,0],[118,0,118,0],[119,0,119,0],[120,0,120,0],[121,0,121,0],[123,2,123,0,"Emitter"],[123,9,123,7],[123,10,123,8,"prototype"],[123,19,123,17],[123,20,123,18,"emit"],[123,24,123,22],[123,27,123,25],[123,37,123,34,"event"],[123,42,123,39],[123,44,123,40],[124,4,124,2],[124,8,124,6],[124,9,124,7,"_callbacks"],[124,19,124,17],[124,22,124,20],[124,26,124,24],[124,27,124,25,"_callbacks"],[124,37,124,35],[124,41,124,39],[124,42,124,40],[124,43,124,41],[125,4,126,2],[125,8,126,6,"args"],[125,12,126,10],[125,15,126,13],[125,19,126,17,"Array"],[125,24,126,22],[125,25,126,23,"arguments"],[125,34,126,32],[125,35,126,33,"length"],[125,41,126,39],[125,44,126,42],[125,45,126,43],[125,46,126,44],[126,6,127,6,"callbacks"],[126,15,127,15],[126,18,127,18],[126,22,127,22],[126,23,127,23,"_callbacks"],[126,33,127,33],[126,34,127,34],[126,37,127,37],[126,40,127,40,"event"],[126,45,127,45],[126,46,127,46],[127,4,129,2],[127,9,129,7],[127,13,129,11,"i"],[127,14,129,12],[127,17,129,15],[127,18,129,16],[127,20,129,18,"i"],[127,21,129,19],[127,24,129,22,"arguments"],[127,33,129,31],[127,34,129,32,"length"],[127,40,129,38],[127,42,129,40,"i"],[127,43,129,41],[127,45,129,43],[127,47,129,45],[128,6,130,4,"args"],[128,10,130,8],[128,11,130,9,"i"],[128,12,130,10],[128,15,130,13],[128,16,130,14],[128,17,130,15],[128,20,130,18,"arguments"],[128,29,130,27],[128,30,130,28,"i"],[128,31,130,29],[128,32,130,30],[129,4,131,2],[130,4,133,2],[130,8,133,6,"callbacks"],[130,17,133,15],[130,19,133,17],[131,6,134,4,"callbacks"],[131,15,134,13],[131,18,134,16,"callbacks"],[131,27,134,25],[131,28,134,26,"slice"],[131,33,134,31],[131,34,134,32],[131,35,134,33],[131,36,134,34],[132,6,135,4],[132,11,135,9],[132,15,135,13,"i"],[132,16,135,14],[132,19,135,17],[132,20,135,18],[132,22,135,20,"len"],[132,25,135,23],[132,28,135,26,"callbacks"],[132,37,135,35],[132,38,135,36,"length"],[132,44,135,42],[132,46,135,44,"i"],[132,47,135,45],[132,50,135,48,"len"],[132,53,135,51],[132,55,135,53],[132,57,135,55,"i"],[132,58,135,56],[132,60,135,58],[133,8,136,6,"callbacks"],[133,17,136,15],[133,18,136,16,"i"],[133,19,136,17],[133,20,136,18],[133,21,136,19,"apply"],[133,26,136,24],[133,27,136,25],[133,31,136,29],[133,33,136,31,"args"],[133,37,136,35],[133,38,136,36],[134,6,137,4],[135,4,138,2],[136,4,140,2],[136,11,140,9],[136,15,140,13],[137,2,141,0],[137,3,141,1],[139,2,143,0],[140,2,144,0,"Emitter"],[140,9,144,7],[140,10,144,8,"prototype"],[140,19,144,17],[140,20,144,18,"emitReserved"],[140,32,144,30],[140,35,144,33,"Emitter"],[140,42,144,40],[140,43,144,41,"prototype"],[140,52,144,50],[140,53,144,51,"emit"],[140,57,144,55],[142,2,146,0],[143,0,147,0],[144,0,148,0],[145,0,149,0],[146,0,150,0],[147,0,151,0],[148,0,152,0],[150,2,154,0,"Emitter"],[150,9,154,7],[150,10,154,8,"prototype"],[150,19,154,17],[150,20,154,18,"listeners"],[150,29,154,27],[150,32,154,30],[150,42,154,39,"event"],[150,47,154,44],[150,49,154,45],[151,4,155,2],[151,8,155,6],[151,9,155,7,"_callbacks"],[151,19,155,17],[151,22,155,20],[151,26,155,24],[151,27,155,25,"_callbacks"],[151,37,155,35],[151,41,155,39],[151,42,155,40],[151,43,155,41],[152,4,156,2],[152,11,156,9],[152,15,156,13],[152,16,156,14,"_callbacks"],[152,26,156,24],[152,27,156,25],[152,30,156,28],[152,33,156,31,"event"],[152,38,156,36],[152,39,156,37],[152,43,156,41],[152,45,156,43],[153,2,157,0],[153,3,157,1],[155,2,159,0],[156,0,160,0],[157,0,161,0],[158,0,162,0],[159,0,163,0],[160,0,164,0],[161,0,165,0],[163,2,167,0,"Emitter"],[163,9,167,7],[163,10,167,8,"prototype"],[163,19,167,17],[163,20,167,18,"hasListeners"],[163,32,167,30],[163,35,167,33],[163,45,167,42,"event"],[163,50,167,47],[163,52,167,48],[164,4,168,2],[164,11,168,9],[164,12,168,10],[164,13,168,12],[164,17,168,16],[164,18,168,17,"listeners"],[164,27,168,26],[164,28,168,27,"event"],[164,33,168,32],[164,34,168,33],[164,35,168,34,"length"],[164,41,168,40],[165,2,169,0],[165,3,169,1],[166,0,169,2],[166,3]],"functionMap":{"names":["<global>","Emitter","mixin","Emitter.prototype.addEventListener","Emitter.prototype.once","on","Emitter.prototype.removeEventListener","Emitter.prototype.emit","Emitter.prototype.listeners","Emitter.prototype.hasListeners"],"mappings":"AAA;OCM;CDE;AEU;CFK;qCGY;CHK;yBIY;ECC;GDG;CJK;wCMe;CNoC;yBOU;CPkB;8BQa;CRG;iCSU;CTE"},"hasCjsExports":false},"type":"js/module"}]}