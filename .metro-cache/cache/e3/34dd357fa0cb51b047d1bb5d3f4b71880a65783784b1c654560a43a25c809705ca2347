{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"socket.io-client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"LVgCyxgUdze/lYG0kA6DdCAztfM=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":47},"end":{"line":2,"column":69,"index":116}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":117},"end":{"line":3,"column":39,"index":156}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _socketIoClient = require(_dependencyMap[1], \"socket.io-client\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  const API_URL = Constants.default.expoConfig?.extra?.EXPO_PUBLIC_BACKEND_URL || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  class SocketService {\n    socket = null;\n    isConnected = false;\n    connectionListeners = [];\n    async connect() {\n      try {\n        const token = await AsyncStorage.default.getItem('auth_token');\n        if (!token) {\n          console.log('No auth token found');\n          return false;\n        }\n        this.socket = (0, _socketIoClient.io)(API_URL, {\n          path: '/socket.io/',\n          transports: ['websocket', 'polling'],\n          auth: {\n            token: token\n          },\n          reconnection: true,\n          reconnectionDelay: 1000,\n          reconnectionAttempts: 5,\n          timeout: 10000\n        });\n        this.socket.on('connect', () => {\n          console.log('Socket connected:', this.socket?.id);\n          this.isConnected = true;\n          this.notifyConnectionListeners(true);\n        });\n        this.socket.on('disconnect', reason => {\n          console.log('Socket disconnected:', reason);\n          this.isConnected = false;\n          this.notifyConnectionListeners(false);\n        });\n        this.socket.on('connect_error', error => {\n          console.error('Connection error:', error.message);\n          this.isConnected = false;\n          this.notifyConnectionListeners(false);\n        });\n        return true;\n      } catch (error) {\n        console.error('Socket connection error:', error);\n        return false;\n      }\n    }\n    disconnect() {\n      if (this.socket) {\n        this.socket.disconnect();\n        this.socket = null;\n        this.isConnected = false;\n      }\n    }\n    emit(event, data) {\n      if (this.socket && this.isConnected) {\n        this.socket.emit(event, data);\n      } else {\n        console.warn('Socket not connected, cannot emit:', event);\n      }\n    }\n    on(event, callback) {\n      if (this.socket) {\n        this.socket.on(event, callback);\n      }\n    }\n    off(event, callback) {\n      if (this.socket) {\n        this.socket.off(event, callback);\n      }\n    }\n    addConnectionListener(callback) {\n      this.connectionListeners.push(callback);\n    }\n    removeConnectionListener(callback) {\n      this.connectionListeners = this.connectionListeners.filter(listener => listener !== callback);\n    }\n    notifyConnectionListeners(isConnected) {\n      this.connectionListeners.forEach(callback => {\n        callback(isConnected);\n      });\n    }\n  }\n  var _default = new SocketService();\n});","lineCount":105,"map":[[12,2,104,0,"Object"],[12,8,104,0],[12,9,104,0,"defineProperty"],[12,23,104,0],[12,24,104,0,"exports"],[12,31,104,0],[13,4,104,0,"enumerable"],[13,14,104,0],[14,4,104,0,"get"],[14,7,104,0],[14,18,104,0,"get"],[14,19,104,0],[15,6,104,0],[15,13,104,0,"_default"],[15,21,104,0],[16,4,104,0],[17,2,104,0],[18,2,104,35],[18,6,104,35,"_expoVirtualEnv"],[18,21,104,35],[18,24,104,35,"require"],[18,31,104,35],[18,32,104,35,"_dependencyMap"],[18,46,104,35],[19,2,1,0],[19,6,1,0,"_socketIoClient"],[19,21,1,0],[19,24,1,0,"require"],[19,31,1,0],[19,32,1,0,"_dependencyMap"],[19,46,1,0],[20,2,2,0],[20,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[20,42,2,0],[20,45,2,0,"require"],[20,52,2,0],[20,53,2,0,"_dependencyMap"],[20,67,2,0],[21,2,2,0],[21,6,2,0,"AsyncStorage"],[21,18,2,0],[21,21,2,0,"_interopDefault"],[21,36,2,0],[21,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[21,73,2,0],[22,2,3,0],[22,6,3,0,"_expoConstants"],[22,20,3,0],[22,23,3,0,"require"],[22,30,3,0],[22,31,3,0,"_dependencyMap"],[22,45,3,0],[23,2,3,0],[23,6,3,0,"Constants"],[23,15,3,0],[23,18,3,0,"_interopDefault"],[23,33,3,0],[23,34,3,0,"_expoConstants"],[23,48,3,0],[24,2,5,0],[24,8,5,6,"API_URL"],[24,15,5,13],[24,18,5,16,"Constants"],[24,27,5,25],[24,28,5,25,"default"],[24,35,5,25],[24,36,5,26,"expoConfig"],[24,46,5,36],[24,48,5,38,"extra"],[24,53,5,43],[24,55,5,45,"EXPO_PUBLIC_BACKEND_URL"],[24,78,5,68],[24,82,5,68,"_expoVirtualEnv"],[24,97,5,68],[24,98,5,68,"env"],[24,101,5,68],[24,102,5,68,"EXPO_PUBLIC_BACKEND_URL"],[24,125,5,107],[24,129,5,111],[24,152,5,134],[25,2,7,0],[25,8,7,6,"SocketService"],[25,21,7,19],[25,22,7,20],[26,4,8,2,"socket"],[26,10,8,8],[26,13,8,26],[26,17,8,30],[27,4,9,2,"isConnected"],[27,15,9,13],[27,18,9,25],[27,23,9,30],[28,4,10,2,"connectionListeners"],[28,23,10,21],[28,26,10,60],[28,28,10,62],[29,4,12,2],[29,10,12,8,"connect"],[29,17,12,15,"connect"],[29,18,12,15],[29,20,12,18],[30,6,13,4],[30,10,13,8],[31,8,14,6],[31,14,14,12,"token"],[31,19,14,17],[31,22,14,20],[31,28,14,26,"AsyncStorage"],[31,40,14,38],[31,41,14,38,"default"],[31,48,14,38],[31,49,14,39,"getItem"],[31,56,14,46],[31,57,14,47],[31,69,14,59],[31,70,14,60],[32,8,16,6],[32,12,16,10],[32,13,16,11,"token"],[32,18,16,16],[32,20,16,18],[33,10,17,8,"console"],[33,17,17,15],[33,18,17,16,"log"],[33,21,17,19],[33,22,17,20],[33,43,17,41],[33,44,17,42],[34,10,18,8],[34,17,18,15],[34,22,18,20],[35,8,19,6],[36,8,21,6],[36,12,21,10],[36,13,21,11,"socket"],[36,19,21,17],[36,22,21,20],[36,26,21,20,"io"],[36,41,21,22],[36,42,21,22,"io"],[36,44,21,22],[36,46,21,23,"API_URL"],[36,53,21,30],[36,55,21,32],[37,10,22,8,"path"],[37,14,22,12],[37,16,22,14],[37,29,22,27],[38,10,23,8,"transports"],[38,20,23,18],[38,22,23,20],[38,23,23,21],[38,34,23,32],[38,36,23,34],[38,45,23,43],[38,46,23,44],[39,10,24,8,"auth"],[39,14,24,12],[39,16,24,14],[40,12,25,10,"token"],[40,17,25,15],[40,19,25,17,"token"],[41,10,26,8],[41,11,26,9],[42,10,27,8,"reconnection"],[42,22,27,20],[42,24,27,22],[42,28,27,26],[43,10,28,8,"reconnectionDelay"],[43,27,28,25],[43,29,28,27],[43,33,28,31],[44,10,29,8,"reconnectionAttempts"],[44,30,29,28],[44,32,29,30],[44,33,29,31],[45,10,30,8,"timeout"],[45,17,30,15],[45,19,30,17],[46,8,31,6],[46,9,31,7],[46,10,31,8],[47,8,33,6],[47,12,33,10],[47,13,33,11,"socket"],[47,19,33,17],[47,20,33,18,"on"],[47,22,33,20],[47,23,33,21],[47,32,33,30],[47,34,33,32],[47,40,33,38],[48,10,34,8,"console"],[48,17,34,15],[48,18,34,16,"log"],[48,21,34,19],[48,22,34,20],[48,41,34,39],[48,43,34,41],[48,47,34,45],[48,48,34,46,"socket"],[48,54,34,52],[48,56,34,54,"id"],[48,58,34,56],[48,59,34,57],[49,10,35,8],[49,14,35,12],[49,15,35,13,"isConnected"],[49,26,35,24],[49,29,35,27],[49,33,35,31],[50,10,36,8],[50,14,36,12],[50,15,36,13,"notifyConnectionListeners"],[50,40,36,38],[50,41,36,39],[50,45,36,43],[50,46,36,44],[51,8,37,6],[51,9,37,7],[51,10,37,8],[52,8,39,6],[52,12,39,10],[52,13,39,11,"socket"],[52,19,39,17],[52,20,39,18,"on"],[52,22,39,20],[52,23,39,21],[52,35,39,33],[52,37,39,36,"reason"],[52,43,39,50],[52,47,39,55],[53,10,40,8,"console"],[53,17,40,15],[53,18,40,16,"log"],[53,21,40,19],[53,22,40,20],[53,44,40,42],[53,46,40,44,"reason"],[53,52,40,50],[53,53,40,51],[54,10,41,8],[54,14,41,12],[54,15,41,13,"isConnected"],[54,26,41,24],[54,29,41,27],[54,34,41,32],[55,10,42,8],[55,14,42,12],[55,15,42,13,"notifyConnectionListeners"],[55,40,42,38],[55,41,42,39],[55,46,42,44],[55,47,42,45],[56,8,43,6],[56,9,43,7],[56,10,43,8],[57,8,45,6],[57,12,45,10],[57,13,45,11,"socket"],[57,19,45,17],[57,20,45,18,"on"],[57,22,45,20],[57,23,45,21],[57,38,45,36],[57,40,45,39,"error"],[57,45,45,51],[57,49,45,56],[58,10,46,8,"console"],[58,17,46,15],[58,18,46,16,"error"],[58,23,46,21],[58,24,46,22],[58,43,46,41],[58,45,46,43,"error"],[58,50,46,48],[58,51,46,49,"message"],[58,58,46,56],[58,59,46,57],[59,10,47,8],[59,14,47,12],[59,15,47,13,"isConnected"],[59,26,47,24],[59,29,47,27],[59,34,47,32],[60,10,48,8],[60,14,48,12],[60,15,48,13,"notifyConnectionListeners"],[60,40,48,38],[60,41,48,39],[60,46,48,44],[60,47,48,45],[61,8,49,6],[61,9,49,7],[61,10,49,8],[62,8,51,6],[62,15,51,13],[62,19,51,17],[63,6,53,4],[63,7,53,5],[63,8,53,6],[63,15,53,13,"error"],[63,20,53,18],[63,22,53,20],[64,8,54,6,"console"],[64,15,54,13],[64,16,54,14,"error"],[64,21,54,19],[64,22,54,20],[64,48,54,46],[64,50,54,48,"error"],[64,55,54,53],[64,56,54,54],[65,8,55,6],[65,15,55,13],[65,20,55,18],[66,6,56,4],[67,4,57,2],[68,4,59,2,"disconnect"],[68,14,59,12,"disconnect"],[68,15,59,12],[68,17,59,15],[69,6,60,4],[69,10,60,8],[69,14,60,12],[69,15,60,13,"socket"],[69,21,60,19],[69,23,60,21],[70,8,61,6],[70,12,61,10],[70,13,61,11,"socket"],[70,19,61,17],[70,20,61,18,"disconnect"],[70,30,61,28],[70,31,61,29],[70,32,61,30],[71,8,62,6],[71,12,62,10],[71,13,62,11,"socket"],[71,19,62,17],[71,22,62,20],[71,26,62,24],[72,8,63,6],[72,12,63,10],[72,13,63,11,"isConnected"],[72,24,63,22],[72,27,63,25],[72,32,63,30],[73,6,64,4],[74,4,65,2],[75,4,67,2,"emit"],[75,8,67,6,"emit"],[75,9,67,7,"event"],[75,14,67,20],[75,16,67,22,"data"],[75,20,67,31],[75,22,67,33],[76,6,68,4],[76,10,68,8],[76,14,68,12],[76,15,68,13,"socket"],[76,21,68,19],[76,25,68,23],[76,29,68,27],[76,30,68,28,"isConnected"],[76,41,68,39],[76,43,68,41],[77,8,69,6],[77,12,69,10],[77,13,69,11,"socket"],[77,19,69,17],[77,20,69,18,"emit"],[77,24,69,22],[77,25,69,23,"event"],[77,30,69,28],[77,32,69,30,"data"],[77,36,69,34],[77,37,69,35],[78,6,70,4],[78,7,70,5],[78,13,70,11],[79,8,71,6,"console"],[79,15,71,13],[79,16,71,14,"warn"],[79,20,71,18],[79,21,71,19],[79,57,71,55],[79,59,71,57,"event"],[79,64,71,62],[79,65,71,63],[80,6,72,4],[81,4,73,2],[82,4,75,2,"on"],[82,6,75,4,"on"],[82,7,75,5,"event"],[82,12,75,18],[82,14,75,20,"callback"],[82,22,75,49],[82,24,75,51],[83,6,76,4],[83,10,76,8],[83,14,76,12],[83,15,76,13,"socket"],[83,21,76,19],[83,23,76,21],[84,8,77,6],[84,12,77,10],[84,13,77,11,"socket"],[84,19,77,17],[84,20,77,18,"on"],[84,22,77,20],[84,23,77,21,"event"],[84,28,77,26],[84,30,77,28,"callback"],[84,38,77,36],[84,39,77,37],[85,6,78,4],[86,4,79,2],[87,4,81,2,"off"],[87,7,81,5,"off"],[87,8,81,6,"event"],[87,13,81,19],[87,15,81,21,"callback"],[87,23,81,51],[87,25,81,53],[88,6,82,4],[88,10,82,8],[88,14,82,12],[88,15,82,13,"socket"],[88,21,82,19],[88,23,82,21],[89,8,83,6],[89,12,83,10],[89,13,83,11,"socket"],[89,19,83,17],[89,20,83,18,"off"],[89,23,83,21],[89,24,83,22,"event"],[89,29,83,27],[89,31,83,29,"callback"],[89,39,83,37],[89,40,83,38],[90,6,84,4],[91,4,85,2],[92,4,87,2,"addConnectionListener"],[92,25,87,23,"addConnectionListener"],[92,26,87,24,"callback"],[92,34,87,64],[92,36,87,66],[93,6,88,4],[93,10,88,8],[93,11,88,9,"connectionListeners"],[93,30,88,28],[93,31,88,29,"push"],[93,35,88,33],[93,36,88,34,"callback"],[93,44,88,42],[93,45,88,43],[94,4,89,2],[95,4,91,2,"removeConnectionListener"],[95,28,91,26,"removeConnectionListener"],[95,29,91,27,"callback"],[95,37,91,67],[95,39,91,69],[96,6,92,4],[96,10,92,8],[96,11,92,9,"connectionListeners"],[96,30,92,28],[96,33,92,31],[96,37,92,35],[96,38,92,36,"connectionListeners"],[96,57,92,55],[96,58,92,56,"filter"],[96,64,92,62],[96,65,93,6,"listener"],[96,73,93,14],[96,77,93,18,"listener"],[96,85,93,26],[96,90,93,31,"callback"],[96,98,94,4],[96,99,94,5],[97,4,95,2],[98,4,97,2,"notifyConnectionListeners"],[98,29,97,27,"notifyConnectionListeners"],[98,30,97,28,"isConnected"],[98,41,97,48],[98,43,97,50],[99,6,98,4],[99,10,98,8],[99,11,98,9,"connectionListeners"],[99,30,98,28],[99,31,98,29,"forEach"],[99,38,98,36],[99,39,98,37,"callback"],[99,47,98,45],[99,51,98,49],[100,8,99,6,"callback"],[100,16,99,14],[100,17,99,15,"isConnected"],[100,28,99,26],[100,29,99,27],[101,6,100,4],[101,7,100,5],[101,8,100,6],[102,4,101,2],[103,2,102,0],[104,2,104,0],[104,6,104,0,"_default"],[104,14,104,0],[104,17,104,15],[104,21,104,19,"SocketService"],[104,34,104,32],[104,35,104,33],[104,36,104,34],[105,0,104,35],[105,3]],"functionMap":{"names":["<global>","SocketService","SocketService#connect","on$argument_1","SocketService#disconnect","SocketService#emit","SocketService#on","SocketService#off","SocketService#addConnectionListener","SocketService#removeConnectionListener","connectionListeners.filter$argument_0","SocketService#notifyConnectionListeners","connectionListeners.forEach$argument_0"],"mappings":"AAA;ACM;ECK;gCCqB;ODI;mCCE;ODI;sCCE;ODI;GDQ;EGE;GHM;EIE;GJM;EKE;GLI;EME;GNI;EOE;GPE;EQE;MCE,iCD;GRE;EUE;qCCC;KDE;GVC;CDC"},"hasCjsExports":false},"type":"js/module"}]}