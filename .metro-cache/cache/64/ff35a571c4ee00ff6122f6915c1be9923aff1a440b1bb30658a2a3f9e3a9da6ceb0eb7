{"dependencies":[{"name":"./constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":44,"index":59},"end":{"line":3,"column":66,"index":81}}],"key":"3z43bJyk/UB4EKjDCOXTFak09do=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  const {\n    kForOnEventAttribute,\n    kListener\n  } = require(_dependencyMap[0], \"./constants\");\n  const kCode = Symbol('kCode');\n  const kData = Symbol('kData');\n  const kError = Symbol('kError');\n  const kMessage = Symbol('kMessage');\n  const kReason = Symbol('kReason');\n  const kTarget = Symbol('kTarget');\n  const kType = Symbol('kType');\n  const kWasClean = Symbol('kWasClean');\n\n  /**\n   * Class representing an event.\n   */\n  class Event {\n    /**\n     * Create a new `Event`.\n     *\n     * @param {String} type The name of the event\n     * @throws {TypeError} If the `type` argument is not specified\n     */\n    constructor(type) {\n      this[kTarget] = null;\n      this[kType] = type;\n    }\n\n    /**\n     * @type {*}\n     */\n    get target() {\n      return this[kTarget];\n    }\n\n    /**\n     * @type {String}\n     */\n    get type() {\n      return this[kType];\n    }\n  }\n  Object.defineProperty(Event.prototype, 'target', {\n    enumerable: true\n  });\n  Object.defineProperty(Event.prototype, 'type', {\n    enumerable: true\n  });\n\n  /**\n   * Class representing a close event.\n   *\n   * @extends Event\n   */\n  class CloseEvent extends Event {\n    /**\n     * Create a new `CloseEvent`.\n     *\n     * @param {String} type The name of the event\n     * @param {Object} [options] A dictionary object that allows for setting\n     *     attributes via object members of the same name\n     * @param {Number} [options.code=0] The status code explaining why the\n     *     connection was closed\n     * @param {String} [options.reason=''] A human-readable string explaining why\n     *     the connection was closed\n     * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n     *     connection was cleanly closed\n     */\n    constructor(type, options = {}) {\n      super(type);\n      this[kCode] = options.code === undefined ? 0 : options.code;\n      this[kReason] = options.reason === undefined ? '' : options.reason;\n      this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n    }\n\n    /**\n     * @type {Number}\n     */\n    get code() {\n      return this[kCode];\n    }\n\n    /**\n     * @type {String}\n     */\n    get reason() {\n      return this[kReason];\n    }\n\n    /**\n     * @type {Boolean}\n     */\n    get wasClean() {\n      return this[kWasClean];\n    }\n  }\n  Object.defineProperty(CloseEvent.prototype, 'code', {\n    enumerable: true\n  });\n  Object.defineProperty(CloseEvent.prototype, 'reason', {\n    enumerable: true\n  });\n  Object.defineProperty(CloseEvent.prototype, 'wasClean', {\n    enumerable: true\n  });\n\n  /**\n   * Class representing an error event.\n   *\n   * @extends Event\n   */\n  class ErrorEvent extends Event {\n    /**\n     * Create a new `ErrorEvent`.\n     *\n     * @param {String} type The name of the event\n     * @param {Object} [options] A dictionary object that allows for setting\n     *     attributes via object members of the same name\n     * @param {*} [options.error=null] The error that generated this event\n     * @param {String} [options.message=''] The error message\n     */\n    constructor(type, options = {}) {\n      super(type);\n      this[kError] = options.error === undefined ? null : options.error;\n      this[kMessage] = options.message === undefined ? '' : options.message;\n    }\n\n    /**\n     * @type {*}\n     */\n    get error() {\n      return this[kError];\n    }\n\n    /**\n     * @type {String}\n     */\n    get message() {\n      return this[kMessage];\n    }\n  }\n  Object.defineProperty(ErrorEvent.prototype, 'error', {\n    enumerable: true\n  });\n  Object.defineProperty(ErrorEvent.prototype, 'message', {\n    enumerable: true\n  });\n\n  /**\n   * Class representing a message event.\n   *\n   * @extends Event\n   */\n  class MessageEvent extends Event {\n    /**\n     * Create a new `MessageEvent`.\n     *\n     * @param {String} type The name of the event\n     * @param {Object} [options] A dictionary object that allows for setting\n     *     attributes via object members of the same name\n     * @param {*} [options.data=null] The message content\n     */\n    constructor(type, options = {}) {\n      super(type);\n      this[kData] = options.data === undefined ? null : options.data;\n    }\n\n    /**\n     * @type {*}\n     */\n    get data() {\n      return this[kData];\n    }\n  }\n  Object.defineProperty(MessageEvent.prototype, 'data', {\n    enumerable: true\n  });\n\n  /**\n   * This provides methods for emulating the `EventTarget` interface. It's not\n   * meant to be used directly.\n   *\n   * @mixin\n   */\n  const EventTarget = {\n    /**\n     * Register an event listener.\n     *\n     * @param {String} type A string representing the event type to listen for\n     * @param {(Function|Object)} handler The listener to add\n     * @param {Object} [options] An options object specifies characteristics about\n     *     the event listener\n     * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n     *     listener should be invoked at most once after being added. If `true`,\n     *     the listener would be automatically removed when invoked.\n     * @public\n     */\n    addEventListener(type, handler, options = {}) {\n      for (const listener of this.listeners(type)) {\n        if (!options[kForOnEventAttribute] && listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n          return;\n        }\n      }\n      let wrapper;\n      if (type === 'message') {\n        wrapper = function onMessage(data, isBinary) {\n          const event = new MessageEvent('message', {\n            data: isBinary ? data : data.toString()\n          });\n          event[kTarget] = this;\n          callListener(handler, this, event);\n        };\n      } else if (type === 'close') {\n        wrapper = function onClose(code, message) {\n          const event = new CloseEvent('close', {\n            code,\n            reason: message.toString(),\n            wasClean: this._closeFrameReceived && this._closeFrameSent\n          });\n          event[kTarget] = this;\n          callListener(handler, this, event);\n        };\n      } else if (type === 'error') {\n        wrapper = function onError(error) {\n          const event = new ErrorEvent('error', {\n            error,\n            message: error.message\n          });\n          event[kTarget] = this;\n          callListener(handler, this, event);\n        };\n      } else if (type === 'open') {\n        wrapper = function onOpen() {\n          const event = new Event('open');\n          event[kTarget] = this;\n          callListener(handler, this, event);\n        };\n      } else {\n        return;\n      }\n      wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n      wrapper[kListener] = handler;\n      if (options.once) {\n        this.once(type, wrapper);\n      } else {\n        this.on(type, wrapper);\n      }\n    },\n    /**\n     * Remove an event listener.\n     *\n     * @param {String} type A string representing the event type to remove\n     * @param {(Function|Object)} handler The listener to remove\n     * @public\n     */\n    removeEventListener(type, handler) {\n      for (const listener of this.listeners(type)) {\n        if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n          this.removeListener(type, listener);\n          break;\n        }\n      }\n    }\n  };\n  module.exports = {\n    CloseEvent,\n    ErrorEvent,\n    Event,\n    EventTarget,\n    MessageEvent\n  };\n\n  /**\n   * Call an event listener\n   *\n   * @param {(Function|Object)} listener The listener to call\n   * @param {*} thisArg The value to use as `this`` when calling the listener\n   * @param {Event} event The event to pass to the listener\n   * @private\n   */\n  function callListener(listener, thisArg, event) {\n    if (typeof listener === 'object' && listener.handleEvent) {\n      listener.handleEvent.call(listener, event);\n    } else {\n      listener.call(thisArg, event);\n    }\n  }\n});","lineCount":291,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,8,3,6],[5,4,3,8,"kForOnEventAttribute"],[5,24,3,28],[6,4,3,30,"kListener"],[7,2,3,40],[7,3,3,41],[7,6,3,44,"require"],[7,13,3,51],[7,14,3,51,"_dependencyMap"],[7,28,3,51],[7,46,3,65],[7,47,3,66],[8,2,5,0],[8,8,5,6,"kCode"],[8,13,5,11],[8,16,5,14,"Symbol"],[8,22,5,20],[8,23,5,21],[8,30,5,28],[8,31,5,29],[9,2,6,0],[9,8,6,6,"kData"],[9,13,6,11],[9,16,6,14,"Symbol"],[9,22,6,20],[9,23,6,21],[9,30,6,28],[9,31,6,29],[10,2,7,0],[10,8,7,6,"kError"],[10,14,7,12],[10,17,7,15,"Symbol"],[10,23,7,21],[10,24,7,22],[10,32,7,30],[10,33,7,31],[11,2,8,0],[11,8,8,6,"kMessage"],[11,16,8,14],[11,19,8,17,"Symbol"],[11,25,8,23],[11,26,8,24],[11,36,8,34],[11,37,8,35],[12,2,9,0],[12,8,9,6,"kReason"],[12,15,9,13],[12,18,9,16,"Symbol"],[12,24,9,22],[12,25,9,23],[12,34,9,32],[12,35,9,33],[13,2,10,0],[13,8,10,6,"kTarget"],[13,15,10,13],[13,18,10,16,"Symbol"],[13,24,10,22],[13,25,10,23],[13,34,10,32],[13,35,10,33],[14,2,11,0],[14,8,11,6,"kType"],[14,13,11,11],[14,16,11,14,"Symbol"],[14,22,11,20],[14,23,11,21],[14,30,11,28],[14,31,11,29],[15,2,12,0],[15,8,12,6,"kWasClean"],[15,17,12,15],[15,20,12,18,"Symbol"],[15,26,12,24],[15,27,12,25],[15,38,12,36],[15,39,12,37],[17,2,14,0],[18,0,15,0],[19,0,16,0],[20,2,17,0],[20,8,17,6,"Event"],[20,13,17,11],[20,14,17,12],[21,4,18,2],[22,0,19,0],[23,0,20,0],[24,0,21,0],[25,0,22,0],[26,0,23,0],[27,4,24,2,"constructor"],[27,15,24,13,"constructor"],[27,16,24,14,"type"],[27,20,24,18],[27,22,24,20],[28,6,25,4],[28,10,25,8],[28,11,25,9,"kTarget"],[28,18,25,16],[28,19,25,17],[28,22,25,20],[28,26,25,24],[29,6,26,4],[29,10,26,8],[29,11,26,9,"kType"],[29,16,26,14],[29,17,26,15],[29,20,26,18,"type"],[29,24,26,22],[30,4,27,2],[32,4,29,2],[33,0,30,0],[34,0,31,0],[35,4,32,2],[35,8,32,6,"target"],[35,14,32,12,"target"],[35,15,32,12],[35,17,32,15],[36,6,33,4],[36,13,33,11],[36,17,33,15],[36,18,33,16,"kTarget"],[36,25,33,23],[36,26,33,24],[37,4,34,2],[39,4,36,2],[40,0,37,0],[41,0,38,0],[42,4,39,2],[42,8,39,6,"type"],[42,12,39,10,"type"],[42,13,39,10],[42,15,39,13],[43,6,40,4],[43,13,40,11],[43,17,40,15],[43,18,40,16,"kType"],[43,23,40,21],[43,24,40,22],[44,4,41,2],[45,2,42,0],[46,2,44,0,"Object"],[46,8,44,6],[46,9,44,7,"defineProperty"],[46,23,44,21],[46,24,44,22,"Event"],[46,29,44,27],[46,30,44,28,"prototype"],[46,39,44,37],[46,41,44,39],[46,49,44,47],[46,51,44,49],[47,4,44,51,"enumerable"],[47,14,44,61],[47,16,44,63],[48,2,44,68],[48,3,44,69],[48,4,44,70],[49,2,45,0,"Object"],[49,8,45,6],[49,9,45,7,"defineProperty"],[49,23,45,21],[49,24,45,22,"Event"],[49,29,45,27],[49,30,45,28,"prototype"],[49,39,45,37],[49,41,45,39],[49,47,45,45],[49,49,45,47],[50,4,45,49,"enumerable"],[50,14,45,59],[50,16,45,61],[51,2,45,66],[51,3,45,67],[51,4,45,68],[53,2,47,0],[54,0,48,0],[55,0,49,0],[56,0,50,0],[57,0,51,0],[58,2,52,0],[58,8,52,6,"CloseEvent"],[58,18,52,16],[58,27,52,25,"Event"],[58,32,52,30],[58,33,52,31],[59,4,53,2],[60,0,54,0],[61,0,55,0],[62,0,56,0],[63,0,57,0],[64,0,58,0],[65,0,59,0],[66,0,60,0],[67,0,61,0],[68,0,62,0],[69,0,63,0],[70,0,64,0],[71,0,65,0],[72,4,66,2,"constructor"],[72,15,66,13,"constructor"],[72,16,66,14,"type"],[72,20,66,18],[72,22,66,20,"options"],[72,29,66,27],[72,32,66,30],[72,33,66,31],[72,34,66,32],[72,36,66,34],[73,6,67,4],[73,11,67,9],[73,12,67,10,"type"],[73,16,67,14],[73,17,67,15],[74,6,69,4],[74,10,69,8],[74,11,69,9,"kCode"],[74,16,69,14],[74,17,69,15],[74,20,69,18,"options"],[74,27,69,25],[74,28,69,26,"code"],[74,32,69,30],[74,37,69,35,"undefined"],[74,46,69,44],[74,49,69,47],[74,50,69,48],[74,53,69,51,"options"],[74,60,69,58],[74,61,69,59,"code"],[74,65,69,63],[75,6,70,4],[75,10,70,8],[75,11,70,9,"kReason"],[75,18,70,16],[75,19,70,17],[75,22,70,20,"options"],[75,29,70,27],[75,30,70,28,"reason"],[75,36,70,34],[75,41,70,39,"undefined"],[75,50,70,48],[75,53,70,51],[75,55,70,53],[75,58,70,56,"options"],[75,65,70,63],[75,66,70,64,"reason"],[75,72,70,70],[76,6,71,4],[76,10,71,8],[76,11,71,9,"kWasClean"],[76,20,71,18],[76,21,71,19],[76,24,71,22,"options"],[76,31,71,29],[76,32,71,30,"wasClean"],[76,40,71,38],[76,45,71,43,"undefined"],[76,54,71,52],[76,57,71,55],[76,62,71,60],[76,65,71,63,"options"],[76,72,71,70],[76,73,71,71,"wasClean"],[76,81,71,79],[77,4,72,2],[79,4,74,2],[80,0,75,0],[81,0,76,0],[82,4,77,2],[82,8,77,6,"code"],[82,12,77,10,"code"],[82,13,77,10],[82,15,77,13],[83,6,78,4],[83,13,78,11],[83,17,78,15],[83,18,78,16,"kCode"],[83,23,78,21],[83,24,78,22],[84,4,79,2],[86,4,81,2],[87,0,82,0],[88,0,83,0],[89,4,84,2],[89,8,84,6,"reason"],[89,14,84,12,"reason"],[89,15,84,12],[89,17,84,15],[90,6,85,4],[90,13,85,11],[90,17,85,15],[90,18,85,16,"kReason"],[90,25,85,23],[90,26,85,24],[91,4,86,2],[93,4,88,2],[94,0,89,0],[95,0,90,0],[96,4,91,2],[96,8,91,6,"wasClean"],[96,16,91,14,"wasClean"],[96,17,91,14],[96,19,91,17],[97,6,92,4],[97,13,92,11],[97,17,92,15],[97,18,92,16,"kWasClean"],[97,27,92,25],[97,28,92,26],[98,4,93,2],[99,2,94,0],[100,2,96,0,"Object"],[100,8,96,6],[100,9,96,7,"defineProperty"],[100,23,96,21],[100,24,96,22,"CloseEvent"],[100,34,96,32],[100,35,96,33,"prototype"],[100,44,96,42],[100,46,96,44],[100,52,96,50],[100,54,96,52],[101,4,96,54,"enumerable"],[101,14,96,64],[101,16,96,66],[102,2,96,71],[102,3,96,72],[102,4,96,73],[103,2,97,0,"Object"],[103,8,97,6],[103,9,97,7,"defineProperty"],[103,23,97,21],[103,24,97,22,"CloseEvent"],[103,34,97,32],[103,35,97,33,"prototype"],[103,44,97,42],[103,46,97,44],[103,54,97,52],[103,56,97,54],[104,4,97,56,"enumerable"],[104,14,97,66],[104,16,97,68],[105,2,97,73],[105,3,97,74],[105,4,97,75],[106,2,98,0,"Object"],[106,8,98,6],[106,9,98,7,"defineProperty"],[106,23,98,21],[106,24,98,22,"CloseEvent"],[106,34,98,32],[106,35,98,33,"prototype"],[106,44,98,42],[106,46,98,44],[106,56,98,54],[106,58,98,56],[107,4,98,58,"enumerable"],[107,14,98,68],[107,16,98,70],[108,2,98,75],[108,3,98,76],[108,4,98,77],[110,2,100,0],[111,0,101,0],[112,0,102,0],[113,0,103,0],[114,0,104,0],[115,2,105,0],[115,8,105,6,"ErrorEvent"],[115,18,105,16],[115,27,105,25,"Event"],[115,32,105,30],[115,33,105,31],[116,4,106,2],[117,0,107,0],[118,0,108,0],[119,0,109,0],[120,0,110,0],[121,0,111,0],[122,0,112,0],[123,0,113,0],[124,0,114,0],[125,4,115,2,"constructor"],[125,15,115,13,"constructor"],[125,16,115,14,"type"],[125,20,115,18],[125,22,115,20,"options"],[125,29,115,27],[125,32,115,30],[125,33,115,31],[125,34,115,32],[125,36,115,34],[126,6,116,4],[126,11,116,9],[126,12,116,10,"type"],[126,16,116,14],[126,17,116,15],[127,6,118,4],[127,10,118,8],[127,11,118,9,"kError"],[127,17,118,15],[127,18,118,16],[127,21,118,19,"options"],[127,28,118,26],[127,29,118,27,"error"],[127,34,118,32],[127,39,118,37,"undefined"],[127,48,118,46],[127,51,118,49],[127,55,118,53],[127,58,118,56,"options"],[127,65,118,63],[127,66,118,64,"error"],[127,71,118,69],[128,6,119,4],[128,10,119,8],[128,11,119,9,"kMessage"],[128,19,119,17],[128,20,119,18],[128,23,119,21,"options"],[128,30,119,28],[128,31,119,29,"message"],[128,38,119,36],[128,43,119,41,"undefined"],[128,52,119,50],[128,55,119,53],[128,57,119,55],[128,60,119,58,"options"],[128,67,119,65],[128,68,119,66,"message"],[128,75,119,73],[129,4,120,2],[131,4,122,2],[132,0,123,0],[133,0,124,0],[134,4,125,2],[134,8,125,6,"error"],[134,13,125,11,"error"],[134,14,125,11],[134,16,125,14],[135,6,126,4],[135,13,126,11],[135,17,126,15],[135,18,126,16,"kError"],[135,24,126,22],[135,25,126,23],[136,4,127,2],[138,4,129,2],[139,0,130,0],[140,0,131,0],[141,4,132,2],[141,8,132,6,"message"],[141,15,132,13,"message"],[141,16,132,13],[141,18,132,16],[142,6,133,4],[142,13,133,11],[142,17,133,15],[142,18,133,16,"kMessage"],[142,26,133,24],[142,27,133,25],[143,4,134,2],[144,2,135,0],[145,2,137,0,"Object"],[145,8,137,6],[145,9,137,7,"defineProperty"],[145,23,137,21],[145,24,137,22,"ErrorEvent"],[145,34,137,32],[145,35,137,33,"prototype"],[145,44,137,42],[145,46,137,44],[145,53,137,51],[145,55,137,53],[146,4,137,55,"enumerable"],[146,14,137,65],[146,16,137,67],[147,2,137,72],[147,3,137,73],[147,4,137,74],[148,2,138,0,"Object"],[148,8,138,6],[148,9,138,7,"defineProperty"],[148,23,138,21],[148,24,138,22,"ErrorEvent"],[148,34,138,32],[148,35,138,33,"prototype"],[148,44,138,42],[148,46,138,44],[148,55,138,53],[148,57,138,55],[149,4,138,57,"enumerable"],[149,14,138,67],[149,16,138,69],[150,2,138,74],[150,3,138,75],[150,4,138,76],[152,2,140,0],[153,0,141,0],[154,0,142,0],[155,0,143,0],[156,0,144,0],[157,2,145,0],[157,8,145,6,"MessageEvent"],[157,20,145,18],[157,29,145,27,"Event"],[157,34,145,32],[157,35,145,33],[158,4,146,2],[159,0,147,0],[160,0,148,0],[161,0,149,0],[162,0,150,0],[163,0,151,0],[164,0,152,0],[165,0,153,0],[166,4,154,2,"constructor"],[166,15,154,13,"constructor"],[166,16,154,14,"type"],[166,20,154,18],[166,22,154,20,"options"],[166,29,154,27],[166,32,154,30],[166,33,154,31],[166,34,154,32],[166,36,154,34],[167,6,155,4],[167,11,155,9],[167,12,155,10,"type"],[167,16,155,14],[167,17,155,15],[168,6,157,4],[168,10,157,8],[168,11,157,9,"kData"],[168,16,157,14],[168,17,157,15],[168,20,157,18,"options"],[168,27,157,25],[168,28,157,26,"data"],[168,32,157,30],[168,37,157,35,"undefined"],[168,46,157,44],[168,49,157,47],[168,53,157,51],[168,56,157,54,"options"],[168,63,157,61],[168,64,157,62,"data"],[168,68,157,66],[169,4,158,2],[171,4,160,2],[172,0,161,0],[173,0,162,0],[174,4,163,2],[174,8,163,6,"data"],[174,12,163,10,"data"],[174,13,163,10],[174,15,163,13],[175,6,164,4],[175,13,164,11],[175,17,164,15],[175,18,164,16,"kData"],[175,23,164,21],[175,24,164,22],[176,4,165,2],[177,2,166,0],[178,2,168,0,"Object"],[178,8,168,6],[178,9,168,7,"defineProperty"],[178,23,168,21],[178,24,168,22,"MessageEvent"],[178,36,168,34],[178,37,168,35,"prototype"],[178,46,168,44],[178,48,168,46],[178,54,168,52],[178,56,168,54],[179,4,168,56,"enumerable"],[179,14,168,66],[179,16,168,68],[180,2,168,73],[180,3,168,74],[180,4,168,75],[182,2,170,0],[183,0,171,0],[184,0,172,0],[185,0,173,0],[186,0,174,0],[187,0,175,0],[188,2,176,0],[188,8,176,6,"EventTarget"],[188,19,176,17],[188,22,176,20],[189,4,177,2],[190,0,178,0],[191,0,179,0],[192,0,180,0],[193,0,181,0],[194,0,182,0],[195,0,183,0],[196,0,184,0],[197,0,185,0],[198,0,186,0],[199,0,187,0],[200,0,188,0],[201,4,189,2,"addEventListener"],[201,20,189,18,"addEventListener"],[201,21,189,19,"type"],[201,25,189,23],[201,27,189,25,"handler"],[201,34,189,32],[201,36,189,34,"options"],[201,43,189,41],[201,46,189,44],[201,47,189,45],[201,48,189,46],[201,50,189,48],[202,6,190,4],[202,11,190,9],[202,17,190,15,"listener"],[202,25,190,23],[202,29,190,27],[202,33,190,31],[202,34,190,32,"listeners"],[202,43,190,41],[202,44,190,42,"type"],[202,48,190,46],[202,49,190,47],[202,51,190,49],[203,8,191,6],[203,12,192,8],[203,13,192,9,"options"],[203,20,192,16],[203,21,192,17,"kForOnEventAttribute"],[203,41,192,37],[203,42,192,38],[203,46,193,8,"listener"],[203,54,193,16],[203,55,193,17,"kListener"],[203,64,193,26],[203,65,193,27],[203,70,193,32,"handler"],[203,77,193,39],[203,81,194,8],[203,82,194,9,"listener"],[203,90,194,17],[203,91,194,18,"kForOnEventAttribute"],[203,111,194,38],[203,112,194,39],[203,114,195,8],[204,10,196,8],[205,8,197,6],[206,6,198,4],[207,6,200,4],[207,10,200,8,"wrapper"],[207,17,200,15],[208,6,202,4],[208,10,202,8,"type"],[208,14,202,12],[208,19,202,17],[208,28,202,26],[208,30,202,28],[209,8,203,6,"wrapper"],[209,15,203,13],[209,18,203,16],[209,27,203,25,"onMessage"],[209,36,203,34,"onMessage"],[209,37,203,35,"data"],[209,41,203,39],[209,43,203,41,"isBinary"],[209,51,203,49],[209,53,203,51],[210,10,204,8],[210,16,204,14,"event"],[210,21,204,19],[210,24,204,22],[210,28,204,26,"MessageEvent"],[210,40,204,38],[210,41,204,39],[210,50,204,48],[210,52,204,50],[211,12,205,10,"data"],[211,16,205,14],[211,18,205,16,"isBinary"],[211,26,205,24],[211,29,205,27,"data"],[211,33,205,31],[211,36,205,34,"data"],[211,40,205,38],[211,41,205,39,"toString"],[211,49,205,47],[211,50,205,48],[212,10,206,8],[212,11,206,9],[212,12,206,10],[213,10,208,8,"event"],[213,15,208,13],[213,16,208,14,"kTarget"],[213,23,208,21],[213,24,208,22],[213,27,208,25],[213,31,208,29],[214,10,209,8,"callListener"],[214,22,209,20],[214,23,209,21,"handler"],[214,30,209,28],[214,32,209,30],[214,36,209,34],[214,38,209,36,"event"],[214,43,209,41],[214,44,209,42],[215,8,210,6],[215,9,210,7],[216,6,211,4],[216,7,211,5],[216,13,211,11],[216,17,211,15,"type"],[216,21,211,19],[216,26,211,24],[216,33,211,31],[216,35,211,33],[217,8,212,6,"wrapper"],[217,15,212,13],[217,18,212,16],[217,27,212,25,"onClose"],[217,34,212,32,"onClose"],[217,35,212,33,"code"],[217,39,212,37],[217,41,212,39,"message"],[217,48,212,46],[217,50,212,48],[218,10,213,8],[218,16,213,14,"event"],[218,21,213,19],[218,24,213,22],[218,28,213,26,"CloseEvent"],[218,38,213,36],[218,39,213,37],[218,46,213,44],[218,48,213,46],[219,12,214,10,"code"],[219,16,214,14],[220,12,215,10,"reason"],[220,18,215,16],[220,20,215,18,"message"],[220,27,215,25],[220,28,215,26,"toString"],[220,36,215,34],[220,37,215,35],[220,38,215,36],[221,12,216,10,"wasClean"],[221,20,216,18],[221,22,216,20],[221,26,216,24],[221,27,216,25,"_closeFrameReceived"],[221,46,216,44],[221,50,216,48],[221,54,216,52],[221,55,216,53,"_closeFrameSent"],[222,10,217,8],[222,11,217,9],[222,12,217,10],[223,10,219,8,"event"],[223,15,219,13],[223,16,219,14,"kTarget"],[223,23,219,21],[223,24,219,22],[223,27,219,25],[223,31,219,29],[224,10,220,8,"callListener"],[224,22,220,20],[224,23,220,21,"handler"],[224,30,220,28],[224,32,220,30],[224,36,220,34],[224,38,220,36,"event"],[224,43,220,41],[224,44,220,42],[225,8,221,6],[225,9,221,7],[226,6,222,4],[226,7,222,5],[226,13,222,11],[226,17,222,15,"type"],[226,21,222,19],[226,26,222,24],[226,33,222,31],[226,35,222,33],[227,8,223,6,"wrapper"],[227,15,223,13],[227,18,223,16],[227,27,223,25,"onError"],[227,34,223,32,"onError"],[227,35,223,33,"error"],[227,40,223,38],[227,42,223,40],[228,10,224,8],[228,16,224,14,"event"],[228,21,224,19],[228,24,224,22],[228,28,224,26,"ErrorEvent"],[228,38,224,36],[228,39,224,37],[228,46,224,44],[228,48,224,46],[229,12,225,10,"error"],[229,17,225,15],[230,12,226,10,"message"],[230,19,226,17],[230,21,226,19,"error"],[230,26,226,24],[230,27,226,25,"message"],[231,10,227,8],[231,11,227,9],[231,12,227,10],[232,10,229,8,"event"],[232,15,229,13],[232,16,229,14,"kTarget"],[232,23,229,21],[232,24,229,22],[232,27,229,25],[232,31,229,29],[233,10,230,8,"callListener"],[233,22,230,20],[233,23,230,21,"handler"],[233,30,230,28],[233,32,230,30],[233,36,230,34],[233,38,230,36,"event"],[233,43,230,41],[233,44,230,42],[234,8,231,6],[234,9,231,7],[235,6,232,4],[235,7,232,5],[235,13,232,11],[235,17,232,15,"type"],[235,21,232,19],[235,26,232,24],[235,32,232,30],[235,34,232,32],[236,8,233,6,"wrapper"],[236,15,233,13],[236,18,233,16],[236,27,233,25,"onOpen"],[236,33,233,31,"onOpen"],[236,34,233,31],[236,36,233,34],[237,10,234,8],[237,16,234,14,"event"],[237,21,234,19],[237,24,234,22],[237,28,234,26,"Event"],[237,33,234,31],[237,34,234,32],[237,40,234,38],[237,41,234,39],[238,10,236,8,"event"],[238,15,236,13],[238,16,236,14,"kTarget"],[238,23,236,21],[238,24,236,22],[238,27,236,25],[238,31,236,29],[239,10,237,8,"callListener"],[239,22,237,20],[239,23,237,21,"handler"],[239,30,237,28],[239,32,237,30],[239,36,237,34],[239,38,237,36,"event"],[239,43,237,41],[239,44,237,42],[240,8,238,6],[240,9,238,7],[241,6,239,4],[241,7,239,5],[241,13,239,11],[242,8,240,6],[243,6,241,4],[244,6,243,4,"wrapper"],[244,13,243,11],[244,14,243,12,"kForOnEventAttribute"],[244,34,243,32],[244,35,243,33],[244,38,243,36],[244,39,243,37],[244,40,243,38,"options"],[244,47,243,45],[244,48,243,46,"kForOnEventAttribute"],[244,68,243,66],[244,69,243,67],[245,6,244,4,"wrapper"],[245,13,244,11],[245,14,244,12,"kListener"],[245,23,244,21],[245,24,244,22],[245,27,244,25,"handler"],[245,34,244,32],[246,6,246,4],[246,10,246,8,"options"],[246,17,246,15],[246,18,246,16,"once"],[246,22,246,20],[246,24,246,22],[247,8,247,6],[247,12,247,10],[247,13,247,11,"once"],[247,17,247,15],[247,18,247,16,"type"],[247,22,247,20],[247,24,247,22,"wrapper"],[247,31,247,29],[247,32,247,30],[248,6,248,4],[248,7,248,5],[248,13,248,11],[249,8,249,6],[249,12,249,10],[249,13,249,11,"on"],[249,15,249,13],[249,16,249,14,"type"],[249,20,249,18],[249,22,249,20,"wrapper"],[249,29,249,27],[249,30,249,28],[250,6,250,4],[251,4,251,2],[251,5,251,3],[252,4,253,2],[253,0,254,0],[254,0,255,0],[255,0,256,0],[256,0,257,0],[257,0,258,0],[258,0,259,0],[259,4,260,2,"removeEventListener"],[259,23,260,21,"removeEventListener"],[259,24,260,22,"type"],[259,28,260,26],[259,30,260,28,"handler"],[259,37,260,35],[259,39,260,37],[260,6,261,4],[260,11,261,9],[260,17,261,15,"listener"],[260,25,261,23],[260,29,261,27],[260,33,261,31],[260,34,261,32,"listeners"],[260,43,261,41],[260,44,261,42,"type"],[260,48,261,46],[260,49,261,47],[260,51,261,49],[261,8,262,6],[261,12,262,10,"listener"],[261,20,262,18],[261,21,262,19,"kListener"],[261,30,262,28],[261,31,262,29],[261,36,262,34,"handler"],[261,43,262,41],[261,47,262,45],[261,48,262,46,"listener"],[261,56,262,54],[261,57,262,55,"kForOnEventAttribute"],[261,77,262,75],[261,78,262,76],[261,80,262,78],[262,10,263,8],[262,14,263,12],[262,15,263,13,"removeListener"],[262,29,263,27],[262,30,263,28,"type"],[262,34,263,32],[262,36,263,34,"listener"],[262,44,263,42],[262,45,263,43],[263,10,264,8],[264,8,265,6],[265,6,266,4],[266,4,267,2],[267,2,268,0],[267,3,268,1],[268,2,270,0,"module"],[268,8,270,6],[268,9,270,7,"exports"],[268,16,270,14],[268,19,270,17],[269,4,271,2,"CloseEvent"],[269,14,271,12],[270,4,272,2,"ErrorEvent"],[270,14,272,12],[271,4,273,2,"Event"],[271,9,273,7],[272,4,274,2,"EventTarget"],[272,15,274,13],[273,4,275,2,"MessageEvent"],[274,2,276,0],[274,3,276,1],[276,2,278,0],[277,0,279,0],[278,0,280,0],[279,0,281,0],[280,0,282,0],[281,0,283,0],[282,0,284,0],[283,0,285,0],[284,2,286,0],[284,11,286,9,"callListener"],[284,23,286,21,"callListener"],[284,24,286,22,"listener"],[284,32,286,30],[284,34,286,32,"thisArg"],[284,41,286,39],[284,43,286,41,"event"],[284,48,286,46],[284,50,286,48],[285,4,287,2],[285,8,287,6],[285,15,287,13,"listener"],[285,23,287,21],[285,28,287,26],[285,36,287,34],[285,40,287,38,"listener"],[285,48,287,46],[285,49,287,47,"handleEvent"],[285,60,287,58],[285,62,287,60],[286,6,288,4,"listener"],[286,14,288,12],[286,15,288,13,"handleEvent"],[286,26,288,24],[286,27,288,25,"call"],[286,31,288,29],[286,32,288,30,"listener"],[286,40,288,38],[286,42,288,40,"event"],[286,47,288,45],[286,48,288,46],[287,4,289,2],[287,5,289,3],[287,11,289,9],[288,6,290,4,"listener"],[288,14,290,12],[288,15,290,13,"call"],[288,19,290,17],[288,20,290,18,"thisArg"],[288,27,290,25],[288,29,290,27,"event"],[288,34,290,32],[288,35,290,33],[289,4,291,2],[290,2,292,0],[291,0,292,1],[291,3]],"functionMap":{"names":["<global>","Event","Event#constructor","Event#get__target","Event#get__type","CloseEvent","CloseEvent#constructor","CloseEvent#get__code","CloseEvent#get__reason","CloseEvent#get__wasClean","ErrorEvent","ErrorEvent#constructor","ErrorEvent#get__error","ErrorEvent#get__message","MessageEvent","MessageEvent#constructor","MessageEvent#get__data","EventTarget.addEventListener","onMessage","onClose","onError","onOpen","EventTarget.removeEventListener","callListener"],"mappings":"AAA;ACgB;ECO;GDG;EEK;GFE;EGK;GHE;CDC;AKU;ECc;GDM;EEK;GFE;EGK;GHE;EIK;GJE;CLC;AUW;ECU;GDK;EEK;GFE;EGK;GHE;CVC;AcU;ECS;GDI;EEK;GFE;CdC;EiBuB;gBCc;ODO;gBEE;OFS;gBGE;OHQ;gBIE;OJK;GjBa;EsBS;GtBO;AuBmB;CvBM"},"hasCjsExports":true},"type":"js/module"}]}