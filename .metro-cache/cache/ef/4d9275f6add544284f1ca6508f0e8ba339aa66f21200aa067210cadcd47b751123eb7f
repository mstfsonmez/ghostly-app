{"dependencies":[{"name":"./commons.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":67,"index":67}}],"key":"glGFVKq6JnHqcEVNii1WndfU66Y=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"decodePacket\", {\n    enumerable: true,\n    get: function () {\n      return decodePacket;\n    }\n  });\n  var _commonsJs = require(_dependencyMap[0], \"./commons.js\");\n  const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n      return {\n        type: \"message\",\n        data: mapBinary(encodedPacket, binaryType)\n      };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n      const buffer = Buffer.from(encodedPacket.substring(1), \"base64\");\n      return {\n        type: \"message\",\n        data: mapBinary(buffer, binaryType)\n      };\n    }\n    if (!_commonsJs.PACKET_TYPES_REVERSE[type]) {\n      return _commonsJs.ERROR_PACKET;\n    }\n    return encodedPacket.length > 1 ? {\n      type: _commonsJs.PACKET_TYPES_REVERSE[type],\n      data: encodedPacket.substring(1)\n    } : {\n      type: _commonsJs.PACKET_TYPES_REVERSE[type]\n    };\n  };\n  const mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n      case \"arraybuffer\":\n        if (data instanceof ArrayBuffer) {\n          // from WebSocket & binaryType \"arraybuffer\"\n          return data;\n        } else if (Buffer.isBuffer(data)) {\n          // from HTTP long-polling\n          return data.buffer.slice(data.byteOffset, data.byteOffset + data.byteLength);\n        } else {\n          // from WebTransport (Uint8Array)\n          return data.buffer;\n        }\n      case \"nodebuffer\":\n      default:\n        if (Buffer.isBuffer(data)) {\n          // from HTTP long-polling or WebSocket & binaryType \"nodebuffer\" (default)\n          return data;\n        } else {\n          // from WebTransport (Uint8Array)\n          return Buffer.from(data);\n        }\n    }\n  };\n});","lineCount":63,"map":[[7,2,2,0,"Object"],[7,8,2,0],[7,9,2,0,"defineProperty"],[7,23,2,0],[7,24,2,0,"exports"],[7,31,2,0],[8,4,2,0,"enumerable"],[8,14,2,0],[9,4,2,0,"get"],[9,7,2,0],[9,18,2,0,"get"],[9,19,2,0],[10,6,2,0],[10,13,2,0,"decodePacket"],[10,25,2,0],[11,4,2,0],[12,2,2,0],[13,2,1,0],[13,6,1,0,"_commonsJs"],[13,16,1,0],[13,19,1,0,"require"],[13,26,1,0],[13,27,1,0,"_dependencyMap"],[13,41,1,0],[14,2,2,7],[14,8,2,13,"decodePacket"],[14,20,2,25],[14,23,2,28,"decodePacket"],[14,24,2,29,"encodedPacket"],[14,37,2,42],[14,39,2,44,"binaryType"],[14,49,2,54],[14,54,2,59],[15,4,3,4],[15,8,3,8],[15,15,3,15,"encodedPacket"],[15,28,3,28],[15,33,3,33],[15,41,3,41],[15,43,3,43],[16,6,4,8],[16,13,4,15],[17,8,5,12,"type"],[17,12,5,16],[17,14,5,18],[17,23,5,27],[18,8,6,12,"data"],[18,12,6,16],[18,14,6,18,"mapBinary"],[18,23,6,27],[18,24,6,28,"encodedPacket"],[18,37,6,41],[18,39,6,43,"binaryType"],[18,49,6,53],[19,6,7,8],[19,7,7,9],[20,4,8,4],[21,4,9,4],[21,10,9,10,"type"],[21,14,9,14],[21,17,9,17,"encodedPacket"],[21,30,9,30],[21,31,9,31,"charAt"],[21,37,9,37],[21,38,9,38],[21,39,9,39],[21,40,9,40],[22,4,10,4],[22,8,10,8,"type"],[22,12,10,12],[22,17,10,17],[22,20,10,20],[22,22,10,22],[23,6,11,8],[23,12,11,14,"buffer"],[23,18,11,20],[23,21,11,23,"Buffer"],[23,27,11,29],[23,28,11,30,"from"],[23,32,11,34],[23,33,11,35,"encodedPacket"],[23,46,11,48],[23,47,11,49,"substring"],[23,56,11,58],[23,57,11,59],[23,58,11,60],[23,59,11,61],[23,61,11,63],[23,69,11,71],[23,70,11,72],[24,6,12,8],[24,13,12,15],[25,8,13,12,"type"],[25,12,13,16],[25,14,13,18],[25,23,13,27],[26,8,14,12,"data"],[26,12,14,16],[26,14,14,18,"mapBinary"],[26,23,14,27],[26,24,14,28,"buffer"],[26,30,14,34],[26,32,14,36,"binaryType"],[26,42,14,46],[27,6,15,8],[27,7,15,9],[28,4,16,4],[29,4,17,4],[29,8,17,8],[29,9,17,9,"PACKET_TYPES_REVERSE"],[29,19,17,29],[29,20,17,29,"PACKET_TYPES_REVERSE"],[29,40,17,29],[29,41,17,30,"type"],[29,45,17,34],[29,46,17,35],[29,48,17,37],[30,6,18,8],[30,13,18,15,"ERROR_PACKET"],[30,23,18,27],[30,24,18,27,"ERROR_PACKET"],[30,36,18,27],[31,4,19,4],[32,4,20,4],[32,11,20,11,"encodedPacket"],[32,24,20,24],[32,25,20,25,"length"],[32,31,20,31],[32,34,20,34],[32,35,20,35],[32,38,21,10],[33,6,22,12,"type"],[33,10,22,16],[33,12,22,18,"PACKET_TYPES_REVERSE"],[33,22,22,38],[33,23,22,38,"PACKET_TYPES_REVERSE"],[33,43,22,38],[33,44,22,39,"type"],[33,48,22,43],[33,49,22,44],[34,6,23,12,"data"],[34,10,23,16],[34,12,23,18,"encodedPacket"],[34,25,23,31],[34,26,23,32,"substring"],[34,35,23,41],[34,36,23,42],[34,37,23,43],[35,4,24,8],[35,5,24,9],[35,8,25,10],[36,6,26,12,"type"],[36,10,26,16],[36,12,26,18,"PACKET_TYPES_REVERSE"],[36,22,26,38],[36,23,26,38,"PACKET_TYPES_REVERSE"],[36,43,26,38],[36,44,26,39,"type"],[36,48,26,43],[37,4,27,8],[37,5,27,9],[38,2,28,0],[38,3,28,1],[39,2,29,0],[39,8,29,6,"mapBinary"],[39,17,29,15],[39,20,29,18,"mapBinary"],[39,21,29,19,"data"],[39,25,29,23],[39,27,29,25,"binaryType"],[39,37,29,35],[39,42,29,40],[40,4,30,4],[40,12,30,12,"binaryType"],[40,22,30,22],[41,6,31,8],[41,11,31,13],[41,24,31,26],[42,8,32,12],[42,12,32,16,"data"],[42,16,32,20],[42,28,32,32,"ArrayBuffer"],[42,39,32,43],[42,41,32,45],[43,10,33,16],[44,10,34,16],[44,17,34,23,"data"],[44,21,34,27],[45,8,35,12],[45,9,35,13],[45,15,36,17],[45,19,36,21,"Buffer"],[45,25,36,27],[45,26,36,28,"isBuffer"],[45,34,36,36],[45,35,36,37,"data"],[45,39,36,41],[45,40,36,42],[45,42,36,44],[46,10,37,16],[47,10,38,16],[47,17,38,23,"data"],[47,21,38,27],[47,22,38,28,"buffer"],[47,28,38,34],[47,29,38,35,"slice"],[47,34,38,40],[47,35,38,41,"data"],[47,39,38,45],[47,40,38,46,"byteOffset"],[47,50,38,56],[47,52,38,58,"data"],[47,56,38,62],[47,57,38,63,"byteOffset"],[47,67,38,73],[47,70,38,76,"data"],[47,74,38,80],[47,75,38,81,"byteLength"],[47,85,38,91],[47,86,38,92],[48,8,39,12],[48,9,39,13],[48,15,40,17],[49,10,41,16],[50,10,42,16],[50,17,42,23,"data"],[50,21,42,27],[50,22,42,28,"buffer"],[50,28,42,34],[51,8,43,12],[52,6,44,8],[52,11,44,13],[52,23,44,25],[53,6,45,8],[54,8,46,12],[54,12,46,16,"Buffer"],[54,18,46,22],[54,19,46,23,"isBuffer"],[54,27,46,31],[54,28,46,32,"data"],[54,32,46,36],[54,33,46,37],[54,35,46,39],[55,10,47,16],[56,10,48,16],[56,17,48,23,"data"],[56,21,48,27],[57,8,49,12],[57,9,49,13],[57,15,50,17],[58,10,51,16],[59,10,52,16],[59,17,52,23,"Buffer"],[59,23,52,29],[59,24,52,30,"from"],[59,28,52,34],[59,29,52,35,"data"],[59,33,52,39],[59,34,52,40],[60,8,53,12],[61,4,54,4],[62,2,55,0],[62,3,55,1],[63,0,55,2],[63,3]],"functionMap":{"names":["<global>","decodePacket","mapBinary"],"mappings":"AAA;4BCC;CD0B;kBEC;CF0B"},"hasCjsExports":false},"type":"js/module"}]}