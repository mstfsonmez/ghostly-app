{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"encode\", {\n    enumerable: true,\n    get: function () {\n      return encode;\n    }\n  });\n  Object.defineProperty(exports, \"decode\", {\n    enumerable: true,\n    get: function () {\n      return decode;\n    }\n  });\n  // imported from https://github.com/socketio/base64-arraybuffer\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  // Use a lookup table to find the index.\n  const lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\n  for (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n  const encode = arraybuffer => {\n    let bytes = new Uint8Array(arraybuffer),\n      i,\n      len = bytes.length,\n      base64 = '';\n    for (i = 0; i < len; i += 3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n      base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n      base64 = base64.substring(0, base64.length - 1) + '=';\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n  };\n  const decode = base64 => {\n    let bufferLength = base64.length * 0.75,\n      len = base64.length,\n      i,\n      p = 0,\n      encoded1,\n      encoded2,\n      encoded3,\n      encoded4;\n    if (base64[base64.length - 1] === '=') {\n      bufferLength--;\n      if (base64[base64.length - 2] === '=') {\n        bufferLength--;\n      }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength),\n      bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i + 1)];\n      encoded3 = lookup[base64.charCodeAt(i + 2)];\n      encoded4 = lookup[base64.charCodeAt(i + 3)];\n      bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n      bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n      bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return arraybuffer;\n  };\n});","lineCount":72,"map":[[7,2,8,0,"Object"],[7,8,8,0],[7,9,8,0,"defineProperty"],[7,23,8,0],[7,24,8,0,"exports"],[7,31,8,0],[8,4,8,0,"enumerable"],[8,14,8,0],[9,4,8,0,"get"],[9,7,8,0],[9,18,8,0,"get"],[9,19,8,0],[10,6,8,0],[10,13,8,0,"encode"],[10,19,8,0],[11,4,8,0],[12,2,8,0],[13,2,24,0,"Object"],[13,8,24,0],[13,9,24,0,"defineProperty"],[13,23,24,0],[13,24,24,0,"exports"],[13,31,24,0],[14,4,24,0,"enumerable"],[14,14,24,0],[15,4,24,0,"get"],[15,7,24,0],[15,18,24,0,"get"],[15,19,24,0],[16,6,24,0],[16,13,24,0,"decode"],[16,19,24,0],[17,4,24,0],[18,2,24,0],[19,2,1,0],[20,2,2,0],[20,8,2,6,"chars"],[20,13,2,11],[20,16,2,14],[20,82,2,80],[21,2,3,0],[22,2,4,0],[22,8,4,6,"lookup"],[22,14,4,12],[22,17,4,15],[22,24,4,22,"Uint8Array"],[22,34,4,32],[22,39,4,37],[22,50,4,48],[22,53,4,51],[22,55,4,53],[22,58,4,56],[22,62,4,60,"Uint8Array"],[22,72,4,70],[22,73,4,71],[22,76,4,74],[22,77,4,75],[23,2,5,0],[23,7,5,5],[23,11,5,9,"i"],[23,12,5,10],[23,15,5,13],[23,16,5,14],[23,18,5,16,"i"],[23,19,5,17],[23,22,5,20,"chars"],[23,27,5,25],[23,28,5,26,"length"],[23,34,5,32],[23,36,5,34,"i"],[23,37,5,35],[23,39,5,37],[23,41,5,39],[24,4,6,4,"lookup"],[24,10,6,10],[24,11,6,11,"chars"],[24,16,6,16],[24,17,6,17,"charCodeAt"],[24,27,6,27],[24,28,6,28,"i"],[24,29,6,29],[24,30,6,30],[24,31,6,31],[24,34,6,34,"i"],[24,35,6,35],[25,2,7,0],[26,2,8,7],[26,8,8,13,"encode"],[26,14,8,19],[26,17,8,23,"arraybuffer"],[26,28,8,34],[26,32,8,39],[27,4,9,4],[27,8,9,8,"bytes"],[27,13,9,13],[27,16,9,16],[27,20,9,20,"Uint8Array"],[27,30,9,30],[27,31,9,31,"arraybuffer"],[27,42,9,42],[27,43,9,43],[28,6,9,45,"i"],[28,7,9,46],[29,6,9,48,"len"],[29,9,9,51],[29,12,9,54,"bytes"],[29,17,9,59],[29,18,9,60,"length"],[29,24,9,66],[30,6,9,68,"base64"],[30,12,9,74],[30,15,9,77],[30,17,9,79],[31,4,10,4],[31,9,10,9,"i"],[31,10,10,10],[31,13,10,13],[31,14,10,14],[31,16,10,16,"i"],[31,17,10,17],[31,20,10,20,"len"],[31,23,10,23],[31,25,10,25,"i"],[31,26,10,26],[31,30,10,30],[31,31,10,31],[31,33,10,33],[32,6,11,8,"base64"],[32,12,11,14],[32,16,11,18,"chars"],[32,21,11,23],[32,22,11,24,"bytes"],[32,27,11,29],[32,28,11,30,"i"],[32,29,11,31],[32,30,11,32],[32,34,11,36],[32,35,11,37],[32,36,11,38],[33,6,12,8,"base64"],[33,12,12,14],[33,16,12,18,"chars"],[33,21,12,23],[33,22,12,25],[33,23,12,26,"bytes"],[33,28,12,31],[33,29,12,32,"i"],[33,30,12,33],[33,31,12,34],[33,34,12,37],[33,35,12,38],[33,40,12,43],[33,41,12,44],[33,44,12,49,"bytes"],[33,49,12,54],[33,50,12,55,"i"],[33,51,12,56],[33,54,12,59],[33,55,12,60],[33,56,12,61],[33,60,12,65],[33,61,12,67],[33,62,12,68],[34,6,13,8,"base64"],[34,12,13,14],[34,16,13,18,"chars"],[34,21,13,23],[34,22,13,25],[34,23,13,26,"bytes"],[34,28,13,31],[34,29,13,32,"i"],[34,30,13,33],[34,33,13,36],[34,34,13,37],[34,35,13,38],[34,38,13,41],[34,40,13,43],[34,45,13,48],[34,46,13,49],[34,49,13,54,"bytes"],[34,54,13,59],[34,55,13,60,"i"],[34,56,13,61],[34,59,13,64],[34,60,13,65],[34,61,13,66],[34,65,13,70],[34,66,13,72],[34,67,13,73],[35,6,14,8,"base64"],[35,12,14,14],[35,16,14,18,"chars"],[35,21,14,23],[35,22,14,24,"bytes"],[35,27,14,29],[35,28,14,30,"i"],[35,29,14,31],[35,32,14,34],[35,33,14,35],[35,34,14,36],[35,37,14,39],[35,39,14,41],[35,40,14,42],[36,4,15,4],[37,4,16,4],[37,8,16,8,"len"],[37,11,16,11],[37,14,16,14],[37,15,16,15],[37,20,16,20],[37,21,16,21],[37,23,16,23],[38,6,17,8,"base64"],[38,12,17,14],[38,15,17,17,"base64"],[38,21,17,23],[38,22,17,24,"substring"],[38,31,17,33],[38,32,17,34],[38,33,17,35],[38,35,17,37,"base64"],[38,41,17,43],[38,42,17,44,"length"],[38,48,17,50],[38,51,17,53],[38,52,17,54],[38,53,17,55],[38,56,17,58],[38,59,17,61],[39,4,18,4],[39,5,18,5],[39,11,19,9],[39,15,19,13,"len"],[39,18,19,16],[39,21,19,19],[39,22,19,20],[39,27,19,25],[39,28,19,26],[39,30,19,28],[40,6,20,8,"base64"],[40,12,20,14],[40,15,20,17,"base64"],[40,21,20,23],[40,22,20,24,"substring"],[40,31,20,33],[40,32,20,34],[40,33,20,35],[40,35,20,37,"base64"],[40,41,20,43],[40,42,20,44,"length"],[40,48,20,50],[40,51,20,53],[40,52,20,54],[40,53,20,55],[40,56,20,58],[40,60,20,62],[41,4,21,4],[42,4,22,4],[42,11,22,11,"base64"],[42,17,22,17],[43,2,23,0],[43,3,23,1],[44,2,24,7],[44,8,24,13,"decode"],[44,14,24,19],[44,17,24,23,"base64"],[44,23,24,29],[44,27,24,34],[45,4,25,4],[45,8,25,8,"bufferLength"],[45,20,25,20],[45,23,25,23,"base64"],[45,29,25,29],[45,30,25,30,"length"],[45,36,25,36],[45,39,25,39],[45,43,25,43],[46,6,25,45,"len"],[46,9,25,48],[46,12,25,51,"base64"],[46,18,25,57],[46,19,25,58,"length"],[46,25,25,64],[47,6,25,66,"i"],[47,7,25,67],[48,6,25,69,"p"],[48,7,25,70],[48,10,25,73],[48,11,25,74],[49,6,25,76,"encoded1"],[49,14,25,84],[50,6,25,86,"encoded2"],[50,14,25,94],[51,6,25,96,"encoded3"],[51,14,25,104],[52,6,25,106,"encoded4"],[52,14,25,114],[53,4,26,4],[53,8,26,8,"base64"],[53,14,26,14],[53,15,26,15,"base64"],[53,21,26,21],[53,22,26,22,"length"],[53,28,26,28],[53,31,26,31],[53,32,26,32],[53,33,26,33],[53,38,26,38],[53,41,26,41],[53,43,26,43],[54,6,27,8,"bufferLength"],[54,18,27,20],[54,20,27,22],[55,6,28,8],[55,10,28,12,"base64"],[55,16,28,18],[55,17,28,19,"base64"],[55,23,28,25],[55,24,28,26,"length"],[55,30,28,32],[55,33,28,35],[55,34,28,36],[55,35,28,37],[55,40,28,42],[55,43,28,45],[55,45,28,47],[56,8,29,12,"bufferLength"],[56,20,29,24],[56,22,29,26],[57,6,30,8],[58,4,31,4],[59,4,32,4],[59,10,32,10,"arraybuffer"],[59,21,32,21],[59,24,32,24],[59,28,32,28,"ArrayBuffer"],[59,39,32,39],[59,40,32,40,"bufferLength"],[59,52,32,52],[59,53,32,53],[60,6,32,55,"bytes"],[60,11,32,60],[60,14,32,63],[60,18,32,67,"Uint8Array"],[60,28,32,77],[60,29,32,78,"arraybuffer"],[60,40,32,89],[60,41,32,90],[61,4,33,4],[61,9,33,9,"i"],[61,10,33,10],[61,13,33,13],[61,14,33,14],[61,16,33,16,"i"],[61,17,33,17],[61,20,33,20,"len"],[61,23,33,23],[61,25,33,25,"i"],[61,26,33,26],[61,30,33,30],[61,31,33,31],[61,33,33,33],[62,6,34,8,"encoded1"],[62,14,34,16],[62,17,34,19,"lookup"],[62,23,34,25],[62,24,34,26,"base64"],[62,30,34,32],[62,31,34,33,"charCodeAt"],[62,41,34,43],[62,42,34,44,"i"],[62,43,34,45],[62,44,34,46],[62,45,34,47],[63,6,35,8,"encoded2"],[63,14,35,16],[63,17,35,19,"lookup"],[63,23,35,25],[63,24,35,26,"base64"],[63,30,35,32],[63,31,35,33,"charCodeAt"],[63,41,35,43],[63,42,35,44,"i"],[63,43,35,45],[63,46,35,48],[63,47,35,49],[63,48,35,50],[63,49,35,51],[64,6,36,8,"encoded3"],[64,14,36,16],[64,17,36,19,"lookup"],[64,23,36,25],[64,24,36,26,"base64"],[64,30,36,32],[64,31,36,33,"charCodeAt"],[64,41,36,43],[64,42,36,44,"i"],[64,43,36,45],[64,46,36,48],[64,47,36,49],[64,48,36,50],[64,49,36,51],[65,6,37,8,"encoded4"],[65,14,37,16],[65,17,37,19,"lookup"],[65,23,37,25],[65,24,37,26,"base64"],[65,30,37,32],[65,31,37,33,"charCodeAt"],[65,41,37,43],[65,42,37,44,"i"],[65,43,37,45],[65,46,37,48],[65,47,37,49],[65,48,37,50],[65,49,37,51],[66,6,38,8,"bytes"],[66,11,38,13],[66,12,38,14,"p"],[66,13,38,15],[66,15,38,17],[66,16,38,18],[66,19,38,22,"encoded1"],[66,27,38,30],[66,31,38,34],[66,32,38,35],[66,35,38,40,"encoded2"],[66,43,38,48],[66,47,38,52],[66,48,38,54],[67,6,39,8,"bytes"],[67,11,39,13],[67,12,39,14,"p"],[67,13,39,15],[67,15,39,17],[67,16,39,18],[67,19,39,22],[67,20,39,23,"encoded2"],[67,28,39,31],[67,31,39,34],[67,33,39,36],[67,38,39,41],[67,39,39,42],[67,42,39,47,"encoded3"],[67,50,39,55],[67,54,39,59],[67,55,39,61],[68,6,40,8,"bytes"],[68,11,40,13],[68,12,40,14,"p"],[68,13,40,15],[68,15,40,17],[68,16,40,18],[68,19,40,22],[68,20,40,23,"encoded3"],[68,28,40,31],[68,31,40,34],[68,32,40,35],[68,37,40,40],[68,38,40,41],[68,41,40,46,"encoded4"],[68,49,40,54],[68,52,40,57],[68,54,40,60],[69,4,41,4],[70,4,42,4],[70,11,42,11,"arraybuffer"],[70,22,42,22],[71,2,43,0],[71,3,43,1],[72,0,43,2],[72,3]],"functionMap":{"names":["<global>","encode","decode"],"mappings":"AAA;sBCO;CDe;sBEC;CFmB"},"hasCjsExports":false},"type":"js/module"}]}