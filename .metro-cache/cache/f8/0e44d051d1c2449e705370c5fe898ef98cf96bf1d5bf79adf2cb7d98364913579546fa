{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"socket.io-client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"LVgCyxgUdze/lYG0kA6DdCAztfM=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":117},"end":{"line":3,"column":39,"index":156}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _socketIoClient = require(_dependencyMap[1], \"socket.io-client\");\n  var _expoConstants = require(_dependencyMap[2], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  const API_URL = Constants.default.expoConfig?.extra?.EXPO_PUBLIC_BACKEND_URL || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  class SocketService {\n    socket = null;\n    isConnected = false;\n    connectionListeners = [];\n    async connect() {\n      try {\n        console.log('ðŸ”µ Connecting to Socket.IO server:', API_URL);\n\n        // Anonymous system - no auth token required\n        this.socket = (0, _socketIoClient.io)(API_URL, {\n          path: '/socket.io/',\n          transports: ['websocket', 'polling'],\n          reconnection: true,\n          reconnectionDelay: 1000,\n          reconnectionAttempts: 5,\n          timeout: 10000\n        });\n        this.socket.on('connect', () => {\n          console.log('Socket connected:', this.socket?.id);\n          this.isConnected = true;\n          this.notifyConnectionListeners(true);\n        });\n        this.socket.on('disconnect', reason => {\n          console.log('Socket disconnected:', reason);\n          this.isConnected = false;\n          this.notifyConnectionListeners(false);\n        });\n        this.socket.on('connect_error', error => {\n          console.error('Connection error:', error.message);\n          this.isConnected = false;\n          this.notifyConnectionListeners(false);\n        });\n        return true;\n      } catch (error) {\n        console.error('Socket connection error:', error);\n        return false;\n      }\n    }\n    disconnect() {\n      if (this.socket) {\n        this.socket.disconnect();\n        this.socket = null;\n        this.isConnected = false;\n      }\n    }\n    emit(event, data) {\n      if (this.socket && this.isConnected) {\n        this.socket.emit(event, data);\n      } else {\n        console.warn('Socket not connected, cannot emit:', event);\n      }\n    }\n    on(event, callback) {\n      if (this.socket) {\n        this.socket.on(event, callback);\n      }\n    }\n    off(event, callback) {\n      if (this.socket) {\n        this.socket.off(event, callback);\n      }\n    }\n    addConnectionListener(callback) {\n      this.connectionListeners.push(callback);\n    }\n    removeConnectionListener(callback) {\n      this.connectionListeners = this.connectionListeners.filter(listener => listener !== callback);\n    }\n    notifyConnectionListeners(isConnected) {\n      this.connectionListeners.forEach(callback => {\n        callback(isConnected);\n      });\n    }\n  }\n  var _default = new SocketService();\n});","lineCount":98,"map":[[12,2,97,0,"Object"],[12,8,97,0],[12,9,97,0,"defineProperty"],[12,23,97,0],[12,24,97,0,"exports"],[12,31,97,0],[13,4,97,0,"enumerable"],[13,14,97,0],[14,4,97,0,"get"],[14,7,97,0],[14,18,97,0,"get"],[14,19,97,0],[15,6,97,0],[15,13,97,0,"_default"],[15,21,97,0],[16,4,97,0],[17,2,97,0],[18,2,97,35],[18,6,97,35,"_expoVirtualEnv"],[18,21,97,35],[18,24,97,35,"require"],[18,31,97,35],[18,32,97,35,"_dependencyMap"],[18,46,97,35],[19,2,1,0],[19,6,1,0,"_socketIoClient"],[19,21,1,0],[19,24,1,0,"require"],[19,31,1,0],[19,32,1,0,"_dependencyMap"],[19,46,1,0],[20,2,3,0],[20,6,3,0,"_expoConstants"],[20,20,3,0],[20,23,3,0,"require"],[20,30,3,0],[20,31,3,0,"_dependencyMap"],[20,45,3,0],[21,2,3,0],[21,6,3,0,"Constants"],[21,15,3,0],[21,18,3,0,"_interopDefault"],[21,33,3,0],[21,34,3,0,"_expoConstants"],[21,48,3,0],[22,2,5,0],[22,8,5,6,"API_URL"],[22,15,5,13],[22,18,5,16,"Constants"],[22,27,5,25],[22,28,5,25,"default"],[22,35,5,25],[22,36,5,26,"expoConfig"],[22,46,5,36],[22,48,5,38,"extra"],[22,53,5,43],[22,55,5,45,"EXPO_PUBLIC_BACKEND_URL"],[22,78,5,68],[22,82,5,68,"_expoVirtualEnv"],[22,97,5,68],[22,98,5,68,"env"],[22,101,5,68],[22,102,5,68,"EXPO_PUBLIC_BACKEND_URL"],[22,125,5,107],[22,129,5,111],[22,152,5,134],[23,2,7,0],[23,8,7,6,"SocketService"],[23,21,7,19],[23,22,7,20],[24,4,8,2,"socket"],[24,10,8,8],[24,13,8,26],[24,17,8,30],[25,4,9,2,"isConnected"],[25,15,9,13],[25,18,9,25],[25,23,9,30],[26,4,10,2,"connectionListeners"],[26,23,10,21],[26,26,10,60],[26,28,10,62],[27,4,12,2],[27,10,12,8,"connect"],[27,17,12,15,"connect"],[27,18,12,15],[27,20,12,18],[28,6,13,4],[28,10,13,8],[29,8,14,6,"console"],[29,15,14,13],[29,16,14,14,"log"],[29,19,14,17],[29,20,14,18],[29,56,14,54],[29,58,14,56,"API_URL"],[29,65,14,63],[29,66,14,64],[31,8,16,6],[32,8,17,6],[32,12,17,10],[32,13,17,11,"socket"],[32,19,17,17],[32,22,17,20],[32,26,17,20,"io"],[32,41,17,22],[32,42,17,22,"io"],[32,44,17,22],[32,46,17,23,"API_URL"],[32,53,17,30],[32,55,17,32],[33,10,18,8,"path"],[33,14,18,12],[33,16,18,14],[33,29,18,27],[34,10,19,8,"transports"],[34,20,19,18],[34,22,19,20],[34,23,19,21],[34,34,19,32],[34,36,19,34],[34,45,19,43],[34,46,19,44],[35,10,20,8,"reconnection"],[35,22,20,20],[35,24,20,22],[35,28,20,26],[36,10,21,8,"reconnectionDelay"],[36,27,21,25],[36,29,21,27],[36,33,21,31],[37,10,22,8,"reconnectionAttempts"],[37,30,22,28],[37,32,22,30],[37,33,22,31],[38,10,23,8,"timeout"],[38,17,23,15],[38,19,23,17],[39,8,24,6],[39,9,24,7],[39,10,24,8],[40,8,26,6],[40,12,26,10],[40,13,26,11,"socket"],[40,19,26,17],[40,20,26,18,"on"],[40,22,26,20],[40,23,26,21],[40,32,26,30],[40,34,26,32],[40,40,26,38],[41,10,27,8,"console"],[41,17,27,15],[41,18,27,16,"log"],[41,21,27,19],[41,22,27,20],[41,41,27,39],[41,43,27,41],[41,47,27,45],[41,48,27,46,"socket"],[41,54,27,52],[41,56,27,54,"id"],[41,58,27,56],[41,59,27,57],[42,10,28,8],[42,14,28,12],[42,15,28,13,"isConnected"],[42,26,28,24],[42,29,28,27],[42,33,28,31],[43,10,29,8],[43,14,29,12],[43,15,29,13,"notifyConnectionListeners"],[43,40,29,38],[43,41,29,39],[43,45,29,43],[43,46,29,44],[44,8,30,6],[44,9,30,7],[44,10,30,8],[45,8,32,6],[45,12,32,10],[45,13,32,11,"socket"],[45,19,32,17],[45,20,32,18,"on"],[45,22,32,20],[45,23,32,21],[45,35,32,33],[45,37,32,36,"reason"],[45,43,32,50],[45,47,32,55],[46,10,33,8,"console"],[46,17,33,15],[46,18,33,16,"log"],[46,21,33,19],[46,22,33,20],[46,44,33,42],[46,46,33,44,"reason"],[46,52,33,50],[46,53,33,51],[47,10,34,8],[47,14,34,12],[47,15,34,13,"isConnected"],[47,26,34,24],[47,29,34,27],[47,34,34,32],[48,10,35,8],[48,14,35,12],[48,15,35,13,"notifyConnectionListeners"],[48,40,35,38],[48,41,35,39],[48,46,35,44],[48,47,35,45],[49,8,36,6],[49,9,36,7],[49,10,36,8],[50,8,38,6],[50,12,38,10],[50,13,38,11,"socket"],[50,19,38,17],[50,20,38,18,"on"],[50,22,38,20],[50,23,38,21],[50,38,38,36],[50,40,38,39,"error"],[50,45,38,51],[50,49,38,56],[51,10,39,8,"console"],[51,17,39,15],[51,18,39,16,"error"],[51,23,39,21],[51,24,39,22],[51,43,39,41],[51,45,39,43,"error"],[51,50,39,48],[51,51,39,49,"message"],[51,58,39,56],[51,59,39,57],[52,10,40,8],[52,14,40,12],[52,15,40,13,"isConnected"],[52,26,40,24],[52,29,40,27],[52,34,40,32],[53,10,41,8],[53,14,41,12],[53,15,41,13,"notifyConnectionListeners"],[53,40,41,38],[53,41,41,39],[53,46,41,44],[53,47,41,45],[54,8,42,6],[54,9,42,7],[54,10,42,8],[55,8,44,6],[55,15,44,13],[55,19,44,17],[56,6,46,4],[56,7,46,5],[56,8,46,6],[56,15,46,13,"error"],[56,20,46,18],[56,22,46,20],[57,8,47,6,"console"],[57,15,47,13],[57,16,47,14,"error"],[57,21,47,19],[57,22,47,20],[57,48,47,46],[57,50,47,48,"error"],[57,55,47,53],[57,56,47,54],[58,8,48,6],[58,15,48,13],[58,20,48,18],[59,6,49,4],[60,4,50,2],[61,4,52,2,"disconnect"],[61,14,52,12,"disconnect"],[61,15,52,12],[61,17,52,15],[62,6,53,4],[62,10,53,8],[62,14,53,12],[62,15,53,13,"socket"],[62,21,53,19],[62,23,53,21],[63,8,54,6],[63,12,54,10],[63,13,54,11,"socket"],[63,19,54,17],[63,20,54,18,"disconnect"],[63,30,54,28],[63,31,54,29],[63,32,54,30],[64,8,55,6],[64,12,55,10],[64,13,55,11,"socket"],[64,19,55,17],[64,22,55,20],[64,26,55,24],[65,8,56,6],[65,12,56,10],[65,13,56,11,"isConnected"],[65,24,56,22],[65,27,56,25],[65,32,56,30],[66,6,57,4],[67,4,58,2],[68,4,60,2,"emit"],[68,8,60,6,"emit"],[68,9,60,7,"event"],[68,14,60,20],[68,16,60,22,"data"],[68,20,60,31],[68,22,60,33],[69,6,61,4],[69,10,61,8],[69,14,61,12],[69,15,61,13,"socket"],[69,21,61,19],[69,25,61,23],[69,29,61,27],[69,30,61,28,"isConnected"],[69,41,61,39],[69,43,61,41],[70,8,62,6],[70,12,62,10],[70,13,62,11,"socket"],[70,19,62,17],[70,20,62,18,"emit"],[70,24,62,22],[70,25,62,23,"event"],[70,30,62,28],[70,32,62,30,"data"],[70,36,62,34],[70,37,62,35],[71,6,63,4],[71,7,63,5],[71,13,63,11],[72,8,64,6,"console"],[72,15,64,13],[72,16,64,14,"warn"],[72,20,64,18],[72,21,64,19],[72,57,64,55],[72,59,64,57,"event"],[72,64,64,62],[72,65,64,63],[73,6,65,4],[74,4,66,2],[75,4,68,2,"on"],[75,6,68,4,"on"],[75,7,68,5,"event"],[75,12,68,18],[75,14,68,20,"callback"],[75,22,68,49],[75,24,68,51],[76,6,69,4],[76,10,69,8],[76,14,69,12],[76,15,69,13,"socket"],[76,21,69,19],[76,23,69,21],[77,8,70,6],[77,12,70,10],[77,13,70,11,"socket"],[77,19,70,17],[77,20,70,18,"on"],[77,22,70,20],[77,23,70,21,"event"],[77,28,70,26],[77,30,70,28,"callback"],[77,38,70,36],[77,39,70,37],[78,6,71,4],[79,4,72,2],[80,4,74,2,"off"],[80,7,74,5,"off"],[80,8,74,6,"event"],[80,13,74,19],[80,15,74,21,"callback"],[80,23,74,51],[80,25,74,53],[81,6,75,4],[81,10,75,8],[81,14,75,12],[81,15,75,13,"socket"],[81,21,75,19],[81,23,75,21],[82,8,76,6],[82,12,76,10],[82,13,76,11,"socket"],[82,19,76,17],[82,20,76,18,"off"],[82,23,76,21],[82,24,76,22,"event"],[82,29,76,27],[82,31,76,29,"callback"],[82,39,76,37],[82,40,76,38],[83,6,77,4],[84,4,78,2],[85,4,80,2,"addConnectionListener"],[85,25,80,23,"addConnectionListener"],[85,26,80,24,"callback"],[85,34,80,64],[85,36,80,66],[86,6,81,4],[86,10,81,8],[86,11,81,9,"connectionListeners"],[86,30,81,28],[86,31,81,29,"push"],[86,35,81,33],[86,36,81,34,"callback"],[86,44,81,42],[86,45,81,43],[87,4,82,2],[88,4,84,2,"removeConnectionListener"],[88,28,84,26,"removeConnectionListener"],[88,29,84,27,"callback"],[88,37,84,67],[88,39,84,69],[89,6,85,4],[89,10,85,8],[89,11,85,9,"connectionListeners"],[89,30,85,28],[89,33,85,31],[89,37,85,35],[89,38,85,36,"connectionListeners"],[89,57,85,55],[89,58,85,56,"filter"],[89,64,85,62],[89,65,86,6,"listener"],[89,73,86,14],[89,77,86,18,"listener"],[89,85,86,26],[89,90,86,31,"callback"],[89,98,87,4],[89,99,87,5],[90,4,88,2],[91,4,90,2,"notifyConnectionListeners"],[91,29,90,27,"notifyConnectionListeners"],[91,30,90,28,"isConnected"],[91,41,90,48],[91,43,90,50],[92,6,91,4],[92,10,91,8],[92,11,91,9,"connectionListeners"],[92,30,91,28],[92,31,91,29,"forEach"],[92,38,91,36],[92,39,91,37,"callback"],[92,47,91,45],[92,51,91,49],[93,8,92,6,"callback"],[93,16,92,14],[93,17,92,15,"isConnected"],[93,28,92,26],[93,29,92,27],[94,6,93,4],[94,7,93,5],[94,8,93,6],[95,4,94,2],[96,2,95,0],[97,2,97,0],[97,6,97,0,"_default"],[97,14,97,0],[97,17,97,15],[97,21,97,19,"SocketService"],[97,34,97,32],[97,35,97,33],[97,36,97,34],[98,0,97,35],[98,3]],"functionMap":{"names":["<global>","SocketService","SocketService#connect","on$argument_1","SocketService#disconnect","SocketService#emit","SocketService#on","SocketService#off","SocketService#addConnectionListener","SocketService#removeConnectionListener","connectionListeners.filter$argument_0","SocketService#notifyConnectionListeners","connectionListeners.forEach$argument_0"],"mappings":"AAA;ACM;ECK;gCCc;ODI;mCCE;ODI;sCCE;ODI;GDQ;EGE;GHM;EIE;GJM;EKE;GLI;EME;GNI;EOE;GPE;EQE;MCE,iCD;GRE;EUE;qCCC;KDE;GVC;CDC"},"hasCjsExports":false},"type":"js/module"}]}