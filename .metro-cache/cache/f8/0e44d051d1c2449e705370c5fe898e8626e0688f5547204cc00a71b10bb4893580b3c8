{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"socket.io-client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"LVgCyxgUdze/lYG0kA6DdCAztfM=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":117},"end":{"line":3,"column":39,"index":156}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _socketIoClient = require(_dependencyMap[1], \"socket.io-client\");\n  var _expoConstants = require(_dependencyMap[2], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  const API_URL = Constants.default.expoConfig?.extra?.EXPO_PUBLIC_BACKEND_URL || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  class SocketService {\n    socket = null;\n    isConnected = false;\n    connectionListeners = [];\n    pendingListeners = [];\n    async connect() {\n      try {\n        console.log('🔵 Connecting to Socket.IO server:', API_URL);\n\n        // Anonymous system - no auth token required\n        this.socket = (0, _socketIoClient.io)(API_URL, {\n          path: '/socket.io/',\n          transports: ['websocket', 'polling'],\n          reconnection: true,\n          reconnectionDelay: 1000,\n          reconnectionAttempts: 5,\n          timeout: 10000\n        });\n        this.socket.on('connect', () => {\n          console.log('✅ Socket connected:', this.socket?.id);\n          this.isConnected = true;\n          this.notifyConnectionListeners(true);\n\n          // Register all pending listeners now that socket is connected\n          console.log(`📝 Registering ${this.pendingListeners.length} pending listeners`);\n          this.pendingListeners.forEach(({\n            event,\n            callback\n          }) => {\n            if (this.socket) {\n              this.socket.on(event, callback);\n              console.log(`✅ Registered listener for: ${event}`);\n            }\n          });\n          this.pendingListeners = [];\n        });\n        this.socket.on('disconnect', reason => {\n          console.log('❌ Socket disconnected:', reason);\n          this.isConnected = false;\n          this.notifyConnectionListeners(false);\n        });\n        this.socket.on('connect_error', error => {\n          console.error('❌ Connection error:', error.message);\n          this.isConnected = false;\n          this.notifyConnectionListeners(false);\n        });\n        return true;\n      } catch (error) {\n        console.error('Socket connection error:', error);\n        return false;\n      }\n    }\n    disconnect() {\n      if (this.socket) {\n        this.socket.disconnect();\n        this.socket = null;\n        this.isConnected = false;\n      }\n    }\n    emit(event, data) {\n      if (this.socket && this.isConnected) {\n        console.log(`📤 Emitting: ${event}`, data);\n        this.socket.emit(event, data);\n      } else {\n        console.warn('⚠️ Socket not connected, cannot emit:', event);\n      }\n    }\n    on(event, callback) {\n      if (this.socket && this.isConnected) {\n        // Socket is already connected, register immediately\n        console.log(`✅ Registering listener immediately for: ${event}`);\n        this.socket.on(event, callback);\n      } else {\n        // Socket not connected yet, queue the listener\n        console.log(`⏳ Queuing listener for: ${event}`);\n        this.pendingListeners.push({\n          event,\n          callback\n        });\n      }\n    }\n    off(event, callback) {\n      if (this.socket) {\n        this.socket.off(event, callback);\n      }\n      // Also remove from pending listeners\n      this.pendingListeners = this.pendingListeners.filter(listener => listener.event !== event || callback && listener.callback !== callback);\n    }\n    addConnectionListener(callback) {\n      this.connectionListeners.push(callback);\n    }\n    removeConnectionListener(callback) {\n      this.connectionListeners = this.connectionListeners.filter(listener => listener !== callback);\n    }\n    notifyConnectionListeners(isConnected) {\n      this.connectionListeners.forEach(callback => {\n        callback(isConnected);\n      });\n    }\n  }\n  var _default = new SocketService();\n});","lineCount":124,"map":[[12,2,119,0,"Object"],[12,8,119,0],[12,9,119,0,"defineProperty"],[12,23,119,0],[12,24,119,0,"exports"],[12,31,119,0],[13,4,119,0,"enumerable"],[13,14,119,0],[14,4,119,0,"get"],[14,7,119,0],[14,18,119,0,"get"],[14,19,119,0],[15,6,119,0],[15,13,119,0,"_default"],[15,21,119,0],[16,4,119,0],[17,2,119,0],[18,2,119,35],[18,6,119,35,"_expoVirtualEnv"],[18,21,119,35],[18,24,119,35,"require"],[18,31,119,35],[18,32,119,35,"_dependencyMap"],[18,46,119,35],[19,2,1,0],[19,6,1,0,"_socketIoClient"],[19,21,1,0],[19,24,1,0,"require"],[19,31,1,0],[19,32,1,0,"_dependencyMap"],[19,46,1,0],[20,2,3,0],[20,6,3,0,"_expoConstants"],[20,20,3,0],[20,23,3,0,"require"],[20,30,3,0],[20,31,3,0,"_dependencyMap"],[20,45,3,0],[21,2,3,0],[21,6,3,0,"Constants"],[21,15,3,0],[21,18,3,0,"_interopDefault"],[21,33,3,0],[21,34,3,0,"_expoConstants"],[21,48,3,0],[22,2,5,0],[22,8,5,6,"API_URL"],[22,15,5,13],[22,18,5,16,"Constants"],[22,27,5,25],[22,28,5,25,"default"],[22,35,5,25],[22,36,5,26,"expoConfig"],[22,46,5,36],[22,48,5,38,"extra"],[22,53,5,43],[22,55,5,45,"EXPO_PUBLIC_BACKEND_URL"],[22,78,5,68],[22,82,5,68,"_expoVirtualEnv"],[22,97,5,68],[22,98,5,68,"env"],[22,101,5,68],[22,102,5,68,"EXPO_PUBLIC_BACKEND_URL"],[22,125,5,107],[22,129,5,111],[22,152,5,134],[23,2,7,0],[23,8,7,6,"SocketService"],[23,21,7,19],[23,22,7,20],[24,4,8,2,"socket"],[24,10,8,8],[24,13,8,26],[24,17,8,30],[25,4,9,2,"isConnected"],[25,15,9,13],[25,18,9,25],[25,23,9,30],[26,4,10,2,"connectionListeners"],[26,23,10,21],[26,26,10,60],[26,28,10,62],[27,4,11,2,"pendingListeners"],[27,20,11,18],[27,23,11,73],[27,25,11,75],[28,4,13,2],[28,10,13,8,"connect"],[28,17,13,15,"connect"],[28,18,13,15],[28,20,13,18],[29,6,14,4],[29,10,14,8],[30,8,15,6,"console"],[30,15,15,13],[30,16,15,14,"log"],[30,19,15,17],[30,20,15,18],[30,56,15,54],[30,58,15,56,"API_URL"],[30,65,15,63],[30,66,15,64],[32,8,17,6],[33,8,18,6],[33,12,18,10],[33,13,18,11,"socket"],[33,19,18,17],[33,22,18,20],[33,26,18,20,"io"],[33,41,18,22],[33,42,18,22,"io"],[33,44,18,22],[33,46,18,23,"API_URL"],[33,53,18,30],[33,55,18,32],[34,10,19,8,"path"],[34,14,19,12],[34,16,19,14],[34,29,19,27],[35,10,20,8,"transports"],[35,20,20,18],[35,22,20,20],[35,23,20,21],[35,34,20,32],[35,36,20,34],[35,45,20,43],[35,46,20,44],[36,10,21,8,"reconnection"],[36,22,21,20],[36,24,21,22],[36,28,21,26],[37,10,22,8,"reconnectionDelay"],[37,27,22,25],[37,29,22,27],[37,33,22,31],[38,10,23,8,"reconnectionAttempts"],[38,30,23,28],[38,32,23,30],[38,33,23,31],[39,10,24,8,"timeout"],[39,17,24,15],[39,19,24,17],[40,8,25,6],[40,9,25,7],[40,10,25,8],[41,8,27,6],[41,12,27,10],[41,13,27,11,"socket"],[41,19,27,17],[41,20,27,18,"on"],[41,22,27,20],[41,23,27,21],[41,32,27,30],[41,34,27,32],[41,40,27,38],[42,10,28,8,"console"],[42,17,28,15],[42,18,28,16,"log"],[42,21,28,19],[42,22,28,20],[42,43,28,41],[42,45,28,43],[42,49,28,47],[42,50,28,48,"socket"],[42,56,28,54],[42,58,28,56,"id"],[42,60,28,58],[42,61,28,59],[43,10,29,8],[43,14,29,12],[43,15,29,13,"isConnected"],[43,26,29,24],[43,29,29,27],[43,33,29,31],[44,10,30,8],[44,14,30,12],[44,15,30,13,"notifyConnectionListeners"],[44,40,30,38],[44,41,30,39],[44,45,30,43],[44,46,30,44],[46,10,32,8],[47,10,33,8,"console"],[47,17,33,15],[47,18,33,16,"log"],[47,21,33,19],[47,22,33,20],[47,40,33,38],[47,44,33,42],[47,45,33,43,"pendingListeners"],[47,61,33,59],[47,62,33,60,"length"],[47,68,33,66],[47,88,33,86],[47,89,33,87],[48,10,34,8],[48,14,34,12],[48,15,34,13,"pendingListeners"],[48,31,34,29],[48,32,34,30,"forEach"],[48,39,34,37],[48,40,34,38],[48,41,34,39],[49,12,34,41,"event"],[49,17,34,46],[50,12,34,48,"callback"],[51,10,34,57],[51,11,34,58],[51,16,34,63],[52,12,35,10],[52,16,35,14],[52,20,35,18],[52,21,35,19,"socket"],[52,27,35,25],[52,29,35,27],[53,14,36,12],[53,18,36,16],[53,19,36,17,"socket"],[53,25,36,23],[53,26,36,24,"on"],[53,28,36,26],[53,29,36,27,"event"],[53,34,36,32],[53,36,36,34,"callback"],[53,44,36,42],[53,45,36,43],[54,14,37,12,"console"],[54,21,37,19],[54,22,37,20,"log"],[54,25,37,23],[54,26,37,24],[54,56,37,54,"event"],[54,61,37,59],[54,63,37,61],[54,64,37,62],[55,12,38,10],[56,10,39,8],[56,11,39,9],[56,12,39,10],[57,10,40,8],[57,14,40,12],[57,15,40,13,"pendingListeners"],[57,31,40,29],[57,34,40,32],[57,36,40,34],[58,8,41,6],[58,9,41,7],[58,10,41,8],[59,8,43,6],[59,12,43,10],[59,13,43,11,"socket"],[59,19,43,17],[59,20,43,18,"on"],[59,22,43,20],[59,23,43,21],[59,35,43,33],[59,37,43,36,"reason"],[59,43,43,50],[59,47,43,55],[60,10,44,8,"console"],[60,17,44,15],[60,18,44,16,"log"],[60,21,44,19],[60,22,44,20],[60,46,44,44],[60,48,44,46,"reason"],[60,54,44,52],[60,55,44,53],[61,10,45,8],[61,14,45,12],[61,15,45,13,"isConnected"],[61,26,45,24],[61,29,45,27],[61,34,45,32],[62,10,46,8],[62,14,46,12],[62,15,46,13,"notifyConnectionListeners"],[62,40,46,38],[62,41,46,39],[62,46,46,44],[62,47,46,45],[63,8,47,6],[63,9,47,7],[63,10,47,8],[64,8,49,6],[64,12,49,10],[64,13,49,11,"socket"],[64,19,49,17],[64,20,49,18,"on"],[64,22,49,20],[64,23,49,21],[64,38,49,36],[64,40,49,39,"error"],[64,45,49,51],[64,49,49,56],[65,10,50,8,"console"],[65,17,50,15],[65,18,50,16,"error"],[65,23,50,21],[65,24,50,22],[65,45,50,43],[65,47,50,45,"error"],[65,52,50,50],[65,53,50,51,"message"],[65,60,50,58],[65,61,50,59],[66,10,51,8],[66,14,51,12],[66,15,51,13,"isConnected"],[66,26,51,24],[66,29,51,27],[66,34,51,32],[67,10,52,8],[67,14,52,12],[67,15,52,13,"notifyConnectionListeners"],[67,40,52,38],[67,41,52,39],[67,46,52,44],[67,47,52,45],[68,8,53,6],[68,9,53,7],[68,10,53,8],[69,8,55,6],[69,15,55,13],[69,19,55,17],[70,6,57,4],[70,7,57,5],[70,8,57,6],[70,15,57,13,"error"],[70,20,57,18],[70,22,57,20],[71,8,58,6,"console"],[71,15,58,13],[71,16,58,14,"error"],[71,21,58,19],[71,22,58,20],[71,48,58,46],[71,50,58,48,"error"],[71,55,58,53],[71,56,58,54],[72,8,59,6],[72,15,59,13],[72,20,59,18],[73,6,60,4],[74,4,61,2],[75,4,63,2,"disconnect"],[75,14,63,12,"disconnect"],[75,15,63,12],[75,17,63,15],[76,6,64,4],[76,10,64,8],[76,14,64,12],[76,15,64,13,"socket"],[76,21,64,19],[76,23,64,21],[77,8,65,6],[77,12,65,10],[77,13,65,11,"socket"],[77,19,65,17],[77,20,65,18,"disconnect"],[77,30,65,28],[77,31,65,29],[77,32,65,30],[78,8,66,6],[78,12,66,10],[78,13,66,11,"socket"],[78,19,66,17],[78,22,66,20],[78,26,66,24],[79,8,67,6],[79,12,67,10],[79,13,67,11,"isConnected"],[79,24,67,22],[79,27,67,25],[79,32,67,30],[80,6,68,4],[81,4,69,2],[82,4,71,2,"emit"],[82,8,71,6,"emit"],[82,9,71,7,"event"],[82,14,71,20],[82,16,71,22,"data"],[82,20,71,31],[82,22,71,33],[83,6,72,4],[83,10,72,8],[83,14,72,12],[83,15,72,13,"socket"],[83,21,72,19],[83,25,72,23],[83,29,72,27],[83,30,72,28,"isConnected"],[83,41,72,39],[83,43,72,41],[84,8,73,6,"console"],[84,15,73,13],[84,16,73,14,"log"],[84,19,73,17],[84,20,73,18],[84,36,73,34,"event"],[84,41,73,39],[84,43,73,41],[84,45,73,43,"data"],[84,49,73,47],[84,50,73,48],[85,8,74,6],[85,12,74,10],[85,13,74,11,"socket"],[85,19,74,17],[85,20,74,18,"emit"],[85,24,74,22],[85,25,74,23,"event"],[85,30,74,28],[85,32,74,30,"data"],[85,36,74,34],[85,37,74,35],[86,6,75,4],[86,7,75,5],[86,13,75,11],[87,8,76,6,"console"],[87,15,76,13],[87,16,76,14,"warn"],[87,20,76,18],[87,21,76,19],[87,60,76,58],[87,62,76,60,"event"],[87,67,76,65],[87,68,76,66],[88,6,77,4],[89,4,78,2],[90,4,80,2,"on"],[90,6,80,4,"on"],[90,7,80,5,"event"],[90,12,80,18],[90,14,80,20,"callback"],[90,22,80,49],[90,24,80,51],[91,6,81,4],[91,10,81,8],[91,14,81,12],[91,15,81,13,"socket"],[91,21,81,19],[91,25,81,23],[91,29,81,27],[91,30,81,28,"isConnected"],[91,41,81,39],[91,43,81,41],[92,8,82,6],[93,8,83,6,"console"],[93,15,83,13],[93,16,83,14,"log"],[93,19,83,17],[93,20,83,18],[93,63,83,61,"event"],[93,68,83,66],[93,70,83,68],[93,71,83,69],[94,8,84,6],[94,12,84,10],[94,13,84,11,"socket"],[94,19,84,17],[94,20,84,18,"on"],[94,22,84,20],[94,23,84,21,"event"],[94,28,84,26],[94,30,84,28,"callback"],[94,38,84,36],[94,39,84,37],[95,6,85,4],[95,7,85,5],[95,13,85,11],[96,8,86,6],[97,8,87,6,"console"],[97,15,87,13],[97,16,87,14,"log"],[97,19,87,17],[97,20,87,18],[97,47,87,45,"event"],[97,52,87,50],[97,54,87,52],[97,55,87,53],[98,8,88,6],[98,12,88,10],[98,13,88,11,"pendingListeners"],[98,29,88,27],[98,30,88,28,"push"],[98,34,88,32],[98,35,88,33],[99,10,88,35,"event"],[99,15,88,40],[100,10,88,42,"callback"],[101,8,88,51],[101,9,88,52],[101,10,88,53],[102,6,89,4],[103,4,90,2],[104,4,92,2,"off"],[104,7,92,5,"off"],[104,8,92,6,"event"],[104,13,92,19],[104,15,92,21,"callback"],[104,23,92,51],[104,25,92,53],[105,6,93,4],[105,10,93,8],[105,14,93,12],[105,15,93,13,"socket"],[105,21,93,19],[105,23,93,21],[106,8,94,6],[106,12,94,10],[106,13,94,11,"socket"],[106,19,94,17],[106,20,94,18,"off"],[106,23,94,21],[106,24,94,22,"event"],[106,29,94,27],[106,31,94,29,"callback"],[106,39,94,37],[106,40,94,38],[107,6,95,4],[108,6,96,4],[109,6,97,4],[109,10,97,8],[109,11,97,9,"pendingListeners"],[109,27,97,25],[109,30,97,28],[109,34,97,32],[109,35,97,33,"pendingListeners"],[109,51,97,49],[109,52,97,50,"filter"],[109,58,97,56],[109,59,98,6,"listener"],[109,67,98,14],[109,71,98,18,"listener"],[109,79,98,26],[109,80,98,27,"event"],[109,85,98,32],[109,90,98,37,"event"],[109,95,98,42],[109,99,98,47,"callback"],[109,107,98,55],[109,111,98,59,"listener"],[109,119,98,67],[109,120,98,68,"callback"],[109,128,98,76],[109,133,98,81,"callback"],[109,141,99,4],[109,142,99,5],[110,4,100,2],[111,4,102,2,"addConnectionListener"],[111,25,102,23,"addConnectionListener"],[111,26,102,24,"callback"],[111,34,102,64],[111,36,102,66],[112,6,103,4],[112,10,103,8],[112,11,103,9,"connectionListeners"],[112,30,103,28],[112,31,103,29,"push"],[112,35,103,33],[112,36,103,34,"callback"],[112,44,103,42],[112,45,103,43],[113,4,104,2],[114,4,106,2,"removeConnectionListener"],[114,28,106,26,"removeConnectionListener"],[114,29,106,27,"callback"],[114,37,106,67],[114,39,106,69],[115,6,107,4],[115,10,107,8],[115,11,107,9,"connectionListeners"],[115,30,107,28],[115,33,107,31],[115,37,107,35],[115,38,107,36,"connectionListeners"],[115,57,107,55],[115,58,107,56,"filter"],[115,64,107,62],[115,65,108,6,"listener"],[115,73,108,14],[115,77,108,18,"listener"],[115,85,108,26],[115,90,108,31,"callback"],[115,98,109,4],[115,99,109,5],[116,4,110,2],[117,4,112,2,"notifyConnectionListeners"],[117,29,112,27,"notifyConnectionListeners"],[117,30,112,28,"isConnected"],[117,41,112,48],[117,43,112,50],[118,6,113,4],[118,10,113,8],[118,11,113,9,"connectionListeners"],[118,30,113,28],[118,31,113,29,"forEach"],[118,38,113,36],[118,39,113,37,"callback"],[118,47,113,45],[118,51,113,49],[119,8,114,6,"callback"],[119,16,114,14],[119,17,114,15,"isConnected"],[119,28,114,26],[119,29,114,27],[120,6,115,4],[120,7,115,5],[120,8,115,6],[121,4,116,2],[122,2,117,0],[123,2,119,0],[123,6,119,0,"_default"],[123,14,119,0],[123,17,119,15],[123,21,119,19,"SocketService"],[123,34,119,32],[123,35,119,33],[123,36,119,34],[124,0,119,35],[124,3]],"functionMap":{"names":["<global>","SocketService","SocketService#connect","on$argument_1","pendingListeners.forEach$argument_0","SocketService#disconnect","SocketService#emit","SocketService#on","SocketService#off","pendingListeners.filter$argument_0","SocketService#addConnectionListener","SocketService#removeConnectionListener","connectionListeners.filter$argument_0","SocketService#notifyConnectionListeners","connectionListeners.forEach$argument_0"],"mappings":"AAA;ACM;ECM;gCCc;sCCO;SDK;ODE;mCCE;ODI;sCCE;ODI;GDQ;EIE;GJM;EKE;GLO;EME;GNU;EOE;MCM,oFD;GPE;ESE;GTE;EUE;MCE,iCD;GVE;EYE;qCCC;KDE;GZC;CDC"},"hasCjsExports":false},"type":"js/module"}]}