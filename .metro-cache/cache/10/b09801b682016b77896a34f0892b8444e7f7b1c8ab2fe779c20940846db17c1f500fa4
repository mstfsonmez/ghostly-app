{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Expose `Emitter`.\n   */\n\n  exports.Emitter = Emitter;\n\n  /**\n   * Initialize a new `Emitter`.\n   *\n   * @api public\n   */\n\n  function Emitter(obj) {\n    if (obj) return mixin(obj);\n  }\n\n  /**\n   * Mixin the emitter properties.\n   *\n   * @param {Object} obj\n   * @return {Object}\n   * @api private\n   */\n\n  function mixin(obj) {\n    for (var key in Emitter.prototype) {\n      obj[key] = Emitter.prototype[key];\n    }\n    return obj;\n  }\n\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   * @return {Emitter}\n   * @api public\n   */\n\n  Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n    this._callbacks = this._callbacks || {};\n    (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   * @return {Emitter}\n   * @api public\n   */\n\n  Emitter.prototype.once = function (event, fn) {\n    function on() {\n      this.off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   * @return {Emitter}\n   * @api public\n   */\n\n  Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n    this._callbacks = this._callbacks || {};\n\n    // all\n    if (0 == arguments.length) {\n      this._callbacks = {};\n      return this;\n    }\n\n    // specific event\n    var callbacks = this._callbacks['$' + event];\n    if (!callbacks) return this;\n\n    // remove all handlers\n    if (1 == arguments.length) {\n      delete this._callbacks['$' + event];\n      return this;\n    }\n\n    // remove specific handler\n    var cb;\n    for (var i = 0; i < callbacks.length; i++) {\n      cb = callbacks[i];\n      if (cb === fn || cb.fn === fn) {\n        callbacks.splice(i, 1);\n        break;\n      }\n    }\n\n    // Remove event specific arrays for event types that no\n    // one is subscribed for to avoid memory leak.\n    if (callbacks.length === 0) {\n      delete this._callbacks['$' + event];\n    }\n    return this;\n  };\n\n  /**\n   * Emit `event` with the given args.\n   *\n   * @param {String} event\n   * @param {Mixed} ...\n   * @return {Emitter}\n   */\n\n  Emitter.prototype.emit = function (event) {\n    this._callbacks = this._callbacks || {};\n    var args = new Array(arguments.length - 1),\n      callbacks = this._callbacks['$' + event];\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n    if (callbacks) {\n      callbacks = callbacks.slice(0);\n      for (var i = 0, len = callbacks.length; i < len; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n    return this;\n  };\n\n  // alias used for reserved events (protected method)\n  Emitter.prototype.emitReserved = Emitter.prototype.emit;\n\n  /**\n   * Return array of callbacks for `event`.\n   *\n   * @param {String} event\n   * @return {Array}\n   * @api public\n   */\n\n  Emitter.prototype.listeners = function (event) {\n    this._callbacks = this._callbacks || {};\n    return this._callbacks['$' + event] || [];\n  };\n\n  /**\n   * Check if this emitter has `event` handlers.\n   *\n   * @param {String} event\n   * @return {Boolean}\n   * @api public\n   */\n\n  Emitter.prototype.hasListeners = function (event) {\n    return !!this.listeners(event).length;\n  };\n});","lineCount":166,"map":[[2,2,2,0],[3,0,3,0],[4,0,4,0],[6,2,6,0,"exports"],[6,9,6,7],[6,10,6,8,"Emitter"],[6,17,6,15],[6,20,6,18,"Emitter"],[6,27,6,25],[8,2,8,0],[9,0,9,0],[10,0,10,0],[11,0,11,0],[12,0,12,0],[14,2,14,0],[14,11,14,9,"Emitter"],[14,18,14,16,"Emitter"],[14,19,14,17,"obj"],[14,22,14,20],[14,24,14,22],[15,4,15,2],[15,8,15,6,"obj"],[15,11,15,9],[15,13,15,11],[15,20,15,18,"mixin"],[15,25,15,23],[15,26,15,24,"obj"],[15,29,15,27],[15,30,15,28],[16,2,16,0],[18,2,18,0],[19,0,19,0],[20,0,20,0],[21,0,21,0],[22,0,22,0],[23,0,23,0],[24,0,24,0],[26,2,26,0],[26,11,26,9,"mixin"],[26,16,26,14,"mixin"],[26,17,26,15,"obj"],[26,20,26,18],[26,22,26,20],[27,4,27,2],[27,9,27,7],[27,13,27,11,"key"],[27,16,27,14],[27,20,27,18,"Emitter"],[27,27,27,25],[27,28,27,26,"prototype"],[27,37,27,35],[27,39,27,37],[28,6,28,4,"obj"],[28,9,28,7],[28,10,28,8,"key"],[28,13,28,11],[28,14,28,12],[28,17,28,15,"Emitter"],[28,24,28,22],[28,25,28,23,"prototype"],[28,34,28,32],[28,35,28,33,"key"],[28,38,28,36],[28,39,28,37],[29,4,29,2],[30,4,30,2],[30,11,30,9,"obj"],[30,14,30,12],[31,2,31,0],[33,2,33,0],[34,0,34,0],[35,0,35,0],[36,0,36,0],[37,0,37,0],[38,0,38,0],[39,0,39,0],[40,0,40,0],[42,2,42,0,"Emitter"],[42,9,42,7],[42,10,42,8,"prototype"],[42,19,42,17],[42,20,42,18,"on"],[42,22,42,20],[42,25,43,0,"Emitter"],[42,32,43,7],[42,33,43,8,"prototype"],[42,42,43,17],[42,43,43,18,"addEventListener"],[42,59,43,34],[42,62,43,37],[42,72,43,46,"event"],[42,77,43,51],[42,79,43,53,"fn"],[42,81,43,55],[42,83,43,56],[43,4,44,2],[43,8,44,6],[43,9,44,7,"_callbacks"],[43,19,44,17],[43,22,44,20],[43,26,44,24],[43,27,44,25,"_callbacks"],[43,37,44,35],[43,41,44,39],[43,42,44,40],[43,43,44,41],[44,4,45,2],[44,5,45,3],[44,9,45,7],[44,10,45,8,"_callbacks"],[44,20,45,18],[44,21,45,19],[44,24,45,22],[44,27,45,25,"event"],[44,32,45,30],[44,33,45,31],[44,36,45,34],[44,40,45,38],[44,41,45,39,"_callbacks"],[44,51,45,49],[44,52,45,50],[44,55,45,53],[44,58,45,56,"event"],[44,63,45,61],[44,64,45,62],[44,68,45,66],[44,70,45,68],[44,72,46,5,"push"],[44,76,46,9],[44,77,46,10,"fn"],[44,79,46,12],[44,80,46,13],[45,4,47,2],[45,11,47,9],[45,15,47,13],[46,2,48,0],[46,3,48,1],[48,2,50,0],[49,0,51,0],[50,0,52,0],[51,0,53,0],[52,0,54,0],[53,0,55,0],[54,0,56,0],[55,0,57,0],[56,0,58,0],[58,2,60,0,"Emitter"],[58,9,60,7],[58,10,60,8,"prototype"],[58,19,60,17],[58,20,60,18,"once"],[58,24,60,22],[58,27,60,25],[58,37,60,34,"event"],[58,42,60,39],[58,44,60,41,"fn"],[58,46,60,43],[58,48,60,44],[59,4,61,2],[59,13,61,11,"on"],[59,15,61,13,"on"],[59,16,61,13],[59,18,61,16],[60,6,62,4],[60,10,62,8],[60,11,62,9,"off"],[60,14,62,12],[60,15,62,13,"event"],[60,20,62,18],[60,22,62,20,"on"],[60,24,62,22],[60,25,62,23],[61,6,63,4,"fn"],[61,8,63,6],[61,9,63,7,"apply"],[61,14,63,12],[61,15,63,13],[61,19,63,17],[61,21,63,19,"arguments"],[61,30,63,28],[61,31,63,29],[62,4,64,2],[63,4,66,2,"on"],[63,6,66,4],[63,7,66,5,"fn"],[63,9,66,7],[63,12,66,10,"fn"],[63,14,66,12],[64,4,67,2],[64,8,67,6],[64,9,67,7,"on"],[64,11,67,9],[64,12,67,10,"event"],[64,17,67,15],[64,19,67,17,"on"],[64,21,67,19],[64,22,67,20],[65,4,68,2],[65,11,68,9],[65,15,68,13],[66,2,69,0],[66,3,69,1],[68,2,71,0],[69,0,72,0],[70,0,73,0],[71,0,74,0],[72,0,75,0],[73,0,76,0],[74,0,77,0],[75,0,78,0],[76,0,79,0],[78,2,81,0,"Emitter"],[78,9,81,7],[78,10,81,8,"prototype"],[78,19,81,17],[78,20,81,18,"off"],[78,23,81,21],[78,26,82,0,"Emitter"],[78,33,82,7],[78,34,82,8,"prototype"],[78,43,82,17],[78,44,82,18,"removeListener"],[78,58,82,32],[78,61,83,0,"Emitter"],[78,68,83,7],[78,69,83,8,"prototype"],[78,78,83,17],[78,79,83,18,"removeAllListeners"],[78,97,83,36],[78,100,84,0,"Emitter"],[78,107,84,7],[78,108,84,8,"prototype"],[78,117,84,17],[78,118,84,18,"removeEventListener"],[78,137,84,37],[78,140,84,40],[78,150,84,49,"event"],[78,155,84,54],[78,157,84,56,"fn"],[78,159,84,58],[78,161,84,59],[79,4,85,2],[79,8,85,6],[79,9,85,7,"_callbacks"],[79,19,85,17],[79,22,85,20],[79,26,85,24],[79,27,85,25,"_callbacks"],[79,37,85,35],[79,41,85,39],[79,42,85,40],[79,43,85,41],[81,4,87,2],[82,4,88,2],[82,8,88,6],[82,9,88,7],[82,13,88,11,"arguments"],[82,22,88,20],[82,23,88,21,"length"],[82,29,88,27],[82,31,88,29],[83,6,89,4],[83,10,89,8],[83,11,89,9,"_callbacks"],[83,21,89,19],[83,24,89,22],[83,25,89,23],[83,26,89,24],[84,6,90,4],[84,13,90,11],[84,17,90,15],[85,4,91,2],[87,4,93,2],[88,4,94,2],[88,8,94,6,"callbacks"],[88,17,94,15],[88,20,94,18],[88,24,94,22],[88,25,94,23,"_callbacks"],[88,35,94,33],[88,36,94,34],[88,39,94,37],[88,42,94,40,"event"],[88,47,94,45],[88,48,94,46],[89,4,95,2],[89,8,95,6],[89,9,95,7,"callbacks"],[89,18,95,16],[89,20,95,18],[89,27,95,25],[89,31,95,29],[91,4,97,2],[92,4,98,2],[92,8,98,6],[92,9,98,7],[92,13,98,11,"arguments"],[92,22,98,20],[92,23,98,21,"length"],[92,29,98,27],[92,31,98,29],[93,6,99,4],[93,13,99,11],[93,17,99,15],[93,18,99,16,"_callbacks"],[93,28,99,26],[93,29,99,27],[93,32,99,30],[93,35,99,33,"event"],[93,40,99,38],[93,41,99,39],[94,6,100,4],[94,13,100,11],[94,17,100,15],[95,4,101,2],[97,4,103,2],[98,4,104,2],[98,8,104,6,"cb"],[98,10,104,8],[99,4,105,2],[99,9,105,7],[99,13,105,11,"i"],[99,14,105,12],[99,17,105,15],[99,18,105,16],[99,20,105,18,"i"],[99,21,105,19],[99,24,105,22,"callbacks"],[99,33,105,31],[99,34,105,32,"length"],[99,40,105,38],[99,42,105,40,"i"],[99,43,105,41],[99,45,105,43],[99,47,105,45],[100,6,106,4,"cb"],[100,8,106,6],[100,11,106,9,"callbacks"],[100,20,106,18],[100,21,106,19,"i"],[100,22,106,20],[100,23,106,21],[101,6,107,4],[101,10,107,8,"cb"],[101,12,107,10],[101,17,107,15,"fn"],[101,19,107,17],[101,23,107,21,"cb"],[101,25,107,23],[101,26,107,24,"fn"],[101,28,107,26],[101,33,107,31,"fn"],[101,35,107,33],[101,37,107,35],[102,8,108,6,"callbacks"],[102,17,108,15],[102,18,108,16,"splice"],[102,24,108,22],[102,25,108,23,"i"],[102,26,108,24],[102,28,108,26],[102,29,108,27],[102,30,108,28],[103,8,109,6],[104,6,110,4],[105,4,111,2],[107,4,113,2],[108,4,114,2],[109,4,115,2],[109,8,115,6,"callbacks"],[109,17,115,15],[109,18,115,16,"length"],[109,24,115,22],[109,29,115,27],[109,30,115,28],[109,32,115,30],[110,6,116,4],[110,13,116,11],[110,17,116,15],[110,18,116,16,"_callbacks"],[110,28,116,26],[110,29,116,27],[110,32,116,30],[110,35,116,33,"event"],[110,40,116,38],[110,41,116,39],[111,4,117,2],[112,4,119,2],[112,11,119,9],[112,15,119,13],[113,2,120,0],[113,3,120,1],[115,2,122,0],[116,0,123,0],[117,0,124,0],[118,0,125,0],[119,0,126,0],[120,0,127,0],[121,0,128,0],[123,2,130,0,"Emitter"],[123,9,130,7],[123,10,130,8,"prototype"],[123,19,130,17],[123,20,130,18,"emit"],[123,24,130,22],[123,27,130,25],[123,37,130,34,"event"],[123,42,130,39],[123,44,130,40],[124,4,131,2],[124,8,131,6],[124,9,131,7,"_callbacks"],[124,19,131,17],[124,22,131,20],[124,26,131,24],[124,27,131,25,"_callbacks"],[124,37,131,35],[124,41,131,39],[124,42,131,40],[124,43,131,41],[125,4,133,2],[125,8,133,6,"args"],[125,12,133,10],[125,15,133,13],[125,19,133,17,"Array"],[125,24,133,22],[125,25,133,23,"arguments"],[125,34,133,32],[125,35,133,33,"length"],[125,41,133,39],[125,44,133,42],[125,45,133,43],[125,46,133,44],[126,6,134,6,"callbacks"],[126,15,134,15],[126,18,134,18],[126,22,134,22],[126,23,134,23,"_callbacks"],[126,33,134,33],[126,34,134,34],[126,37,134,37],[126,40,134,40,"event"],[126,45,134,45],[126,46,134,46],[127,4,136,2],[127,9,136,7],[127,13,136,11,"i"],[127,14,136,12],[127,17,136,15],[127,18,136,16],[127,20,136,18,"i"],[127,21,136,19],[127,24,136,22,"arguments"],[127,33,136,31],[127,34,136,32,"length"],[127,40,136,38],[127,42,136,40,"i"],[127,43,136,41],[127,45,136,43],[127,47,136,45],[128,6,137,4,"args"],[128,10,137,8],[128,11,137,9,"i"],[128,12,137,10],[128,15,137,13],[128,16,137,14],[128,17,137,15],[128,20,137,18,"arguments"],[128,29,137,27],[128,30,137,28,"i"],[128,31,137,29],[128,32,137,30],[129,4,138,2],[130,4,140,2],[130,8,140,6,"callbacks"],[130,17,140,15],[130,19,140,17],[131,6,141,4,"callbacks"],[131,15,141,13],[131,18,141,16,"callbacks"],[131,27,141,25],[131,28,141,26,"slice"],[131,33,141,31],[131,34,141,32],[131,35,141,33],[131,36,141,34],[132,6,142,4],[132,11,142,9],[132,15,142,13,"i"],[132,16,142,14],[132,19,142,17],[132,20,142,18],[132,22,142,20,"len"],[132,25,142,23],[132,28,142,26,"callbacks"],[132,37,142,35],[132,38,142,36,"length"],[132,44,142,42],[132,46,142,44,"i"],[132,47,142,45],[132,50,142,48,"len"],[132,53,142,51],[132,55,142,53],[132,57,142,55,"i"],[132,58,142,56],[132,60,142,58],[133,8,143,6,"callbacks"],[133,17,143,15],[133,18,143,16,"i"],[133,19,143,17],[133,20,143,18],[133,21,143,19,"apply"],[133,26,143,24],[133,27,143,25],[133,31,143,29],[133,33,143,31,"args"],[133,37,143,35],[133,38,143,36],[134,6,144,4],[135,4,145,2],[136,4,147,2],[136,11,147,9],[136,15,147,13],[137,2,148,0],[137,3,148,1],[139,2,150,0],[140,2,151,0,"Emitter"],[140,9,151,7],[140,10,151,8,"prototype"],[140,19,151,17],[140,20,151,18,"emitReserved"],[140,32,151,30],[140,35,151,33,"Emitter"],[140,42,151,40],[140,43,151,41,"prototype"],[140,52,151,50],[140,53,151,51,"emit"],[140,57,151,55],[142,2,153,0],[143,0,154,0],[144,0,155,0],[145,0,156,0],[146,0,157,0],[147,0,158,0],[148,0,159,0],[150,2,161,0,"Emitter"],[150,9,161,7],[150,10,161,8,"prototype"],[150,19,161,17],[150,20,161,18,"listeners"],[150,29,161,27],[150,32,161,30],[150,42,161,39,"event"],[150,47,161,44],[150,49,161,45],[151,4,162,2],[151,8,162,6],[151,9,162,7,"_callbacks"],[151,19,162,17],[151,22,162,20],[151,26,162,24],[151,27,162,25,"_callbacks"],[151,37,162,35],[151,41,162,39],[151,42,162,40],[151,43,162,41],[152,4,163,2],[152,11,163,9],[152,15,163,13],[152,16,163,14,"_callbacks"],[152,26,163,24],[152,27,163,25],[152,30,163,28],[152,33,163,31,"event"],[152,38,163,36],[152,39,163,37],[152,43,163,41],[152,45,163,43],[153,2,164,0],[153,3,164,1],[155,2,166,0],[156,0,167,0],[157,0,168,0],[158,0,169,0],[159,0,170,0],[160,0,171,0],[161,0,172,0],[163,2,174,0,"Emitter"],[163,9,174,7],[163,10,174,8,"prototype"],[163,19,174,17],[163,20,174,18,"hasListeners"],[163,32,174,30],[163,35,174,33],[163,45,174,42,"event"],[163,50,174,47],[163,52,174,48],[164,4,175,2],[164,11,175,9],[164,12,175,10],[164,13,175,12],[164,17,175,16],[164,18,175,17,"listeners"],[164,27,175,26],[164,28,175,27,"event"],[164,33,175,32],[164,34,175,33],[164,35,175,34,"length"],[164,41,175,40],[165,2,176,0],[165,3,176,1],[166,0,176,2],[166,3]],"functionMap":{"names":["<global>","Emitter","mixin","Emitter.prototype.addEventListener","Emitter.prototype.once","on","Emitter.prototype.removeEventListener","Emitter.prototype.emit","Emitter.prototype.listeners","Emitter.prototype.hasListeners"],"mappings":"AAA;ACa;CDE;AEU;CFK;qCGY;CHK;yBIY;ECC;GDG;CJK;wCMe;CNoC;yBOU;CPkB;8BQa;CRG;iCSU;CTE"},"hasCjsExports":true},"type":"js/module"}]}