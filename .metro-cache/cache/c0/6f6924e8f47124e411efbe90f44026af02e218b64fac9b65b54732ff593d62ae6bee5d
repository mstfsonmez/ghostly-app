{"dependencies":[{"name":"./validation","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":23,"index":38},"end":{"line":3,"column":46,"index":61}}],"key":"DtGlBq654swJEbIf2z6Mk/R87pk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  const {\n    tokenChars\n  } = require(_dependencyMap[0], \"./validation\");\n\n  /**\n   * Adds an offer to the map of extension offers or a parameter to the map of\n   * parameters.\n   *\n   * @param {Object} dest The map of extension offers or parameters\n   * @param {String} name The extension or parameter name\n   * @param {(Object|Boolean|String)} elem The extension parameters or the\n   *     parameter value\n   * @private\n   */\n  function push(dest, name, elem) {\n    if (dest[name] === undefined) dest[name] = [elem];else dest[name].push(elem);\n  }\n\n  /**\n   * Parses the `Sec-WebSocket-Extensions` header into an object.\n   *\n   * @param {String} header The field value of the header\n   * @return {Object} The parsed object\n   * @public\n   */\n  function parse(header) {\n    const offers = Object.create(null);\n    let params = Object.create(null);\n    let mustUnescape = false;\n    let isEscaping = false;\n    let inQuotes = false;\n    let extensionName;\n    let paramName;\n    let start = -1;\n    let code = -1;\n    let end = -1;\n    let i = 0;\n    for (; i < header.length; i++) {\n      code = header.charCodeAt(i);\n      if (extensionName === undefined) {\n        if (end === -1 && tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (i !== 0 && (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */) {\n          if (end === -1 && start !== -1) end = i;\n        } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n          if (start === -1) {\n            throw new SyntaxError(`Unexpected character at index ${i}`);\n          }\n          if (end === -1) end = i;\n          const name = header.slice(start, end);\n          if (code === 0x2c) {\n            push(offers, name, params);\n            params = Object.create(null);\n          } else {\n            extensionName = name;\n          }\n          start = end = -1;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (paramName === undefined) {\n        if (end === -1 && tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x20 || code === 0x09) {\n          if (end === -1 && start !== -1) end = i;\n        } else if (code === 0x3b || code === 0x2c) {\n          if (start === -1) {\n            throw new SyntaxError(`Unexpected character at index ${i}`);\n          }\n          if (end === -1) end = i;\n          push(params, header.slice(start, end), true);\n          if (code === 0x2c) {\n            push(offers, extensionName, params);\n            params = Object.create(null);\n            extensionName = undefined;\n          }\n          start = end = -1;\n        } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n          paramName = header.slice(start, i);\n          start = end = -1;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else {\n        //\n        // The value of a quoted-string after unescaping must conform to the\n        // token ABNF, so only token characters are valid.\n        // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n        //\n        if (isEscaping) {\n          if (tokenChars[code] !== 1) {\n            throw new SyntaxError(`Unexpected character at index ${i}`);\n          }\n          if (start === -1) start = i;else if (!mustUnescape) mustUnescape = true;\n          isEscaping = false;\n        } else if (inQuotes) {\n          if (tokenChars[code] === 1) {\n            if (start === -1) start = i;\n          } else if (code === 0x22 /* '\"' */ && start !== -1) {\n            inQuotes = false;\n            end = i;\n          } else if (code === 0x5c /* '\\' */) {\n            isEscaping = true;\n          } else {\n            throw new SyntaxError(`Unexpected character at index ${i}`);\n          }\n        } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n          inQuotes = true;\n        } else if (end === -1 && tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n          if (end === -1) end = i;\n        } else if (code === 0x3b || code === 0x2c) {\n          if (start === -1) {\n            throw new SyntaxError(`Unexpected character at index ${i}`);\n          }\n          if (end === -1) end = i;\n          let value = header.slice(start, end);\n          if (mustUnescape) {\n            value = value.replace(/\\\\/g, '');\n            mustUnescape = false;\n          }\n          push(params, paramName, value);\n          if (code === 0x2c) {\n            push(offers, extensionName, params);\n            params = Object.create(null);\n            extensionName = undefined;\n          }\n          paramName = undefined;\n          start = end = -1;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      }\n    }\n    if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n      throw new SyntaxError('Unexpected end of input');\n    }\n    if (end === -1) end = i;\n    const token = header.slice(start, end);\n    if (extensionName === undefined) {\n      push(offers, token, params);\n    } else {\n      if (paramName === undefined) {\n        push(params, token, true);\n      } else if (mustUnescape) {\n        push(params, paramName, token.replace(/\\\\/g, ''));\n      } else {\n        push(params, paramName, token);\n      }\n      push(offers, extensionName, params);\n    }\n    return offers;\n  }\n\n  /**\n   * Builds the `Sec-WebSocket-Extensions` header field value.\n   *\n   * @param {Object} extensions The map of extensions and parameters to format\n   * @return {String} A string representing the given object\n   * @public\n   */\n  function format(extensions) {\n    return Object.keys(extensions).map(extension => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations.map(params => {\n        return [extension].concat(Object.keys(params).map(k => {\n          let values = params[k];\n          if (!Array.isArray(values)) values = [values];\n          return values.map(v => v === true ? k : `${k}=${v}`).join('; ');\n        })).join('; ');\n      }).join(', ');\n    }).join(', ');\n  }\n  module.exports = {\n    format,\n    parse\n  };\n});","lineCount":183,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,8,3,6],[5,4,3,8,"tokenChars"],[6,2,3,19],[6,3,3,20],[6,6,3,23,"require"],[6,13,3,30],[6,14,3,30,"_dependencyMap"],[6,28,3,30],[6,47,3,45],[6,48,3,46],[8,2,5,0],[9,0,6,0],[10,0,7,0],[11,0,8,0],[12,0,9,0],[13,0,10,0],[14,0,11,0],[15,0,12,0],[16,0,13,0],[17,0,14,0],[18,2,15,0],[18,11,15,9,"push"],[18,15,15,13,"push"],[18,16,15,14,"dest"],[18,20,15,18],[18,22,15,20,"name"],[18,26,15,24],[18,28,15,26,"elem"],[18,32,15,30],[18,34,15,32],[19,4,16,2],[19,8,16,6,"dest"],[19,12,16,10],[19,13,16,11,"name"],[19,17,16,15],[19,18,16,16],[19,23,16,21,"undefined"],[19,32,16,30],[19,34,16,32,"dest"],[19,38,16,36],[19,39,16,37,"name"],[19,43,16,41],[19,44,16,42],[19,47,16,45],[19,48,16,46,"elem"],[19,52,16,50],[19,53,16,51],[19,54,16,52],[19,59,17,7,"dest"],[19,63,17,11],[19,64,17,12,"name"],[19,68,17,16],[19,69,17,17],[19,70,17,18,"push"],[19,74,17,22],[19,75,17,23,"elem"],[19,79,17,27],[19,80,17,28],[20,2,18,0],[22,2,20,0],[23,0,21,0],[24,0,22,0],[25,0,23,0],[26,0,24,0],[27,0,25,0],[28,0,26,0],[29,2,27,0],[29,11,27,9,"parse"],[29,16,27,14,"parse"],[29,17,27,15,"header"],[29,23,27,21],[29,25,27,23],[30,4,28,2],[30,10,28,8,"offers"],[30,16,28,14],[30,19,28,17,"Object"],[30,25,28,23],[30,26,28,24,"create"],[30,32,28,30],[30,33,28,31],[30,37,28,35],[30,38,28,36],[31,4,29,2],[31,8,29,6,"params"],[31,14,29,12],[31,17,29,15,"Object"],[31,23,29,21],[31,24,29,22,"create"],[31,30,29,28],[31,31,29,29],[31,35,29,33],[31,36,29,34],[32,4,30,2],[32,8,30,6,"mustUnescape"],[32,20,30,18],[32,23,30,21],[32,28,30,26],[33,4,31,2],[33,8,31,6,"isEscaping"],[33,18,31,16],[33,21,31,19],[33,26,31,24],[34,4,32,2],[34,8,32,6,"inQuotes"],[34,16,32,14],[34,19,32,17],[34,24,32,22],[35,4,33,2],[35,8,33,6,"extensionName"],[35,21,33,19],[36,4,34,2],[36,8,34,6,"paramName"],[36,17,34,15],[37,4,35,2],[37,8,35,6,"start"],[37,13,35,11],[37,16,35,14],[37,17,35,15],[37,18,35,16],[38,4,36,2],[38,8,36,6,"code"],[38,12,36,10],[38,15,36,13],[38,16,36,14],[38,17,36,15],[39,4,37,2],[39,8,37,6,"end"],[39,11,37,9],[39,14,37,12],[39,15,37,13],[39,16,37,14],[40,4,38,2],[40,8,38,6,"i"],[40,9,38,7],[40,12,38,10],[40,13,38,11],[41,4,40,2],[41,11,40,9,"i"],[41,12,40,10],[41,15,40,13,"header"],[41,21,40,19],[41,22,40,20,"length"],[41,28,40,26],[41,30,40,28,"i"],[41,31,40,29],[41,33,40,31],[41,35,40,33],[42,6,41,4,"code"],[42,10,41,8],[42,13,41,11,"header"],[42,19,41,17],[42,20,41,18,"charCodeAt"],[42,30,41,28],[42,31,41,29,"i"],[42,32,41,30],[42,33,41,31],[43,6,43,4],[43,10,43,8,"extensionName"],[43,23,43,21],[43,28,43,26,"undefined"],[43,37,43,35],[43,39,43,37],[44,8,44,6],[44,12,44,10,"end"],[44,15,44,13],[44,20,44,18],[44,21,44,19],[44,22,44,20],[44,26,44,24,"tokenChars"],[44,36,44,34],[44,37,44,35,"code"],[44,41,44,39],[44,42,44,40],[44,47,44,45],[44,48,44,46],[44,50,44,48],[45,10,45,8],[45,14,45,12,"start"],[45,19,45,17],[45,24,45,22],[45,25,45,23],[45,26,45,24],[45,28,45,26,"start"],[45,33,45,31],[45,36,45,34,"i"],[45,37,45,35],[46,8,46,6],[46,9,46,7],[46,15,46,13],[46,19,47,8,"i"],[46,20,47,9],[46,25,47,14],[46,26,47,15],[46,31,48,9,"code"],[46,35,48,13],[46,40,48,18],[46,44,48,22],[46,45,48,23],[46,58,48,36,"code"],[46,62,48,40],[46,67,48,45],[46,71,48,49],[46,72,48,50],[46,73,48,51],[46,85,49,8],[47,10,50,8],[47,14,50,12,"end"],[47,17,50,15],[47,22,50,20],[47,23,50,21],[47,24,50,22],[47,28,50,26,"start"],[47,33,50,31],[47,38,50,36],[47,39,50,37],[47,40,50,38],[47,42,50,40,"end"],[47,45,50,43],[47,48,50,46,"i"],[47,49,50,47],[48,8,51,6],[48,9,51,7],[48,15,51,13],[48,19,51,17,"code"],[48,23,51,21],[48,28,51,26],[48,32,51,30],[48,33,51,31],[48,46,51,44,"code"],[48,50,51,48],[48,55,51,53],[48,59,51,57],[48,60,51,58],[48,71,51,69],[49,10,52,8],[49,14,52,12,"start"],[49,19,52,17],[49,24,52,22],[49,25,52,23],[49,26,52,24],[49,28,52,26],[50,12,53,10],[50,18,53,16],[50,22,53,20,"SyntaxError"],[50,33,53,31],[50,34,53,32],[50,67,53,65,"i"],[50,68,53,66],[50,70,53,68],[50,71,53,69],[51,10,54,8],[52,10,56,8],[52,14,56,12,"end"],[52,17,56,15],[52,22,56,20],[52,23,56,21],[52,24,56,22],[52,26,56,24,"end"],[52,29,56,27],[52,32,56,30,"i"],[52,33,56,31],[53,10,57,8],[53,16,57,14,"name"],[53,20,57,18],[53,23,57,21,"header"],[53,29,57,27],[53,30,57,28,"slice"],[53,35,57,33],[53,36,57,34,"start"],[53,41,57,39],[53,43,57,41,"end"],[53,46,57,44],[53,47,57,45],[54,10,58,8],[54,14,58,12,"code"],[54,18,58,16],[54,23,58,21],[54,27,58,25],[54,29,58,27],[55,12,59,10,"push"],[55,16,59,14],[55,17,59,15,"offers"],[55,23,59,21],[55,25,59,23,"name"],[55,29,59,27],[55,31,59,29,"params"],[55,37,59,35],[55,38,59,36],[56,12,60,10,"params"],[56,18,60,16],[56,21,60,19,"Object"],[56,27,60,25],[56,28,60,26,"create"],[56,34,60,32],[56,35,60,33],[56,39,60,37],[56,40,60,38],[57,10,61,8],[57,11,61,9],[57,17,61,15],[58,12,62,10,"extensionName"],[58,25,62,23],[58,28,62,26,"name"],[58,32,62,30],[59,10,63,8],[60,10,65,8,"start"],[60,15,65,13],[60,18,65,16,"end"],[60,21,65,19],[60,24,65,22],[60,25,65,23],[60,26,65,24],[61,8,66,6],[61,9,66,7],[61,15,66,13],[62,10,67,8],[62,16,67,14],[62,20,67,18,"SyntaxError"],[62,31,67,29],[62,32,67,30],[62,65,67,63,"i"],[62,66,67,64],[62,68,67,66],[62,69,67,67],[63,8,68,6],[64,6,69,4],[64,7,69,5],[64,13,69,11],[64,17,69,15,"paramName"],[64,26,69,24],[64,31,69,29,"undefined"],[64,40,69,38],[64,42,69,40],[65,8,70,6],[65,12,70,10,"end"],[65,15,70,13],[65,20,70,18],[65,21,70,19],[65,22,70,20],[65,26,70,24,"tokenChars"],[65,36,70,34],[65,37,70,35,"code"],[65,41,70,39],[65,42,70,40],[65,47,70,45],[65,48,70,46],[65,50,70,48],[66,10,71,8],[66,14,71,12,"start"],[66,19,71,17],[66,24,71,22],[66,25,71,23],[66,26,71,24],[66,28,71,26,"start"],[66,33,71,31],[66,36,71,34,"i"],[66,37,71,35],[67,8,72,6],[67,9,72,7],[67,15,72,13],[67,19,72,17,"code"],[67,23,72,21],[67,28,72,26],[67,32,72,30],[67,36,72,34,"code"],[67,40,72,38],[67,45,72,43],[67,49,72,47],[67,51,72,49],[68,10,73,8],[68,14,73,12,"end"],[68,17,73,15],[68,22,73,20],[68,23,73,21],[68,24,73,22],[68,28,73,26,"start"],[68,33,73,31],[68,38,73,36],[68,39,73,37],[68,40,73,38],[68,42,73,40,"end"],[68,45,73,43],[68,48,73,46,"i"],[68,49,73,47],[69,8,74,6],[69,9,74,7],[69,15,74,13],[69,19,74,17,"code"],[69,23,74,21],[69,28,74,26],[69,32,74,30],[69,36,74,34,"code"],[69,40,74,38],[69,45,74,43],[69,49,74,47],[69,51,74,49],[70,10,75,8],[70,14,75,12,"start"],[70,19,75,17],[70,24,75,22],[70,25,75,23],[70,26,75,24],[70,28,75,26],[71,12,76,10],[71,18,76,16],[71,22,76,20,"SyntaxError"],[71,33,76,31],[71,34,76,32],[71,67,76,65,"i"],[71,68,76,66],[71,70,76,68],[71,71,76,69],[72,10,77,8],[73,10,79,8],[73,14,79,12,"end"],[73,17,79,15],[73,22,79,20],[73,23,79,21],[73,24,79,22],[73,26,79,24,"end"],[73,29,79,27],[73,32,79,30,"i"],[73,33,79,31],[74,10,80,8,"push"],[74,14,80,12],[74,15,80,13,"params"],[74,21,80,19],[74,23,80,21,"header"],[74,29,80,27],[74,30,80,28,"slice"],[74,35,80,33],[74,36,80,34,"start"],[74,41,80,39],[74,43,80,41,"end"],[74,46,80,44],[74,47,80,45],[74,49,80,47],[74,53,80,51],[74,54,80,52],[75,10,81,8],[75,14,81,12,"code"],[75,18,81,16],[75,23,81,21],[75,27,81,25],[75,29,81,27],[76,12,82,10,"push"],[76,16,82,14],[76,17,82,15,"offers"],[76,23,82,21],[76,25,82,23,"extensionName"],[76,38,82,36],[76,40,82,38,"params"],[76,46,82,44],[76,47,82,45],[77,12,83,10,"params"],[77,18,83,16],[77,21,83,19,"Object"],[77,27,83,25],[77,28,83,26,"create"],[77,34,83,32],[77,35,83,33],[77,39,83,37],[77,40,83,38],[78,12,84,10,"extensionName"],[78,25,84,23],[78,28,84,26,"undefined"],[78,37,84,35],[79,10,85,8],[80,10,87,8,"start"],[80,15,87,13],[80,18,87,16,"end"],[80,21,87,19],[80,24,87,22],[80,25,87,23],[80,26,87,24],[81,8,88,6],[81,9,88,7],[81,15,88,13],[81,19,88,17,"code"],[81,23,88,21],[81,28,88,26],[81,32,88,30],[81,33,88,31],[81,46,88,44,"start"],[81,51,88,49],[81,56,88,54],[81,57,88,55],[81,58,88,56],[81,62,88,60,"end"],[81,65,88,63],[81,70,88,68],[81,71,88,69],[81,72,88,70],[81,74,88,72],[82,10,89,8,"paramName"],[82,19,89,17],[82,22,89,20,"header"],[82,28,89,26],[82,29,89,27,"slice"],[82,34,89,32],[82,35,89,33,"start"],[82,40,89,38],[82,42,89,40,"i"],[82,43,89,41],[82,44,89,42],[83,10,90,8,"start"],[83,15,90,13],[83,18,90,16,"end"],[83,21,90,19],[83,24,90,22],[83,25,90,23],[83,26,90,24],[84,8,91,6],[84,9,91,7],[84,15,91,13],[85,10,92,8],[85,16,92,14],[85,20,92,18,"SyntaxError"],[85,31,92,29],[85,32,92,30],[85,65,92,63,"i"],[85,66,92,64],[85,68,92,66],[85,69,92,67],[86,8,93,6],[87,6,94,4],[87,7,94,5],[87,13,94,11],[88,8,95,6],[89,8,96,6],[90,8,97,6],[91,8,98,6],[92,8,99,6],[93,8,100,6],[93,12,100,10,"isEscaping"],[93,22,100,20],[93,24,100,22],[94,10,101,8],[94,14,101,12,"tokenChars"],[94,24,101,22],[94,25,101,23,"code"],[94,29,101,27],[94,30,101,28],[94,35,101,33],[94,36,101,34],[94,38,101,36],[95,12,102,10],[95,18,102,16],[95,22,102,20,"SyntaxError"],[95,33,102,31],[95,34,102,32],[95,67,102,65,"i"],[95,68,102,66],[95,70,102,68],[95,71,102,69],[96,10,103,8],[97,10,104,8],[97,14,104,12,"start"],[97,19,104,17],[97,24,104,22],[97,25,104,23],[97,26,104,24],[97,28,104,26,"start"],[97,33,104,31],[97,36,104,34,"i"],[97,37,104,35],[97,38,104,36],[97,43,105,13],[97,47,105,17],[97,48,105,18,"mustUnescape"],[97,60,105,30],[97,62,105,32,"mustUnescape"],[97,74,105,44],[97,77,105,47],[97,81,105,51],[98,10,106,8,"isEscaping"],[98,20,106,18],[98,23,106,21],[98,28,106,26],[99,8,107,6],[99,9,107,7],[99,15,107,13],[99,19,107,17,"inQuotes"],[99,27,107,25],[99,29,107,27],[100,10,108,8],[100,14,108,12,"tokenChars"],[100,24,108,22],[100,25,108,23,"code"],[100,29,108,27],[100,30,108,28],[100,35,108,33],[100,36,108,34],[100,38,108,36],[101,12,109,10],[101,16,109,14,"start"],[101,21,109,19],[101,26,109,24],[101,27,109,25],[101,28,109,26],[101,30,109,28,"start"],[101,35,109,33],[101,38,109,36,"i"],[101,39,109,37],[102,10,110,8],[102,11,110,9],[102,17,110,15],[102,21,110,19,"code"],[102,25,110,23],[102,30,110,28],[102,34,110,32],[102,35,110,33],[102,48,110,46,"start"],[102,53,110,51],[102,58,110,56],[102,59,110,57],[102,60,110,58],[102,62,110,60],[103,12,111,10,"inQuotes"],[103,20,111,18],[103,23,111,21],[103,28,111,26],[104,12,112,10,"end"],[104,15,112,13],[104,18,112,16,"i"],[104,19,112,17],[105,10,113,8],[105,11,113,9],[105,17,113,15],[105,21,113,19,"code"],[105,25,113,23],[105,30,113,28],[105,34,113,32],[105,35,113,33],[105,46,113,44],[106,12,114,10,"isEscaping"],[106,22,114,20],[106,25,114,23],[106,29,114,27],[107,10,115,8],[107,11,115,9],[107,17,115,15],[108,12,116,10],[108,18,116,16],[108,22,116,20,"SyntaxError"],[108,33,116,31],[108,34,116,32],[108,67,116,65,"i"],[108,68,116,66],[108,70,116,68],[108,71,116,69],[109,10,117,8],[110,8,118,6],[110,9,118,7],[110,15,118,13],[110,19,118,17,"code"],[110,23,118,21],[110,28,118,26],[110,32,118,30],[110,36,118,34,"header"],[110,42,118,40],[110,43,118,41,"charCodeAt"],[110,53,118,51],[110,54,118,52,"i"],[110,55,118,53],[110,58,118,56],[110,59,118,57],[110,60,118,58],[110,65,118,63],[110,69,118,67],[110,71,118,69],[111,10,119,8,"inQuotes"],[111,18,119,16],[111,21,119,19],[111,25,119,23],[112,8,120,6],[112,9,120,7],[112,15,120,13],[112,19,120,17,"end"],[112,22,120,20],[112,27,120,25],[112,28,120,26],[112,29,120,27],[112,33,120,31,"tokenChars"],[112,43,120,41],[112,44,120,42,"code"],[112,48,120,46],[112,49,120,47],[112,54,120,52],[112,55,120,53],[112,57,120,55],[113,10,121,8],[113,14,121,12,"start"],[113,19,121,17],[113,24,121,22],[113,25,121,23],[113,26,121,24],[113,28,121,26,"start"],[113,33,121,31],[113,36,121,34,"i"],[113,37,121,35],[114,8,122,6],[114,9,122,7],[114,15,122,13],[114,19,122,17,"start"],[114,24,122,22],[114,29,122,27],[114,30,122,28],[114,31,122,29],[114,36,122,34,"code"],[114,40,122,38],[114,45,122,43],[114,49,122,47],[114,53,122,51,"code"],[114,57,122,55],[114,62,122,60],[114,66,122,64],[114,67,122,65],[114,69,122,67],[115,10,123,8],[115,14,123,12,"end"],[115,17,123,15],[115,22,123,20],[115,23,123,21],[115,24,123,22],[115,26,123,24,"end"],[115,29,123,27],[115,32,123,30,"i"],[115,33,123,31],[116,8,124,6],[116,9,124,7],[116,15,124,13],[116,19,124,17,"code"],[116,23,124,21],[116,28,124,26],[116,32,124,30],[116,36,124,34,"code"],[116,40,124,38],[116,45,124,43],[116,49,124,47],[116,51,124,49],[117,10,125,8],[117,14,125,12,"start"],[117,19,125,17],[117,24,125,22],[117,25,125,23],[117,26,125,24],[117,28,125,26],[118,12,126,10],[118,18,126,16],[118,22,126,20,"SyntaxError"],[118,33,126,31],[118,34,126,32],[118,67,126,65,"i"],[118,68,126,66],[118,70,126,68],[118,71,126,69],[119,10,127,8],[120,10,129,8],[120,14,129,12,"end"],[120,17,129,15],[120,22,129,20],[120,23,129,21],[120,24,129,22],[120,26,129,24,"end"],[120,29,129,27],[120,32,129,30,"i"],[120,33,129,31],[121,10,130,8],[121,14,130,12,"value"],[121,19,130,17],[121,22,130,20,"header"],[121,28,130,26],[121,29,130,27,"slice"],[121,34,130,32],[121,35,130,33,"start"],[121,40,130,38],[121,42,130,40,"end"],[121,45,130,43],[121,46,130,44],[122,10,131,8],[122,14,131,12,"mustUnescape"],[122,26,131,24],[122,28,131,26],[123,12,132,10,"value"],[123,17,132,15],[123,20,132,18,"value"],[123,25,132,23],[123,26,132,24,"replace"],[123,33,132,31],[123,34,132,32],[123,39,132,37],[123,41,132,39],[123,43,132,41],[123,44,132,42],[124,12,133,10,"mustUnescape"],[124,24,133,22],[124,27,133,25],[124,32,133,30],[125,10,134,8],[126,10,135,8,"push"],[126,14,135,12],[126,15,135,13,"params"],[126,21,135,19],[126,23,135,21,"paramName"],[126,32,135,30],[126,34,135,32,"value"],[126,39,135,37],[126,40,135,38],[127,10,136,8],[127,14,136,12,"code"],[127,18,136,16],[127,23,136,21],[127,27,136,25],[127,29,136,27],[128,12,137,10,"push"],[128,16,137,14],[128,17,137,15,"offers"],[128,23,137,21],[128,25,137,23,"extensionName"],[128,38,137,36],[128,40,137,38,"params"],[128,46,137,44],[128,47,137,45],[129,12,138,10,"params"],[129,18,138,16],[129,21,138,19,"Object"],[129,27,138,25],[129,28,138,26,"create"],[129,34,138,32],[129,35,138,33],[129,39,138,37],[129,40,138,38],[130,12,139,10,"extensionName"],[130,25,139,23],[130,28,139,26,"undefined"],[130,37,139,35],[131,10,140,8],[132,10,142,8,"paramName"],[132,19,142,17],[132,22,142,20,"undefined"],[132,31,142,29],[133,10,143,8,"start"],[133,15,143,13],[133,18,143,16,"end"],[133,21,143,19],[133,24,143,22],[133,25,143,23],[133,26,143,24],[134,8,144,6],[134,9,144,7],[134,15,144,13],[135,10,145,8],[135,16,145,14],[135,20,145,18,"SyntaxError"],[135,31,145,29],[135,32,145,30],[135,65,145,63,"i"],[135,66,145,64],[135,68,145,66],[135,69,145,67],[136,8,146,6],[137,6,147,4],[138,4,148,2],[139,4,150,2],[139,8,150,6,"start"],[139,13,150,11],[139,18,150,16],[139,19,150,17],[139,20,150,18],[139,24,150,22,"inQuotes"],[139,32,150,30],[139,36,150,34,"code"],[139,40,150,38],[139,45,150,43],[139,49,150,47],[139,53,150,51,"code"],[139,57,150,55],[139,62,150,60],[139,66,150,64],[139,68,150,66],[140,6,151,4],[140,12,151,10],[140,16,151,14,"SyntaxError"],[140,27,151,25],[140,28,151,26],[140,53,151,51],[140,54,151,52],[141,4,152,2],[142,4,154,2],[142,8,154,6,"end"],[142,11,154,9],[142,16,154,14],[142,17,154,15],[142,18,154,16],[142,20,154,18,"end"],[142,23,154,21],[142,26,154,24,"i"],[142,27,154,25],[143,4,155,2],[143,10,155,8,"token"],[143,15,155,13],[143,18,155,16,"header"],[143,24,155,22],[143,25,155,23,"slice"],[143,30,155,28],[143,31,155,29,"start"],[143,36,155,34],[143,38,155,36,"end"],[143,41,155,39],[143,42,155,40],[144,4,156,2],[144,8,156,6,"extensionName"],[144,21,156,19],[144,26,156,24,"undefined"],[144,35,156,33],[144,37,156,35],[145,6,157,4,"push"],[145,10,157,8],[145,11,157,9,"offers"],[145,17,157,15],[145,19,157,17,"token"],[145,24,157,22],[145,26,157,24,"params"],[145,32,157,30],[145,33,157,31],[146,4,158,2],[146,5,158,3],[146,11,158,9],[147,6,159,4],[147,10,159,8,"paramName"],[147,19,159,17],[147,24,159,22,"undefined"],[147,33,159,31],[147,35,159,33],[148,8,160,6,"push"],[148,12,160,10],[148,13,160,11,"params"],[148,19,160,17],[148,21,160,19,"token"],[148,26,160,24],[148,28,160,26],[148,32,160,30],[148,33,160,31],[149,6,161,4],[149,7,161,5],[149,13,161,11],[149,17,161,15,"mustUnescape"],[149,29,161,27],[149,31,161,29],[150,8,162,6,"push"],[150,12,162,10],[150,13,162,11,"params"],[150,19,162,17],[150,21,162,19,"paramName"],[150,30,162,28],[150,32,162,30,"token"],[150,37,162,35],[150,38,162,36,"replace"],[150,45,162,43],[150,46,162,44],[150,51,162,49],[150,53,162,51],[150,55,162,53],[150,56,162,54],[150,57,162,55],[151,6,163,4],[151,7,163,5],[151,13,163,11],[152,8,164,6,"push"],[152,12,164,10],[152,13,164,11,"params"],[152,19,164,17],[152,21,164,19,"paramName"],[152,30,164,28],[152,32,164,30,"token"],[152,37,164,35],[152,38,164,36],[153,6,165,4],[154,6,166,4,"push"],[154,10,166,8],[154,11,166,9,"offers"],[154,17,166,15],[154,19,166,17,"extensionName"],[154,32,166,30],[154,34,166,32,"params"],[154,40,166,38],[154,41,166,39],[155,4,167,2],[156,4,169,2],[156,11,169,9,"offers"],[156,17,169,15],[157,2,170,0],[159,2,172,0],[160,0,173,0],[161,0,174,0],[162,0,175,0],[163,0,176,0],[164,0,177,0],[165,0,178,0],[166,2,179,0],[166,11,179,9,"format"],[166,17,179,15,"format"],[166,18,179,16,"extensions"],[166,28,179,26],[166,30,179,28],[167,4,180,2],[167,11,180,9,"Object"],[167,17,180,15],[167,18,180,16,"keys"],[167,22,180,20],[167,23,180,21,"extensions"],[167,33,180,31],[167,34,180,32],[167,35,181,5,"map"],[167,38,181,8],[167,39,181,10,"extension"],[167,48,181,19],[167,52,181,24],[168,6,182,6],[168,10,182,10,"configurations"],[168,24,182,24],[168,27,182,27,"extensions"],[168,37,182,37],[168,38,182,38,"extension"],[168,47,182,47],[168,48,182,48],[169,6,183,6],[169,10,183,10],[169,11,183,11,"Array"],[169,16,183,16],[169,17,183,17,"isArray"],[169,24,183,24],[169,25,183,25,"configurations"],[169,39,183,39],[169,40,183,40],[169,42,183,42,"configurations"],[169,56,183,56],[169,59,183,59],[169,60,183,60,"configurations"],[169,74,183,74],[169,75,183,75],[170,6,184,6],[170,13,184,13,"configurations"],[170,27,184,27],[170,28,185,9,"map"],[170,31,185,12],[170,32,185,14,"params"],[170,38,185,20],[170,42,185,25],[171,8,186,10],[171,15,186,17],[171,16,186,18,"extension"],[171,25,186,27],[171,26,186,28],[171,27,187,13,"concat"],[171,33,187,19],[171,34,188,14,"Object"],[171,40,188,20],[171,41,188,21,"keys"],[171,45,188,25],[171,46,188,26,"params"],[171,52,188,32],[171,53,188,33],[171,54,188,34,"map"],[171,57,188,37],[171,58,188,39,"k"],[171,59,188,40],[171,63,188,45],[172,10,189,16],[172,14,189,20,"values"],[172,20,189,26],[172,23,189,29,"params"],[172,29,189,35],[172,30,189,36,"k"],[172,31,189,37],[172,32,189,38],[173,10,190,16],[173,14,190,20],[173,15,190,21,"Array"],[173,20,190,26],[173,21,190,27,"isArray"],[173,28,190,34],[173,29,190,35,"values"],[173,35,190,41],[173,36,190,42],[173,38,190,44,"values"],[173,44,190,50],[173,47,190,53],[173,48,190,54,"values"],[173,54,190,60],[173,55,190,61],[174,10,191,16],[174,17,191,23,"values"],[174,23,191,29],[174,24,192,19,"map"],[174,27,192,22],[174,28,192,24,"v"],[174,29,192,25],[174,33,192,31,"v"],[174,34,192,32],[174,39,192,37],[174,43,192,41],[174,46,192,44,"k"],[174,47,192,45],[174,50,192,48],[174,53,192,51,"k"],[174,54,192,52],[174,58,192,56,"v"],[174,59,192,57],[174,61,192,60],[174,62,192,61],[174,63,193,19,"join"],[174,67,193,23],[174,68,193,24],[174,72,193,28],[174,73,193,29],[175,8,194,14],[175,9,194,15],[175,10,195,12],[175,11,195,13],[175,12,196,13,"join"],[175,16,196,17],[175,17,196,18],[175,21,196,22],[175,22,196,23],[176,6,197,8],[176,7,197,9],[176,8,197,10],[176,9,198,9,"join"],[176,13,198,13],[176,14,198,14],[176,18,198,18],[176,19,198,19],[177,4,199,4],[177,5,199,5],[177,6,199,6],[177,7,200,5,"join"],[177,11,200,9],[177,12,200,10],[177,16,200,14],[177,17,200,15],[178,2,201,0],[179,2,203,0,"module"],[179,8,203,6],[179,9,203,7,"exports"],[179,16,203,14],[179,19,203,17],[180,4,203,19,"format"],[180,10,203,25],[181,4,203,27,"parse"],[182,2,203,33],[182,3,203,34],[183,0,203,35],[183,3]],"functionMap":{"names":["<global>","push","parse","format","Object.keys.map$argument_0","configurations.map$argument_0","values.map$argument_0"],"mappings":"AAA;ACc;CDG;AES;CF+I;AGS;SCE;aCI;sCDG;uBEI,qCF;eCE;SDG;KDE;CHE"},"hasCjsExports":true},"type":"js/module"}]}