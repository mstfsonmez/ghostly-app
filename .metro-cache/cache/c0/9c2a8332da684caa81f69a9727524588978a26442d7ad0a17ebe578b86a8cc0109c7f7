{"dependencies":[{"name":"./commons.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"glGFVKq6JnHqcEVNii1WndfU66Y=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.encodePacketToBinary = encodePacketToBinary;\n  Object.defineProperty(exports, \"encodePacket\", {\n    enumerable: true,\n    get: function () {\n      return encodePacket;\n    }\n  });\n  var _commonsJs = require(_dependencyMap[0], \"./commons.js\");\n  var withNativeBlob = typeof Blob === \"function\" || typeof Blob !== \"undefined\" && Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\";\n  var withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n  // ArrayBuffer.isView method is not defined in IE10\n  var isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\" ? ArrayBuffer.isView(obj) : obj && obj.buffer instanceof ArrayBuffer;\n  };\n  var encodePacket = (_ref, supportsBinary, callback) => {\n    var type = _ref.type,\n      data = _ref.data;\n    if (withNativeBlob && data instanceof Blob) {\n      if (supportsBinary) {\n        return callback(data);\n      } else {\n        return encodeBlobAsBase64(data, callback);\n      }\n    } else if (withNativeArrayBuffer && (data instanceof ArrayBuffer || isView(data))) {\n      if (supportsBinary) {\n        return callback(data);\n      } else {\n        return encodeBlobAsBase64(new Blob([data]), callback);\n      }\n    }\n    // plain string\n    return callback(_commonsJs.PACKET_TYPES[type] + (data || \"\"));\n  };\n  var encodeBlobAsBase64 = (data, callback) => {\n    var fileReader = new FileReader();\n    fileReader.onload = function () {\n      var content = fileReader.result.split(\",\")[1];\n      callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n  };\n  function toArray(data) {\n    if (data instanceof Uint8Array) {\n      return data;\n    } else if (data instanceof ArrayBuffer) {\n      return new Uint8Array(data);\n    } else {\n      return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n  }\n  var TEXT_ENCODER;\n  function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n      return packet.data.arrayBuffer().then(toArray).then(callback);\n    } else if (withNativeArrayBuffer && (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n      return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n      if (!TEXT_ENCODER) {\n        TEXT_ENCODER = new TextEncoder();\n      }\n      callback(TEXT_ENCODER.encode(encoded));\n    });\n  }\n});","lineCount":71,"map":[[7,2,53,0,"exports"],[7,9,53,0],[7,10,53,0,"encodePacketToBinary"],[7,30,53,0],[7,33,53,0,"encodePacketToBinary"],[7,53,53,0],[8,2,68,0,"Object"],[8,8,68,0],[8,9,68,0,"defineProperty"],[8,23,68,0],[8,24,68,0,"exports"],[8,31,68,0],[9,4,68,0,"enumerable"],[9,14,68,0],[10,4,68,0,"get"],[10,7,68,0],[10,18,68,0,"get"],[10,19,68,0],[11,6,68,0],[11,13,68,9,"encodePacket"],[11,25,68,21],[12,4,68,21],[13,2,68,21],[14,2,1,0],[14,6,1,0,"_commonsJs"],[14,16,1,0],[14,19,1,0,"require"],[14,26,1,0],[14,27,1,0,"_dependencyMap"],[14,41,1,0],[15,2,2,0],[15,6,2,6,"withNativeBlob"],[15,20,2,20],[15,23,2,23],[15,30,2,30,"Blob"],[15,34,2,34],[15,39,2,39],[15,49,2,49],[15,53,3,5],[15,60,3,12,"Blob"],[15,64,3,16],[15,69,3,21],[15,80,3,32],[15,84,4,8,"Object"],[15,90,4,14],[15,91,4,15,"prototype"],[15,100,4,24],[15,101,4,25,"toString"],[15,109,4,33],[15,110,4,34,"call"],[15,114,4,38],[15,115,4,39,"Blob"],[15,119,4,43],[15,120,4,44],[15,125,4,49],[15,151,4,76],[16,2,5,0],[16,6,5,6,"withNativeArrayBuffer"],[16,27,5,27],[16,30,5,30],[16,37,5,37,"ArrayBuffer"],[16,48,5,48],[16,53,5,53],[16,63,5,63],[17,2,6,0],[18,2,7,0],[18,6,7,6,"isView"],[18,12,7,12],[18,15,7,16,"obj"],[18,18,7,19],[18,22,7,24],[19,4,8,4],[19,11,8,11],[19,18,8,18,"ArrayBuffer"],[19,29,8,29],[19,30,8,30,"isView"],[19,36,8,36],[19,41,8,41],[19,51,8,51],[19,54,9,10,"ArrayBuffer"],[19,65,9,21],[19,66,9,22,"isView"],[19,72,9,28],[19,73,9,29,"obj"],[19,76,9,32],[19,77,9,33],[19,80,10,10,"obj"],[19,83,10,13],[19,87,10,17,"obj"],[19,90,10,20],[19,91,10,21,"buffer"],[19,97,10,27],[19,109,10,39,"ArrayBuffer"],[19,120,10,50],[20,2,11,0],[20,3,11,1],[21,2,12,0],[21,6,12,6,"encodePacket"],[21,18,12,18],[21,21,12,21,"encodePacket"],[21,22,12,21,"_ref"],[21,26,12,21],[21,28,12,38,"supportsBinary"],[21,42,12,52],[21,44,12,54,"callback"],[21,52,12,62],[21,57,12,67],[22,4,12,67],[22,8,12,24,"type"],[22,12,12,28],[22,15,12,28,"_ref"],[22,19,12,28],[22,20,12,24,"type"],[22,24,12,28],[23,6,12,30,"data"],[23,10,12,34],[23,13,12,34,"_ref"],[23,17,12,34],[23,18,12,30,"data"],[23,22,12,34],[24,4,13,4],[24,8,13,8,"withNativeBlob"],[24,22,13,22],[24,26,13,26,"data"],[24,30,13,30],[24,42,13,42,"Blob"],[24,46,13,46],[24,48,13,48],[25,6,14,8],[25,10,14,12,"supportsBinary"],[25,24,14,26],[25,26,14,28],[26,8,15,12],[26,15,15,19,"callback"],[26,23,15,27],[26,24,15,28,"data"],[26,28,15,32],[26,29,15,33],[27,6,16,8],[27,7,16,9],[27,13,17,13],[28,8,18,12],[28,15,18,19,"encodeBlobAsBase64"],[28,33,18,37],[28,34,18,38,"data"],[28,38,18,42],[28,40,18,44,"callback"],[28,48,18,52],[28,49,18,53],[29,6,19,8],[30,4,20,4],[30,5,20,5],[30,11,21,9],[30,15,21,13,"withNativeArrayBuffer"],[30,36,21,34],[30,41,22,9,"data"],[30,45,22,13],[30,57,22,25,"ArrayBuffer"],[30,68,22,36],[30,72,22,40,"isView"],[30,78,22,46],[30,79,22,47,"data"],[30,83,22,51],[30,84,22,52],[30,85,22,53],[30,87,22,55],[31,6,23,8],[31,10,23,12,"supportsBinary"],[31,24,23,26],[31,26,23,28],[32,8,24,12],[32,15,24,19,"callback"],[32,23,24,27],[32,24,24,28,"data"],[32,28,24,32],[32,29,24,33],[33,6,25,8],[33,7,25,9],[33,13,26,13],[34,8,27,12],[34,15,27,19,"encodeBlobAsBase64"],[34,33,27,37],[34,34,27,38],[34,38,27,42,"Blob"],[34,42,27,46],[34,43,27,47],[34,44,27,48,"data"],[34,48,27,52],[34,49,27,53],[34,50,27,54],[34,52,27,56,"callback"],[34,60,27,64],[34,61,27,65],[35,6,28,8],[36,4,29,4],[37,4,30,4],[38,4,31,4],[38,11,31,11,"callback"],[38,19,31,19],[38,20,31,20,"PACKET_TYPES"],[38,30,31,32],[38,31,31,32,"PACKET_TYPES"],[38,43,31,32],[38,44,31,33,"type"],[38,48,31,37],[38,49,31,38],[38,53,31,42,"data"],[38,57,31,46],[38,61,31,50],[38,63,31,52],[38,64,31,53],[38,65,31,54],[39,2,32,0],[39,3,32,1],[40,2,33,0],[40,6,33,6,"encodeBlobAsBase64"],[40,24,33,24],[40,27,33,27,"encodeBlobAsBase64"],[40,28,33,28,"data"],[40,32,33,32],[40,34,33,34,"callback"],[40,42,33,42],[40,47,33,47],[41,4,34,4],[41,8,34,10,"fileReader"],[41,18,34,20],[41,21,34,23],[41,25,34,27,"FileReader"],[41,35,34,37],[41,36,34,38],[41,37,34,39],[42,4,35,4,"fileReader"],[42,14,35,14],[42,15,35,15,"onload"],[42,21,35,21],[42,24,35,24],[42,36,35,36],[43,6,36,8],[43,10,36,14,"content"],[43,17,36,21],[43,20,36,24,"fileReader"],[43,30,36,34],[43,31,36,35,"result"],[43,37,36,41],[43,38,36,42,"split"],[43,43,36,47],[43,44,36,48],[43,47,36,51],[43,48,36,52],[43,49,36,53],[43,50,36,54],[43,51,36,55],[44,6,37,8,"callback"],[44,14,37,16],[44,15,37,17],[44,18,37,20],[44,22,37,24,"content"],[44,29,37,31],[44,33,37,35],[44,35,37,37],[44,36,37,38],[44,37,37,39],[45,4,38,4],[45,5,38,5],[46,4,39,4],[46,11,39,11,"fileReader"],[46,21,39,21],[46,22,39,22,"readAsDataURL"],[46,35,39,35],[46,36,39,36,"data"],[46,40,39,40],[46,41,39,41],[47,2,40,0],[47,3,40,1],[48,2,41,0],[48,11,41,9,"toArray"],[48,18,41,16,"toArray"],[48,19,41,17,"data"],[48,23,41,21],[48,25,41,23],[49,4,42,4],[49,8,42,8,"data"],[49,12,42,12],[49,24,42,24,"Uint8Array"],[49,34,42,34],[49,36,42,36],[50,6,43,8],[50,13,43,15,"data"],[50,17,43,19],[51,4,44,4],[51,5,44,5],[51,11,45,9],[51,15,45,13,"data"],[51,19,45,17],[51,31,45,29,"ArrayBuffer"],[51,42,45,40],[51,44,45,42],[52,6,46,8],[52,13,46,15],[52,17,46,19,"Uint8Array"],[52,27,46,29],[52,28,46,30,"data"],[52,32,46,34],[52,33,46,35],[53,4,47,4],[53,5,47,5],[53,11,48,9],[54,6,49,8],[54,13,49,15],[54,17,49,19,"Uint8Array"],[54,27,49,29],[54,28,49,30,"data"],[54,32,49,34],[54,33,49,35,"buffer"],[54,39,49,41],[54,41,49,43,"data"],[54,45,49,47],[54,46,49,48,"byteOffset"],[54,56,49,58],[54,58,49,60,"data"],[54,62,49,64],[54,63,49,65,"byteLength"],[54,73,49,75],[54,74,49,76],[55,4,50,4],[56,2,51,0],[57,2,52,0],[57,6,52,4,"TEXT_ENCODER"],[57,18,52,16],[58,2,53,7],[58,11,53,16,"encodePacketToBinary"],[58,31,53,36,"encodePacketToBinary"],[58,32,53,37,"packet"],[58,38,53,43],[58,40,53,45,"callback"],[58,48,53,53],[58,50,53,55],[59,4,54,4],[59,8,54,8,"withNativeBlob"],[59,22,54,22],[59,26,54,26,"packet"],[59,32,54,32],[59,33,54,33,"data"],[59,37,54,37],[59,49,54,49,"Blob"],[59,53,54,53],[59,55,54,55],[60,6,55,8],[60,13,55,15,"packet"],[60,19,55,21],[60,20,55,22,"data"],[60,24,55,26],[60,25,55,27,"arrayBuffer"],[60,36,55,38],[60,37,55,39],[60,38,55,40],[60,39,55,41,"then"],[60,43,55,45],[60,44,55,46,"toArray"],[60,51,55,53],[60,52,55,54],[60,53,55,55,"then"],[60,57,55,59],[60,58,55,60,"callback"],[60,66,55,68],[60,67,55,69],[61,4,56,4],[61,5,56,5],[61,11,57,9],[61,15,57,13,"withNativeArrayBuffer"],[61,36,57,34],[61,41,58,9,"packet"],[61,47,58,15],[61,48,58,16,"data"],[61,52,58,20],[61,64,58,32,"ArrayBuffer"],[61,75,58,43],[61,79,58,47,"isView"],[61,85,58,53],[61,86,58,54,"packet"],[61,92,58,60],[61,93,58,61,"data"],[61,97,58,65],[61,98,58,66],[61,99,58,67],[61,101,58,69],[62,6,59,8],[62,13,59,15,"callback"],[62,21,59,23],[62,22,59,24,"toArray"],[62,29,59,31],[62,30,59,32,"packet"],[62,36,59,38],[62,37,59,39,"data"],[62,41,59,43],[62,42,59,44],[62,43,59,45],[63,4,60,4],[64,4,61,4,"encodePacket"],[64,16,61,16],[64,17,61,17,"packet"],[64,23,61,23],[64,25,61,25],[64,30,61,30],[64,32,61,33,"encoded"],[64,39,61,40],[64,43,61,45],[65,6,62,8],[65,10,62,12],[65,11,62,13,"TEXT_ENCODER"],[65,23,62,25],[65,25,62,27],[66,8,63,12,"TEXT_ENCODER"],[66,20,63,24],[66,23,63,27],[66,27,63,31,"TextEncoder"],[66,38,63,42],[66,39,63,43],[66,40,63,44],[67,6,64,8],[68,6,65,8,"callback"],[68,14,65,16],[68,15,65,17,"TEXT_ENCODER"],[68,27,65,29],[68,28,65,30,"encode"],[68,34,65,36],[68,35,65,37,"encoded"],[68,42,65,44],[68,43,65,45],[68,44,65,46],[69,4,66,4],[69,5,66,5],[69,6,66,6],[70,2,67,0],[71,0,67,1],[71,3]],"functionMap":{"names":["<global>","isView","encodePacket","encodeBlobAsBase64","fileReader.onload","toArray","encodePacketToBinary","encodePacket$argument_2"],"mappings":"AAA;eCM;CDI;qBEC;CFoB;2BGC;wBCE;KDG;CHE;AKC;CLU;OME;gCCQ;KDK;CNC"},"hasCjsExports":false},"type":"js/module"}]}