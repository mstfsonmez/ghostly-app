{"dependencies":[{"name":"engine.io-parser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":48,"index":48}}],"key":"IB5HY76c7xC+tDEPCV8b/nK76DU=","exportNames":["*"],"imports":1}},{"name":"@socket.io/component-emitter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":49},"end":{"line":2,"column":55,"index":104}}],"key":"nWmouVdWEVSQD2UwM6teY1JyKBM=","exportNames":["*"],"imports":1}},{"name":"./util.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":105},"end":{"line":3,"column":50,"index":155}}],"key":"+UpHPazG/Yk8JnTjB6d2Eo+vUl4=","exportNames":["*"],"imports":1}},{"name":"./contrib/parseqs.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":156},"end":{"line":4,"column":46,"index":202}}],"key":"BJ+q1MtlpK8TmoXWscM6udPVjkM=","exportNames":["*"],"imports":1}},{"name":"debug","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":203},"end":{"line":5,"column":32,"index":235}}],"key":"Nx7LMnUOZdRc8E6QIb5nvmtJE+4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"TransportError\", {\n    enumerable: true,\n    get: function () {\n      return TransportError;\n    }\n  });\n  Object.defineProperty(exports, \"Transport\", {\n    enumerable: true,\n    get: function () {\n      return Transport;\n    }\n  });\n  var _engineIoParser = require(_dependencyMap[0], \"engine.io-parser\");\n  var _socketIoComponentEmitter = require(_dependencyMap[1], \"@socket.io/component-emitter\");\n  var _utilJs = require(_dependencyMap[2], \"./util.js\");\n  var _contribParseqsJs = require(_dependencyMap[3], \"./contrib/parseqs.js\");\n  var _debug = require(_dependencyMap[4], \"debug\");\n  var debugModule = _interopDefault(_debug);\n  // debug()\n  const debug = (0, debugModule.default)(\"engine.io-client:transport\"); // debug()\n  class TransportError extends Error {\n    constructor(reason, description, context) {\n      super(reason);\n      this.description = description;\n      this.context = context;\n      this.type = \"TransportError\";\n    }\n  }\n  class Transport extends _socketIoComponentEmitter.Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n      super();\n      this.writable = false;\n      (0, _utilJs.installTimerFunctions)(this, opts);\n      this.opts = opts;\n      this.query = opts.query;\n      this.socket = opts.socket;\n      this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n      super.emitReserved(\"error\", new TransportError(reason, description, context));\n      return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n      this.readyState = \"opening\";\n      this.doOpen();\n      return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n      if (this.readyState === \"opening\" || this.readyState === \"open\") {\n        this.doClose();\n        this.onClose();\n      }\n      return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n      if (this.readyState === \"open\") {\n        this.write(packets);\n      } else {\n        // this might happen if the transport was silently closed in the beforeunload event handler\n        debug(\"transport is not open, discarding packets\");\n      }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n      this.readyState = \"open\";\n      this.writable = true;\n      super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n      const packet = (0, _engineIoParser.decodePacket)(data, this.socket.binaryType);\n      this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n      super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n      this.readyState = \"closed\";\n      super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) {}\n    createUri(schema, query = {}) {\n      return schema + \"://\" + this._hostname() + this._port() + this.opts.path + this._query(query);\n    }\n    _hostname() {\n      const hostname = this.opts.hostname;\n      return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n      if (this.opts.port && (this.opts.secure && Number(this.opts.port !== 443) || !this.opts.secure && Number(this.opts.port) !== 80)) {\n        return \":\" + this.opts.port;\n      } else {\n        return \"\";\n      }\n    }\n    _query(query) {\n      const encodedQuery = (0, _contribParseqsJs.encode)(query);\n      return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n  }\n});","lineCount":162,"map":[[12,2,7,0,"Object"],[12,8,7,0],[12,9,7,0,"defineProperty"],[12,23,7,0],[12,24,7,0,"exports"],[12,31,7,0],[13,4,7,0,"enumerable"],[13,14,7,0],[14,4,7,0,"get"],[14,7,7,0],[14,18,7,0,"get"],[14,19,7,0],[15,6,7,0],[15,13,7,0,"TransportError"],[15,27,7,0],[16,4,7,0],[17,2,7,0],[18,2,15,0,"Object"],[18,8,15,0],[18,9,15,0,"defineProperty"],[18,23,15,0],[18,24,15,0,"exports"],[18,31,15,0],[19,4,15,0,"enumerable"],[19,14,15,0],[20,4,15,0,"get"],[20,7,15,0],[20,18,15,0,"get"],[20,19,15,0],[21,6,15,0],[21,13,15,0,"Transport"],[21,22,15,0],[22,4,15,0],[23,2,15,0],[24,2,1,0],[24,6,1,0,"_engineIoParser"],[24,21,1,0],[24,24,1,0,"require"],[24,31,1,0],[24,32,1,0,"_dependencyMap"],[24,46,1,0],[25,2,2,0],[25,6,2,0,"_socketIoComponentEmitter"],[25,31,2,0],[25,34,2,0,"require"],[25,41,2,0],[25,42,2,0,"_dependencyMap"],[25,56,2,0],[26,2,3,0],[26,6,3,0,"_utilJs"],[26,13,3,0],[26,16,3,0,"require"],[26,23,3,0],[26,24,3,0,"_dependencyMap"],[26,38,3,0],[27,2,4,0],[27,6,4,0,"_contribParseqsJs"],[27,23,4,0],[27,26,4,0,"require"],[27,33,4,0],[27,34,4,0,"_dependencyMap"],[27,48,4,0],[28,2,5,0],[28,6,5,0,"_debug"],[28,12,5,0],[28,15,5,0,"require"],[28,22,5,0],[28,23,5,0,"_dependencyMap"],[28,37,5,0],[29,2,5,0],[29,6,5,0,"debugModule"],[29,17,5,0],[29,20,5,0,"_interopDefault"],[29,35,5,0],[29,36,5,0,"_debug"],[29,42,5,0],[30,2,5,33],[31,2,6,0],[31,8,6,6,"debug"],[31,13,6,11],[31,16,6,14],[31,20,6,14,"debugModule"],[31,31,6,25],[31,32,6,25,"default"],[31,39,6,25],[31,41,6,26],[31,69,6,54],[31,70,6,55],[31,71,6,56],[31,72,6,57],[32,2,7,7],[32,8,7,13,"TransportError"],[32,22,7,27],[32,31,7,36,"Error"],[32,36,7,41],[32,37,7,42],[33,4,8,4,"constructor"],[33,15,8,15,"constructor"],[33,16,8,16,"reason"],[33,22,8,22],[33,24,8,24,"description"],[33,35,8,35],[33,37,8,37,"context"],[33,44,8,44],[33,46,8,46],[34,6,9,8],[34,11,9,13],[34,12,9,14,"reason"],[34,18,9,20],[34,19,9,21],[35,6,10,8],[35,10,10,12],[35,11,10,13,"description"],[35,22,10,24],[35,25,10,27,"description"],[35,36,10,38],[36,6,11,8],[36,10,11,12],[36,11,11,13,"context"],[36,18,11,20],[36,21,11,23,"context"],[36,28,11,30],[37,6,12,8],[37,10,12,12],[37,11,12,13,"type"],[37,15,12,17],[37,18,12,20],[37,34,12,36],[38,4,13,4],[39,2,14,0],[40,2,15,7],[40,8,15,13,"Transport"],[40,17,15,22],[40,26,15,31,"Emitter"],[40,51,15,38],[40,52,15,38,"Emitter"],[40,59,15,38],[40,60,15,39],[41,4,16,4],[42,0,17,0],[43,0,18,0],[44,0,19,0],[45,0,20,0],[46,0,21,0],[47,4,22,4,"constructor"],[47,15,22,15,"constructor"],[47,16,22,16,"opts"],[47,20,22,20],[47,22,22,22],[48,6,23,8],[48,11,23,13],[48,12,23,14],[48,13,23,15],[49,6,24,8],[49,10,24,12],[49,11,24,13,"writable"],[49,19,24,21],[49,22,24,24],[49,27,24,29],[50,6,25,8],[50,10,25,8,"installTimerFunctions"],[50,17,25,29],[50,18,25,29,"installTimerFunctions"],[50,39,25,29],[50,41,25,30],[50,45,25,34],[50,47,25,36,"opts"],[50,51,25,40],[50,52,25,41],[51,6,26,8],[51,10,26,12],[51,11,26,13,"opts"],[51,15,26,17],[51,18,26,20,"opts"],[51,22,26,24],[52,6,27,8],[52,10,27,12],[52,11,27,13,"query"],[52,16,27,18],[52,19,27,21,"opts"],[52,23,27,25],[52,24,27,26,"query"],[52,29,27,31],[53,6,28,8],[53,10,28,12],[53,11,28,13,"socket"],[53,17,28,19],[53,20,28,22,"opts"],[53,24,28,26],[53,25,28,27,"socket"],[53,31,28,33],[54,6,29,8],[54,10,29,12],[54,11,29,13,"supportsBinary"],[54,25,29,27],[54,28,29,30],[54,29,29,31,"opts"],[54,33,29,35],[54,34,29,36,"forceBase64"],[54,45,29,47],[55,4,30,4],[56,4,31,4],[57,0,32,0],[58,0,33,0],[59,0,34,0],[60,0,35,0],[61,0,36,0],[62,0,37,0],[63,0,38,0],[64,0,39,0],[65,4,40,4,"onError"],[65,11,40,11,"onError"],[65,12,40,12,"reason"],[65,18,40,18],[65,20,40,20,"description"],[65,31,40,31],[65,33,40,33,"context"],[65,40,40,40],[65,42,40,42],[66,6,41,8],[66,11,41,13],[66,12,41,14,"emitReserved"],[66,24,41,26],[66,25,41,27],[66,32,41,34],[66,34,41,36],[66,38,41,40,"TransportError"],[66,52,41,54],[66,53,41,55,"reason"],[66,59,41,61],[66,61,41,63,"description"],[66,72,41,74],[66,74,41,76,"context"],[66,81,41,83],[66,82,41,84],[66,83,41,85],[67,6,42,8],[67,13,42,15],[67,17,42,19],[68,4,43,4],[69,4,44,4],[70,0,45,0],[71,0,46,0],[72,4,47,4,"open"],[72,8,47,8,"open"],[72,9,47,8],[72,11,47,11],[73,6,48,8],[73,10,48,12],[73,11,48,13,"readyState"],[73,21,48,23],[73,24,48,26],[73,33,48,35],[74,6,49,8],[74,10,49,12],[74,11,49,13,"doOpen"],[74,17,49,19],[74,18,49,20],[74,19,49,21],[75,6,50,8],[75,13,50,15],[75,17,50,19],[76,4,51,4],[77,4,52,4],[78,0,53,0],[79,0,54,0],[80,4,55,4,"close"],[80,9,55,9,"close"],[80,10,55,9],[80,12,55,12],[81,6,56,8],[81,10,56,12],[81,14,56,16],[81,15,56,17,"readyState"],[81,25,56,27],[81,30,56,32],[81,39,56,41],[81,43,56,45],[81,47,56,49],[81,48,56,50,"readyState"],[81,58,56,60],[81,63,56,65],[81,69,56,71],[81,71,56,73],[82,8,57,12],[82,12,57,16],[82,13,57,17,"doClose"],[82,20,57,24],[82,21,57,25],[82,22,57,26],[83,8,58,12],[83,12,58,16],[83,13,58,17,"onClose"],[83,20,58,24],[83,21,58,25],[83,22,58,26],[84,6,59,8],[85,6,60,8],[85,13,60,15],[85,17,60,19],[86,4,61,4],[87,4,62,4],[88,0,63,0],[89,0,64,0],[90,0,65,0],[91,0,66,0],[92,4,67,4,"send"],[92,8,67,8,"send"],[92,9,67,9,"packets"],[92,16,67,16],[92,18,67,18],[93,6,68,8],[93,10,68,12],[93,14,68,16],[93,15,68,17,"readyState"],[93,25,68,27],[93,30,68,32],[93,36,68,38],[93,38,68,40],[94,8,69,12],[94,12,69,16],[94,13,69,17,"write"],[94,18,69,22],[94,19,69,23,"packets"],[94,26,69,30],[94,27,69,31],[95,6,70,8],[95,7,70,9],[95,13,71,13],[96,8,72,12],[97,8,73,12,"debug"],[97,13,73,17],[97,14,73,18],[97,57,73,61],[97,58,73,62],[98,6,74,8],[99,4,75,4],[100,4,76,4],[101,0,77,0],[102,0,78,0],[103,0,79,0],[104,0,80,0],[105,4,81,4,"onOpen"],[105,10,81,10,"onOpen"],[105,11,81,10],[105,13,81,13],[106,6,82,8],[106,10,82,12],[106,11,82,13,"readyState"],[106,21,82,23],[106,24,82,26],[106,30,82,32],[107,6,83,8],[107,10,83,12],[107,11,83,13,"writable"],[107,19,83,21],[107,22,83,24],[107,26,83,28],[108,6,84,8],[108,11,84,13],[108,12,84,14,"emitReserved"],[108,24,84,26],[108,25,84,27],[108,31,84,33],[108,32,84,34],[109,4,85,4],[110,4,86,4],[111,0,87,0],[112,0,88,0],[113,0,89,0],[114,0,90,0],[115,0,91,0],[116,4,92,4,"onData"],[116,10,92,10,"onData"],[116,11,92,11,"data"],[116,15,92,15],[116,17,92,17],[117,6,93,8],[117,12,93,14,"packet"],[117,18,93,20],[117,21,93,23],[117,25,93,23,"decodePacket"],[117,40,93,35],[117,41,93,35,"decodePacket"],[117,53,93,35],[117,55,93,36,"data"],[117,59,93,40],[117,61,93,42],[117,65,93,46],[117,66,93,47,"socket"],[117,72,93,53],[117,73,93,54,"binaryType"],[117,83,93,64],[117,84,93,65],[118,6,94,8],[118,10,94,12],[118,11,94,13,"onPacket"],[118,19,94,21],[118,20,94,22,"packet"],[118,26,94,28],[118,27,94,29],[119,4,95,4],[120,4,96,4],[121,0,97,0],[122,0,98,0],[123,0,99,0],[124,0,100,0],[125,4,101,4,"onPacket"],[125,12,101,12,"onPacket"],[125,13,101,13,"packet"],[125,19,101,19],[125,21,101,21],[126,6,102,8],[126,11,102,13],[126,12,102,14,"emitReserved"],[126,24,102,26],[126,25,102,27],[126,33,102,35],[126,35,102,37,"packet"],[126,41,102,43],[126,42,102,44],[127,4,103,4],[128,4,104,4],[129,0,105,0],[130,0,106,0],[131,0,107,0],[132,0,108,0],[133,4,109,4,"onClose"],[133,11,109,11,"onClose"],[133,12,109,12,"details"],[133,19,109,19],[133,21,109,21],[134,6,110,8],[134,10,110,12],[134,11,110,13,"readyState"],[134,21,110,23],[134,24,110,26],[134,32,110,34],[135,6,111,8],[135,11,111,13],[135,12,111,14,"emitReserved"],[135,24,111,26],[135,25,111,27],[135,32,111,34],[135,34,111,36,"details"],[135,41,111,43],[135,42,111,44],[136,4,112,4],[137,4,113,4],[138,0,114,0],[139,0,115,0],[140,0,116,0],[141,0,117,0],[142,4,118,4,"pause"],[142,9,118,9,"pause"],[142,10,118,10,"onPause"],[142,17,118,17],[142,19,118,19],[142,20,118,21],[143,4,119,4,"createUri"],[143,13,119,13,"createUri"],[143,14,119,14,"schema"],[143,20,119,20],[143,22,119,22,"query"],[143,27,119,27],[143,30,119,30],[143,31,119,31],[143,32,119,32],[143,34,119,34],[144,6,120,8],[144,13,120,16,"schema"],[144,19,120,22],[144,22,121,12],[144,27,121,17],[144,30,122,12],[144,34,122,16],[144,35,122,17,"_hostname"],[144,44,122,26],[144,45,122,27],[144,46,122,28],[144,49,123,12],[144,53,123,16],[144,54,123,17,"_port"],[144,59,123,22],[144,60,123,23],[144,61,123,24],[144,64,124,12],[144,68,124,16],[144,69,124,17,"opts"],[144,73,124,21],[144,74,124,22,"path"],[144,78,124,26],[144,81,125,12],[144,85,125,16],[144,86,125,17,"_query"],[144,92,125,23],[144,93,125,24,"query"],[144,98,125,29],[144,99,125,30],[145,4,126,4],[146,4,127,4,"_hostname"],[146,13,127,13,"_hostname"],[146,14,127,13],[146,16,127,16],[147,6,128,8],[147,12,128,14,"hostname"],[147,20,128,22],[147,23,128,25],[147,27,128,29],[147,28,128,30,"opts"],[147,32,128,34],[147,33,128,35,"hostname"],[147,41,128,43],[148,6,129,8],[148,13,129,15,"hostname"],[148,21,129,23],[148,22,129,24,"indexOf"],[148,29,129,31],[148,30,129,32],[148,33,129,35],[148,34,129,36],[148,39,129,41],[148,40,129,42],[148,41,129,43],[148,44,129,46,"hostname"],[148,52,129,54],[148,55,129,57],[148,58,129,60],[148,61,129,63,"hostname"],[148,69,129,71],[148,72,129,74],[148,75,129,77],[149,4,130,4],[150,4,131,4,"_port"],[150,9,131,9,"_port"],[150,10,131,9],[150,12,131,12],[151,6,132,8],[151,10,132,12],[151,14,132,16],[151,15,132,17,"opts"],[151,19,132,21],[151,20,132,22,"port"],[151,24,132,26],[151,29,133,14],[151,33,133,18],[151,34,133,19,"opts"],[151,38,133,23],[151,39,133,24,"secure"],[151,45,133,30],[151,49,133,34,"Number"],[151,55,133,40],[151,56,133,41],[151,60,133,45],[151,61,133,46,"opts"],[151,65,133,50],[151,66,133,51,"port"],[151,70,133,55],[151,75,133,60],[151,78,133,63],[151,79,133,64],[151,83,134,17],[151,84,134,18],[151,88,134,22],[151,89,134,23,"opts"],[151,93,134,27],[151,94,134,28,"secure"],[151,100,134,34],[151,104,134,38,"Number"],[151,110,134,44],[151,111,134,45],[151,115,134,49],[151,116,134,50,"opts"],[151,120,134,54],[151,121,134,55,"port"],[151,125,134,59],[151,126,134,60],[151,131,134,65],[151,133,134,68],[151,134,134,69],[151,136,134,71],[152,8,135,12],[152,15,135,19],[152,18,135,22],[152,21,135,25],[152,25,135,29],[152,26,135,30,"opts"],[152,30,135,34],[152,31,135,35,"port"],[152,35,135,39],[153,6,136,8],[153,7,136,9],[153,13,137,13],[154,8,138,12],[154,15,138,19],[154,17,138,21],[155,6,139,8],[156,4,140,4],[157,4,141,4,"_query"],[157,10,141,10,"_query"],[157,11,141,11,"query"],[157,16,141,16],[157,18,141,18],[158,6,142,8],[158,12,142,14,"encodedQuery"],[158,24,142,26],[158,27,142,29],[158,31,142,29,"encode"],[158,48,142,35],[158,49,142,35,"encode"],[158,55,142,35],[158,57,142,36,"query"],[158,62,142,41],[158,63,142,42],[159,6,143,8],[159,13,143,15,"encodedQuery"],[159,25,143,27],[159,26,143,28,"length"],[159,32,143,34],[159,35,143,37],[159,38,143,40],[159,41,143,43,"encodedQuery"],[159,53,143,55],[159,56,143,58],[159,58,143,60],[160,4,144,4],[161,2,145,0],[162,0,145,1],[162,3]],"functionMap":{"names":["<global>","TransportError","TransportError#constructor","Transport","Transport#constructor","Transport#onError","Transport#open","Transport#close","Transport#send","Transport#onOpen","Transport#onData","Transport#onPacket","Transport#onClose","Transport#pause","Transport#createUri","Transport#_hostname","Transport#_port","Transport#_query"],"mappings":"AAA;OCM;ICC;KDK;CDC;OGC;ICO;KDQ;IEU;KFG;IGI;KHI;III;KJM;IKM;KLQ;IMM;KNI;IOO;KPG;IQM;KRE;ISM;KTG;IUM,kBV;IWC;KXO;IYC;KZG;IaC;KbS;IcC;KdG;CHC"},"hasCjsExports":false},"type":"js/module"}]}